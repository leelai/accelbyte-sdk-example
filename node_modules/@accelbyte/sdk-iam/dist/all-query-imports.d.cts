import { AccelByteSDK, SdkSetConfigParam, ApiError } from '@accelbyte/sdk';
import { AxiosError, AxiosResponse } from 'axios';
import { UseQueryOptions, UseQueryResult, UseMutationOptions, UseMutationResult } from '@tanstack/react-query';
import { B as BansV3, a as BanReasonsV3, G as GetUserBanV3Response, L as ListBulkUserBanResponseV3, b as BulkBanCreateRequestV3, c as BulkUnbanCreateRequestV3, C as ClientsV3Response, e as ClientV3Response, d as ClientCreationV3Request, f as ClientsUpdateRequestV3, V as V3ClientUpdateSecretRequest, g as ClientUpdateV3Request, h as ClientPermissionsV3, i as ListTemplatesResponse, P as PermissionSetDeleteGroupRequest, j as ListClientPermissionSet, k as ListUpsertModulesRequest, l as ConfigValueResponseV3, m as CountryResponseArray, n as CountryBlacklistResponse, o as CountryBlacklistRequest, D as DevicesResponseV4, p as DeviceBansResponseV4, q as DeviceBanRequestV4, r as DeviceTypesResponseV4, s as DeviceBannedResponseV4, t as DeviceBanResponseV4, u as DeviceBanUpdateRequestV4, v as DeviceUsersResponseV4, w as DeviceIdDecryptResponseV4, I as InputValidationsResponse, x as InputValidationUpdatePayload, y as LoginAllowlistResponse, z as LoginAllowlistRequest, T as TokenThirdPartyResponse, R as RoleOverrideResponse, A as RoleOverrideUpdateRequest, E as RoleOverrideSourceResponse, F as RoleOverrideStatsUpdateRequest, H as RolePermissionResponseV3, J as GetProfileUpdateStrategyConfigResponse, S as SimpleProfileUpdateStrategyConfigs, U as UpdateProfileUpdateStrategyConfigRequest, K as RoleResponseWithManagersAndPaginationV3, N as RoleV3, M as RoleCreateV3Request, O as ListRoleV4Response, W as RoleV4Response, Q as RoleV4Request, X as RoleResponseV3, Y as RoleUpdateRequestV3, Z as RoleAdminStatusResponseV3, _ as RevokeUserV4Request, $ as ListAssignedUsersV4Response, a1 as AssignedUserV4Response, a0 as AssignUserV4Request, a2 as RoleMembersRequestV3, a3 as RoleMembersResponseV3, a4 as RoleManagersRequestV3, a5 as RoleManagersResponsesV3, a6 as PermissionsV3, a7 as SsoPlatformCredentialResponseArray, a8 as SsoPlatformCredentialResponse, a9 as SsoPlatformCredentialRequest, aa as CheckAvailabilityResponse, ab as ThirdPartyLoginPlatformCredentialResponseArray, ac as ThirdPartyLoginPlatformCredentialResponse, ad as ThirdPartyLoginPlatformCredentialRequest, ae as PlatformDomainDeleteRequest, ag as PlatformDomainResponse, af as PlatformDomainUpdateRequest, ah as UserResponseV3, ai as SearchUsersByPlatformIdResponse, aj as UsersUpdateRequestV3, ak as GetUsersResponseWithPaginationV3, al as GetBulkUserBansRequest, an as ListUserInformationResult, am as UserIDsRequest, ap as InviteUserResponseV3, ao as InviteUserRequestV3, aq as SearchUsersResponseWithPaginationV3, ar as UserResponse, as as UserUpdateRequest, at as UserUpdateRequestV3, au as AgeRestrictionResponse, av as AgeRestrictionRequest, aw as AgeRestrictionResponseV3, ax as AgeRestrictionRequestV3, ay as ListEmailAddressRequest, az as ListUserResponseV3, aB as UserBanResponse, aA as BanCreateRequest, aC as UserBanResponseArray, aD as UserBanResponseV3, aE as LinkingHistoryResponseWithPaginationV3, aF as VerificationCodeResponse, aG as NamespaceRoleRequest, aH as ListBulkUserPlatformsResponse, aI as UpdateUserStatusRequest, aJ as DisableUserRequest, aL as Country, aK as CountryAgeRestrictionRequest, aM as UserPasswordUpdateRequest, aN as UserPasswordUpdateV3Request, aO as ListUsersWithPlatformAccountsResponse, aP as UserLinkedPlatformsResponseV3, aQ as CountryAgeRestrictionArray, aR as CountryV3ResponseArray, aS as UserVerificationRequest, aT as PermissionDeleteRequest, aU as Permissions, aV as BanUpdateRequest, aW as GetUserBanSummaryV3, aX as SendVerificationCodeRequestV3, aY as PlatformUserIdRequest, aZ as UserPlatforms, a_ as LinkPlatformAccountRequest, a$ as UserDeletionStatusResponse, b0 as UpdateUserDeletionStatusRequest, b1 as LoginHistoriesResponse, b2 as UserIdentityUpdateRequestV3, b3 as DistinctPlatformResponseV3, b4 as GetUserMappingArray, b5 as UpgradeHeadlessAccountWithVerificationCodeRequestV3, b6 as UnlinkUserPlatformRequest, b8 as CountryV3Response, b7 as CountryAgeRestrictionV3Request, b9 as UserPlatformLinkHistories, ba as UserPlatformMetadata, bb as TokenThirdPartyLinkStatusResponse, bc as GetUserMappingV3, bd as CreateJusticeUserResponse, be as InviteUserRequestV4, bf as ListInvitationHistoriesV4Response, bg as EnabledFactorsResponseV4, bh as UserMfaStatusResponseV4, bi as BackupCodesResponseV4, bj as DisableMfaRequest, bl as CreateUserResponseV4, bk as CreateUserRequestV4, bm as UserMfaTokenResponseV4, bn as AuthenticatorKeyResponseV4, bp as CreateTestUsersResponseV4, bo as CreateTestUsersRequestV4, bq as InvitationHistoryResponse, br as CheckValidUserIdRequestV4, bs as ListValidUserIdResponseV4, bt as EmailUpdateRequestV4, bu as RemoveUserRoleV4Request, bv as ListUserRolesV4Response, bw as AddUserRoleV4Request, bx as BulkAccountTypeUpdateRequestV4, by as NamespaceInvitationHistoryUserV4Response, bz as Bans, bA as BanReasons, bB as ClientResponseArray, bD as ClientCreationResponse, bC as ClientCreateRequest, bE as ClientResponse, bF as ClientUpdateRequest, bG as ClientUpdateSecretRequest, bH as ClientPermissions, bI as InputValidationsPublicResponse, bJ as InputValidationConfigVersion, bK as JwkSet, bL as TokenResponse, bM as RevocationList, bN as TokenWithDeviceCookieResponseV3, bO as TokenResponseV3, bP as TokenIntrospectResponse, bQ as CountryLocationResponse, bR as OneTimeLinkingCodeResponse, bS as OneTimeLinkingCodeValidationResponse, bT as TargetTokenCodeResponse, bU as PlatformTokenRefreshResponseV3, bV as RoleResponseWithManagersArray, bX as Role, bW as RoleCreateRequest, bY as RoleResponse, bZ as RoleUpdateRequest, b_ as RoleNamesResponseV3, b$ as RoleAdminStatusResponse, c0 as RoleMembersRequest, c1 as RoleMembersResponse, c2 as RoleManagersRequest, c3 as RoleManagersResponse, c4 as UpdatePermissionScheduleRequest, c5 as PublicThirdPartyPlatformInfoArray, c7 as UserCreateResponse, c6 as UserCreateRequest, c8 as UserProfileUpdateAllowStatus, c9 as GetAdminUsersResponse, ca as SearchUsersResponse, cb as PublicUserResponse, cc as PublicUserInformationResponseV3, ce as UserCreateResponseV3, cd as UserCreateRequestV3, cf as SendVerificationLinkRequest, cg as PublicUserUpdateRequestV3, ch as GetLinkHeadlessAccountConflictResponse, ci as ResetPasswordRequest, cj as SendVerificationCodeRequest, ck as PublicUsersResponse, cl as ResetPasswordRequestV3, cm as ForgotPasswordRequestV3, cn as UserLinkedPlatformArray, co as GetPublisherUserResponse, cp as UserResponseArray, cq as PublicUserResponseV3, cr as LinkHeadlessAccountRequest, ct as UsersPlatformInfosResponse, cs as UsersPlatformInfosRequestV3, cu as UserInformation, cv as ListBulkUserResponse, cw as VerifyRegistrationCode, cx as SendRegisterVerificationCodeRequest, cy as UserVerificationRequestV3, cA as UserInputValidationResponse, cz as UserInputValidationRequest, cB as UpgradeHeadlessAccountV3Request, cC as UserInformationV3, cD as UpgradeHeadlessAccountRequest, cE as UserInvitationV3, cF as GetUserMappingV3Array, cG as LinkRequest, cH as GetUserMapping, cI as GetUserJusticePlatformAccountResponse, cJ as WebLinkingResponse, cK as LinkPlatformAccountWithProgressionRequest, cL as UpgradeHeadlessAccountWithVerificationCodeRequest, cM as PublicInviteUserRequestV4, cN as CreateTestUserRequestV4, cO as UserPublicInfoResponseV4, cQ as UserResponseV4, cP as UpgradeHeadlessAccountRequestV4, cR as PlatformUserIdRequestV4, cS as UpgradeHeadlessAccountWithVerificationCodeRequestV4 } from './WebLinkingResponse-5G8l5aiY.cjs';
import 'zod';

/**
 * AUTO GENERATED
 */

declare enum Key_BansAdmin {
    Bans_v3 = "Iam.BansAdmin.Bans_v3",
    BansReasons_v3 = "Iam.BansAdmin.BansReasons_v3",
    Bantypes_v3 = "Iam.BansAdmin.Bantypes_v3",
    BansUsers_v3 = "Iam.BansAdmin.BansUsers_v3",
    BanUser_v3 = "Iam.BansAdmin.BanUser_v3",
    BanUserDisabled_v3 = "Iam.BansAdmin.BanUserDisabled_v3"
}
/**
 * Ban type is the code available for ban assignment. It is applicable globally for any namespace. action code : 10201
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_BansAdmin.Bans_v3, input]
 * }
 * ```
 */
declare const useBansAdminApi_GetBans_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<BansV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<BansV3>) => void) => UseQueryResult<BansV3, AxiosError<ApiError>>;
/**
 * Ban reasons is the code available to justify ban assignment. It is applicable globally for any namespace. action code : 10202
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_BansAdmin.BansReasons_v3, input]
 * }
 * ```
 */
declare const useBansAdminApi_GetBansReasons_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<BanReasonsV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<BanReasonsV3>) => void) => UseQueryResult<BanReasonsV3, AxiosError<ApiError>>;
/**
 * Ban type is the code available for ban assignment. It is applicable globally for any namespace. action code : 10201
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_BansAdmin.Bantypes_v3, input]
 * }
 * ```
 */
declare const useBansAdminApi_GetBantypes_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<BansV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<BansV3>) => void) => UseQueryResult<BansV3, AxiosError<ApiError>>;
/**
 * Ban type is the code available for ban assignment. It is applicable globally for any namespace. action code : 10201
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_BansAdmin.BansUsers_v3, input]
 * }
 * ```
 */
declare const useBansAdminApi_GetBansUsers_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        activeOnly?: boolean | null;
        banType?: string | null;
        limit?: number;
        offset?: number;
    };
}, options?: Omit<UseQueryOptions<GetUserBanV3Response, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetUserBanV3Response>) => void) => UseQueryResult<GetUserBanV3Response, AxiosError<ApiError>>;
/**
 * Bulk ban user with specific type of ban. Ban types and reason can be queried. The maximum limit value is 100 userIDs action code : 10141
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_BansAdmin.BanUser_v3, input]
 * }
 * ```
 */
declare const useBansAdminApi_CreateBanUserMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<ListBulkUserBanResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: BulkBanCreateRequestV3;
}>, "mutationKey">, callback?: (data: ListBulkUserBanResponseV3) => void) => UseMutationResult<ListBulkUserBanResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: BulkBanCreateRequestV3;
}>;
/**
 * disable bulk ban user. The maximum limit value is 100 action code : 10142
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_BansAdmin.BanUserDisabled_v3, input]
 * }
 * ```
 */
declare const useBansAdminApi_PatchBanUserDisabledMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<ListBulkUserBanResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: BulkUnbanCreateRequestV3;
}>, "mutationKey">, callback?: (data: ListBulkUserBanResponseV3) => void) => UseMutationResult<ListBulkUserBanResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: BulkUnbanCreateRequestV3;
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_ClientsAdmin {
    Clients_v3 = "Iam.ClientsAdmin.Clients_v3",
    Client_v3 = "Iam.ClientsAdmin.Client_v3",
    Secret_ByClientId_v3 = "Iam.ClientsAdmin.Secret_ByClientId_v3",
    Client_ByClientId_v3 = "Iam.ClientsAdmin.Client_ByClientId_v3",
    Permission_ByClientId_v3 = "Iam.ClientsAdmin.Permission_ByClientId_v3",
    Permission_ByClientId_ByNS_v3 = "Iam.ClientsAdmin.Permission_ByClientId_ByNS_v3",
    Permission_ByClientId_ByResource_ByAction_v3 = "Iam.ClientsAdmin.Permission_ByClientId_ByResource_ByAction_v3"
}
/**
 * action code: 10308
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ClientsAdmin.Clients_v3, input]
 * }
 * ```
 */
declare const useClientsAdminApi_GetClients_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        clientId?: string | null;
        clientName?: string | null;
        clientType?: string | null;
        limit?: number;
        offset?: number;
        skipLoginQueue?: boolean | null;
    };
}, options?: Omit<UseQueryOptions<ClientsV3Response, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ClientsV3Response>) => void) => UseQueryResult<ClientsV3Response, AxiosError<ApiError>>;
/**
 * Add a new OAuth 2.0 client A new client automatically granted with these scopes: commerce, account, analytics, publishing, social. **Note for Multi Tenant Mode (Confidential Client):** Only Super admin can set permission with resource &amp; action. Studio admin &amp; game admin need set permission with permission module. action code: 10301 **Fields Description:** - **clientId** : The client ID. e.g f815e5c44f364993961be3b3f26a7bf4 - **clientName** : The client name. e.g E-commerce - **secret** : The client&#39;s secret. It&#39;s empty if the client&#39;s type is a public client. Otherwise, the client secret is required - **namespace** : The namespace where the client lives. e.g sample-game - **redirectUri** : Contains the redirect URI used in OAuth callback. e.g https://example.net/platform - **oauthClientType** : The OAuth 2.0 client type. The client type determines whether the authorization needs Proof Of Key Exchange or not. A public client type doesn&#39;t have a client secret and should use PKCE flow. A confidential client type has a client secret and don&#39;t use PKCE flow Supported oAuthClientType : - **Public** - **Confidential** - **audiences** : List of target client IDs who is intended to receive the token. e.g [&#34;eaaa65618fe24293b00a61454182b435&#34;, &#34;40073ee9bc3446d3a051a71b48509a5d&#34;] - **baseUri** : A base URI of the application. It is used for making sure the token is intended to be used by the client. e.g https://example.net/platform - **clientPermissions** : Contains the client&#39;s permissions - **deletable** : The flag to identify whether client is deletable (optional). default value: true - **clientPlatform**: available client platform (optional). default value: &#34;&#34; - Playstation - Xbox - Steam - Epic - IOS - GooglePlay - Nintendo - Oculus - **twoFactorEnabled**: The flag to indicate whether 2FA validation is enable for this client. default value: false - **oauthAccessTokenExpiration**: a configurable expiration time for **access_token**, default value: 0 (mean fetch value from environment variable) - **oauthRefreshTokenExpiration**: a configurable expiration time for **refresh_token**, default value: 0 (mean fetch value from environment variable) - **oauthAccessTokenExpirationTimeUnit**: a configurable expiration time unit for **access_token**, default value: SECONDS - **oauthRefreshTokenExpirationTimeUnit**: a configurable expiration time unit for **refresh_token**, default value: SECONDS
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ClientsAdmin.Client_v3, input]
 * }
 * ```
 */
declare const useClientsAdminApi_CreateClientMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<ClientV3Response, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ClientCreationV3Request;
}>, "mutationKey">, callback?: (data: ClientV3Response) => void) => UseMutationResult<ClientV3Response, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ClientCreationV3Request;
}>;
/**
 * Updates multiple OAuth 2.0 clients. Specify only the fields you want to update in the request payload, e.g. {&#34;ClientName&#34;:&#34;E-commerce&#34;, &#34;BaseUri&#34;:&#34;https://example.net&#34;} **Note for Multi Tenant Mode (Confidential Client):** Only Super admin can set permission with resource &amp; action. Studio admin &amp; game admin need set permission with permission module. action code: 10302 **Fields Description:** - **clientName** : The client name. It should not be empty if the field exists in the body. e.g E-commerce - **namespace** : The namespace where the client lives. e.g sample-game - **redirectUri** : Contains the redirect URI used in OAuth callback. It should not be empty if the field exists in the body. e.g https://example.net/platform - **audiences** : List of target client IDs who is intended to receive the token. e.g [&#34;eaaa65618fe24293b00a61454182b435&#34;, &#34;40073ee9bc3446d3a051a71b48509a5d&#34;] - **baseUri** : A base URI of the application. It is used in the audience checking for making sure the token is used by the right resource server. Required if the application type is a server. e.g https://example.net/platform - **clientPermissions** : Contains the client&#39;s permissions - **deletable** : The flag to identify whether client is deletable (optional). e.g. true - **clientPlatform** : available client platform (optional). default value: &#34;&#34;. - Playstation - Xbox - Steam - Epic - IOS - GooglePlay - Nintendo - Oculus - **twoFactorEnabled**: The flag to indicate whether 2FA validation is enable for this client. default value: false - **oauthAccessTokenExpiration**: a configurable expiration time for **access_token**, default value: 0 (mean fetch value from environment variable) - **oauthRefreshTokenExpiration**: a configurable expiration time for **refresh_token**, default value: 0 (mean fetch value from environment variable) - **oauthAccessTokenExpirationTimeUnit**: a configurable expiration time unit for **access_token**, will use previous value if not specified - **oauthRefreshTokenExpirationTimeUnit**: a configurable expiration time unit for **refresh_token**, will use previous value if not specified - **skipLoginQueue**: a flag to indicate whether this client should be exempted from login queue or not
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ClientsAdmin.Client_v3, input]
 * }
 * ```
 */
declare const useClientsAdminApi_UpdateClientMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ClientsUpdateRequestV3;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ClientsUpdateRequestV3;
}>;
/**
 * Update Client Secret
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ClientsAdmin.Secret_ByClientId_v3, input]
 * }
 * ```
 */
declare const useClientsAdminApi_UpdateSecret_ByClientIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    data: V3ClientUpdateSecretRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    data: V3ClientUpdateSecretRequest;
}>;
/**
 * action code : 10310
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ClientsAdmin.Client_ByClientId_v3, input]
 * }
 * ```
 */
declare const useClientsAdminApi_DeleteClient_ByClientIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
}>;
/**
 * action code: 10309
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ClientsAdmin.Client_ByClientId_v3, input]
 * }
 * ```
 */
declare const useClientsAdminApi_GetClient_ByClientId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    clientId: string;
}, options?: Omit<UseQueryOptions<ClientV3Response, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ClientV3Response>) => void) => UseQueryResult<ClientV3Response, AxiosError<ApiError>>;
/**
 * Updates an OAuth 2.0 client. Specify only the fields you want to update in the request payload, e.g. {&#34;ClientName&#34;:&#34;E-commerce&#34;, &#34;BaseUri&#34;:&#34;https://example.net&#34;} **Note for Multi Tenant Mode (Confidential Client):** Only Super admin can set permission with resource &amp; action. Studio admin &amp; game admin need set permission with permission module. action code: 10302 **Fields Description:** - **clientName** : The client name. It should not be empty if the field exists in the body. e.g E-commerce - **namespace** : The namespace where the client lives. e.g sample-game - **redirectUri** : Contains the redirect URI used in OAuth callback. It should not be empty if the field exists in the body. e.g https://example.net/platform - **audiences** : List of target client IDs who is intended to receive the token. e.g [&#34;eaaa65618fe24293b00a61454182b435&#34;, &#34;40073ee9bc3446d3a051a71b48509a5d&#34;] - **baseUri** : A base URI of the application. It is used in the audience checking for making sure the token is used by the right resource server. Required if the application type is a server. e.g https://example.net/platform - **clientPermissions** : Contains the client&#39;s permissions - **deletable** : The flag to identify whether client is deletable (optional). e.g. true - **clientPlatform** : available client platform (optional). default value: &#34;&#34;. - Playstation - Xbox - Steam - Epic - IOS - GooglePlay - Nintendo - Oculus - **twoFactorEnabled**: The flag to indicate whether 2FA validation is enable for this client. default value: false - **oauthAccessTokenExpiration**: a configurable expiration time for **access_token**, default value: 0 (mean fetch value from environment variable) - **oauthRefreshTokenExpiration**: a configurable expiration time for **refresh_token**, default value: 0 (mean fetch value from environment variable) - **oauthAccessTokenExpirationTimeUnit**: a configurable expiration time unit for **access_token**, will use previous value if not specified - **oauthRefreshTokenExpirationTimeUnit**: a configurable expiration time unit for **refresh_token**, will use previous value if not specified - **skipLoginQueue**: a flag to indicate whether this client should be exempted from login queue or not
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ClientsAdmin.Client_ByClientId_v3, input]
 * }
 * ```
 */
declare const useClientsAdminApi_PatchClient_ByClientIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<ClientV3Response, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    data: ClientUpdateV3Request;
}>, "mutationKey">, callback?: (data: ClientV3Response) => void) => UseMutationResult<ClientV3Response, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    data: ClientUpdateV3Request;
}>;
/**
 * **Note for Multi Tenant Mode:** This is for super admin only. action code: 10303
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ClientsAdmin.Permission_ByClientId_v3, input]
 * }
 * ```
 */
declare const useClientsAdminApi_UpdatePermission_ByClientIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    data: ClientPermissionsV3;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    data: ClientPermissionsV3;
}>;
/**
 * **Note for Multi Tenant Mode:** This is for super admin only. action code: 10307
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ClientsAdmin.Permission_ByClientId_ByNS_v3, input]
 * }
 * ```
 */
declare const useClientsAdminApi_UpdatePermission_ByClientId_ByNSMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    data: ClientPermissionsV3;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    data: ClientPermissionsV3;
}>;
/**
 * **Note for Multi Tenant Mode:** This is for super admin only. action code : 10304
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ClientsAdmin.Permission_ByClientId_ByResource_ByAction_v3, input]
 * }
 * ```
 */
declare const useClientsAdminApi_DeletePermission_ByClientId_ByResource_ByActionMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    resource: string;
    action: number;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    resource: string;
    action: number;
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_ClientsConfigV3Admin {
    ClientConfigTemplates_v3 = "Iam.ClientsConfigV3Admin.ClientConfigTemplates_v3",
    ClientConfigPermission_v3 = "Iam.ClientsConfigV3Admin.ClientConfigPermission_v3",
    ClientConfigPermissions_v3 = "Iam.ClientsConfigV3Admin.ClientConfigPermissions_v3"
}
/**
 * List client templates
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ClientsConfigV3Admin.ClientConfigTemplates_v3, input]
 * }
 * ```
 */
declare const useClientsConfigV3AdminApi_GetClientConfigTemplates_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<ListTemplatesResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ListTemplatesResponse>) => void) => UseQueryResult<ListTemplatesResponse, AxiosError<ApiError>>;
/**
 * Delete Client config permissions by module and group.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ClientsConfigV3Admin.ClientConfigPermission_v3, input]
 * }
 * ```
 */
declare const useClientsConfigV3AdminApi_DeleteClientConfigPermissionMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: PermissionSetDeleteGroupRequest;
    queryParams?: {
        forceDelete?: boolean | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: PermissionSetDeleteGroupRequest;
    queryParams?: {
        forceDelete?: boolean | null;
    };
}>;
/**
 * List Client available permissions
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ClientsConfigV3Admin.ClientConfigPermissions_v3, input]
 * }
 * ```
 */
declare const useClientsConfigV3AdminApi_GetClientConfigPermissions_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        excludePermissions?: boolean | null;
    };
}, options?: Omit<UseQueryOptions<ListClientPermissionSet, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ListClientPermissionSet>) => void) => UseQueryResult<ListClientPermissionSet, AxiosError<ApiError>>;
/**
 * Update Client available permissions, if module or group not exists, it will auto create.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ClientsConfigV3Admin.ClientConfigPermission_v3, input]
 * }
 * ```
 */
declare const useClientsConfigV3AdminApi_UpdateClientConfigPermissionMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ListUpsertModulesRequest;
    queryParams?: {
        forceDelete?: boolean | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ListUpsertModulesRequest;
    queryParams?: {
        forceDelete?: boolean | null;
    };
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_ConfigAdmin {
    Config_ByConfigKey_v3 = "Iam.ConfigAdmin.Config_ByConfigKey_v3"
}
/**
 * This endpoint return the value of config key. The namespace should be publisher namespace or studio namespace. **Supported config key:** * uniqueDisplayNameEnabled * usernameDisabled * mandatoryEmailVerificationEnabled
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ConfigAdmin.Config_ByConfigKey_v3, input]
 * }
 * ```
 */
declare const useConfigAdminApi_GetConfig_ByConfigKey_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    configKey: string;
}, options?: Omit<UseQueryOptions<ConfigValueResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ConfigValueResponseV3>) => void) => UseQueryResult<ConfigValueResponseV3, AxiosError<ApiError>>;

/**
 * AUTO GENERATED
 */

declare enum Key_CountryAdmin {
    Countries_v3 = "Iam.CountryAdmin.Countries_v3",
    CountriesBlacklist_v3 = "Iam.CountryAdmin.CountriesBlacklist_v3",
    CountryBlacklist_v3 = "Iam.CountryAdmin.CountryBlacklist_v3"
}
/**
 * Admin get country list
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_CountryAdmin.Countries_v3, input]
 * }
 * ```
 */
declare const useCountryAdminApi_GetCountries_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        filterBlacklist?: boolean | null;
    };
}, options?: Omit<UseQueryOptions<CountryResponseArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<CountryResponseArray>) => void) => UseQueryResult<CountryResponseArray, AxiosError<ApiError>>;
/**
 * Admin get country blacklist
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_CountryAdmin.CountriesBlacklist_v3, input]
 * }
 * ```
 */
declare const useCountryAdminApi_GetCountriesBlacklist_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<CountryBlacklistResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<CountryBlacklistResponse>) => void) => UseQueryResult<CountryBlacklistResponse, AxiosError<ApiError>>;
/**
 * Admin update country blacklist
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_CountryAdmin.CountryBlacklist_v3, input]
 * }
 * ```
 */
declare const useCountryAdminApi_UpdateCountryBlacklistMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: CountryBlacklistRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: CountryBlacklistRequest;
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_DevicesV4Admin {
    Devices_v4 = "Iam.DevicesV4Admin.Devices_v4",
    DevicesBans_v4 = "Iam.DevicesV4Admin.DevicesBans_v4",
    DeviceBan_v4 = "Iam.DevicesV4Admin.DeviceBan_v4",
    DevicesTypes_v4 = "Iam.DevicesV4Admin.DevicesTypes_v4",
    DevicesBanned_v4 = "Iam.DevicesV4Admin.DevicesBanned_v4",
    DevicesReport_v4 = "Iam.DevicesV4Admin.DevicesReport_v4",
    DeviceBan_ByBanId_v4 = "Iam.DevicesV4Admin.DeviceBan_ByBanId_v4",
    Bans_ByDeviceId_v4 = "Iam.DevicesV4Admin.Bans_ByDeviceId_v4",
    Unban_ByDeviceId_v4 = "Iam.DevicesV4Admin.Unban_ByDeviceId_v4",
    Users_ByDeviceId_v4 = "Iam.DevicesV4Admin.Users_ByDeviceId_v4",
    Decrypt_ByDeviceId_v4 = "Iam.DevicesV4Admin.Decrypt_ByDeviceId_v4"
}
/**
 * This is the endpoint for an admin to get devices a user ever used to login
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_DevicesV4Admin.Devices_v4, input]
 * }
 * ```
 */
declare const useDevicesV4AdminApi_GetDevices_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        userId?: string | null;
    };
}, options?: Omit<UseQueryOptions<DevicesResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<DevicesResponseV4>) => void) => UseQueryResult<DevicesResponseV4, AxiosError<ApiError>>;
/**
 * This is the endpoint for an admin to get device bans of user
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_DevicesV4Admin.DevicesBans_v4, input]
 * }
 * ```
 */
declare const useDevicesV4AdminApi_GetDevicesBans_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams: {
        userId: string | null;
    };
}, options?: Omit<UseQueryOptions<DeviceBansResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<DeviceBansResponseV4>) => void) => UseQueryResult<DeviceBansResponseV4, AxiosError<ApiError>>;
/**
 * This is the endpoint for an admin to ban a device
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_DevicesV4Admin.DeviceBan_v4, input]
 * }
 * ```
 */
declare const useDevicesV4AdminApi_CreateDeviceBanMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: DeviceBanRequestV4;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: DeviceBanRequestV4;
}>;
/**
 * This is the endpoint for an admin to get device types
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_DevicesV4Admin.DevicesTypes_v4, input]
 * }
 * ```
 */
declare const useDevicesV4AdminApi_GetDevicesTypes_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<DeviceTypesResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<DeviceTypesResponseV4>) => void) => UseQueryResult<DeviceTypesResponseV4, AxiosError<ApiError>>;
/**
 * This is the endpoint for an admin to get banned devices
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_DevicesV4Admin.DevicesBanned_v4, input]
 * }
 * ```
 */
declare const useDevicesV4AdminApi_GetDevicesBanned_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        deviceType?: string | null;
        endDate?: string | null;
        limit?: number;
        offset?: number;
        startDate?: string | null;
    };
}, options?: Omit<UseQueryOptions<DeviceBannedResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<DeviceBannedResponseV4>) => void) => UseQueryResult<DeviceBannedResponseV4, AxiosError<ApiError>>;
/**
 * This is the endpoint for an admin to generate device report
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_DevicesV4Admin.DevicesReport_v4, input]
 * }
 * ```
 */
declare const useDevicesV4AdminApi_GetDevicesReport_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams: {
        deviceType: string | null;
        endDate?: string | null;
        startDate?: string | null;
    };
}, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * This is the endpoint for an admin to get device ban config
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_DevicesV4Admin.DeviceBan_ByBanId_v4, input]
 * }
 * ```
 */
declare const useDevicesV4AdminApi_GetDeviceBan_ByBanId_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    banId: string;
}, options?: Omit<UseQueryOptions<DeviceBanResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<DeviceBanResponseV4>) => void) => UseQueryResult<DeviceBanResponseV4, AxiosError<ApiError>>;
/**
 * This is the endpoint for an admin to update a device ban config
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_DevicesV4Admin.DeviceBan_ByBanId_v4, input]
 * }
 * ```
 */
declare const useDevicesV4AdminApi_UpdateDeviceBan_ByBanIdMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    banId: string;
    data: DeviceBanUpdateRequestV4;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    banId: string;
    data: DeviceBanUpdateRequestV4;
}>;
/**
 * This is the endpoint for an admin to get device ban list
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_DevicesV4Admin.Bans_ByDeviceId_v4, input]
 * }
 * ```
 */
declare const useDevicesV4AdminApi_GetBans_ByDeviceId_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    deviceId: string;
}, options?: Omit<UseQueryOptions<DeviceBansResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<DeviceBansResponseV4>) => void) => UseQueryResult<DeviceBansResponseV4, AxiosError<ApiError>>;
/**
 * This is the endpoint for an admin to unban device
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_DevicesV4Admin.Unban_ByDeviceId_v4, input]
 * }
 * ```
 */
declare const useDevicesV4AdminApi_UpdateUnban_ByDeviceIdMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    deviceId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    deviceId: string;
}>;
/**
 * This is the endpoint for an admin to get users that ever login on the device
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_DevicesV4Admin.Users_ByDeviceId_v4, input]
 * }
 * ```
 */
declare const useDevicesV4AdminApi_GetUsers_ByDeviceId_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    deviceId: string;
}, options?: Omit<UseQueryOptions<DeviceUsersResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<DeviceUsersResponseV4>) => void) => UseQueryResult<DeviceUsersResponseV4, AxiosError<ApiError>>;
/**
 * @deprecated
 * This is the endpoint for an admin to decrypt device id
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_DevicesV4Admin.Decrypt_ByDeviceId_v4, input]
 * }
 * ```
 */
declare const useDevicesV4AdminApi_GetDecrypt_ByDeviceId_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    deviceId: string;
}, options?: Omit<UseQueryOptions<DeviceIdDecryptResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<DeviceIdDecryptResponseV4>) => void) => UseQueryResult<DeviceIdDecryptResponseV4, AxiosError<ApiError>>;

/**
 * AUTO GENERATED
 */

declare enum Key_InputValidationsAdmin {
    InputValidations_v3 = "Iam.InputValidationsAdmin.InputValidations_v3",
    InputValidation_v3 = "Iam.InputValidationsAdmin.InputValidation_v3",
    InputValidation_ByField_v3 = "Iam.InputValidationsAdmin.InputValidation_ByField_v3"
}
/**
 * This endpoint is to get list of input validation configuration. &lt;code&gt;regex&lt;/code&gt; parameter will be returned if &lt;code&gt;isCustomRegex&lt;/code&gt; is true. Otherwise, it will be empty.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_InputValidationsAdmin.InputValidations_v3, input]
 * }
 * ```
 */
declare const useInputValidationsAdminApi_GetInputValidations_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<InputValidationsResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<InputValidationsResponse>) => void) => UseQueryResult<InputValidationsResponse, AxiosError<ApiError>>;
/**
 * This endpoint is used to update input validation configuration. Supported &lt;code&gt;field&lt;/code&gt;: - displayName - password - username - email - avatar If &lt;code&gt;isCustomRegex&lt;/code&gt; is set to true, &lt;code&gt;regex&lt;/code&gt; parameter will be used as input validation and the other parameters will be ignored. Otherwise, &lt;code&gt;regex&lt;/code&gt; parameter will be ignored and regex for input validation will be generated based on the combination of the other parameters. If &lt;code&gt;allowUnicode&lt;/code&gt; is set to true, unicode regex pattern will be use as the input validation and the other parameters will be ignored. Supported &lt;code&gt;letterCase&lt;/code&gt;: - lowercase - uppercase - mixed: uppercase and lowercase - any: uppercase and/or lowercase flexible special character non words with &lt;code&gt;allowAllSpecialCharacters&lt;/code&gt; if &lt;code&gt;allowAllSpecialCharacters&lt;/code&gt; is set to true &lt;code&gt;specialCharacters&lt;/code&gt; will forced to empty. Supported &lt;code&gt;specialCharacterLocation&lt;/code&gt;: - anywhere - middle If &lt;code&gt;specialCharacters&lt;/code&gt; is empty, &lt;code&gt;specialCharacterLocation&lt;/code&gt; and &lt;code&gt;maxRepeatingSpecialCharacter&lt;/code&gt; will be ignored. &lt;code&gt;minCharType&lt;/code&gt; is used to identify how many required criteria in the regex. The supported criteria are number, letter, special character, and letter case. If set to 0 or 1 means all criteria are optional. It can be set as much as the number of criteria enabled. If &lt;code&gt;blockedWord&lt;/code&gt; is set by admin, any input from user which contain kind of blocked word(s) will be blocked for create/upgrade/update account If &lt;code&gt;avatarConfig&lt;/code&gt; is set, will use this config and skip all the other validation conditions
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_InputValidationsAdmin.InputValidation_v3, input]
 * }
 * ```
 */
declare const useInputValidationsAdminApi_UpdateInputValidationMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: InputValidationUpdatePayload[];
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: InputValidationUpdatePayload[];
}>;
/**
 * This endpoint is used to reset input validation to the default input validation configurations
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_InputValidationsAdmin.InputValidation_ByField_v3, input]
 * }
 * ```
 */
declare const useInputValidationsAdminApi_DeleteInputValidation_ByFieldMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    field: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    field: string;
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_LoginAllowlistAdmin {
    LoginAllowlist_v3 = "Iam.LoginAllowlistAdmin.LoginAllowlist_v3"
}
/**
 * This endpoint return login allowlist configuration from specific namespace.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_LoginAllowlistAdmin.LoginAllowlist_v3, input]
 * }
 * ```
 */
declare const useLoginAllowlistAdminApi_GetLoginAllowlist_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<LoginAllowlistResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<LoginAllowlistResponse>) => void) => UseQueryResult<LoginAllowlistResponse, AxiosError<ApiError>>;
/**
 * This endpoint update login allowlist configuration from specific game namespace. roleIds: are list of role that allowed to login Note: only accept game namespace
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_LoginAllowlistAdmin.LoginAllowlist_v3, input]
 * }
 * ```
 */
declare const useLoginAllowlistAdminApi_UpdateLoginAllowlistMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<LoginAllowlistResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: LoginAllowlistRequest;
}>, "mutationKey">, callback?: (data: LoginAllowlistResponse) => void) => UseMutationResult<LoginAllowlistResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: LoginAllowlistRequest;
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_OAuth20Admin {
    RevokeOauth_ByUserId_v3 = "Iam.OAuth20Admin.RevokeOauth_ByUserId_v3",
    PlatformTokenOauth_ByUserId_ByPlatformId_v3 = "Iam.OAuth20Admin.PlatformTokenOauth_ByUserId_ByPlatformId_v3"
}
/**
 * This endpoint revokes all access tokens and refresh tokens a user has prior the revocation time. This endpoint requires authorized requests header with valid access token. It is a convenient feature for the developer (or admin) who wanted to revokes all user&#39;s access tokens and refresh tokens generated before some period of time. action code : 10707
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20Admin.RevokeOauth_ByUserId_v3, input]
 * }
 * ```
 */
declare const useOAuth20AdminApi_UpdateRevokeOauth_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    queryParams?: {
        includeGameNamespace?: boolean | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    queryParams?: {
        includeGameNamespace?: boolean | null;
    };
}>;
/**
 * Admin Retrieve User Third Party Platform Token This endpoint used for retrieving third party platform token for user that login using third party, if user have not link requested platform in game namespace, will try to retrieving third party platform token from publisher namespace. Passing platform group name or it&#39;s member will return same access token that can be used across the platform members. If platformUserId provided, IAM will prefer to get platform token by platform user id. Notes: The third party platform and platform group covered for this is: - (psn) ps4web - (psn) ps4 - (psn) ps5 - epicgames - twitch - awscognito - amazon - eaorigin - snapchat - twitch - live
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20Admin.PlatformTokenOauth_ByUserId_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useOAuth20AdminApi_GetPlatformTokenOauth_ByUserId_ByPlatformId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
    platformId: string;
    queryParams?: {
        platformUserId?: string | null;
    };
}, options?: Omit<UseQueryOptions<TokenThirdPartyResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<TokenThirdPartyResponse>) => void) => UseQueryResult<TokenThirdPartyResponse, AxiosError<ApiError>>;

/**
 * AUTO GENERATED
 */

declare enum Key_OverrideRoleConfigV3Admin {
    Roleoverride_v3 = "Iam.OverrideRoleConfigV3Admin.Roleoverride_v3",
    RoleoverrideSource_v3 = "Iam.OverrideRoleConfigV3Admin.RoleoverrideSource_v3",
    RoleoverrideStatus_v3 = "Iam.OverrideRoleConfigV3Admin.RoleoverrideStatus_v3",
    Permissions_ByRoleId_v3 = "Iam.OverrideRoleConfigV3Admin.Permissions_ByRoleId_v3"
}
/**
 * Get role override config. This API has upsert behavior, if there is no config yet, it will create a new one with inactive status.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OverrideRoleConfigV3Admin.Roleoverride_v3, input]
 * }
 * ```
 */
declare const useOverrideRoleConfigV3AdminApi_GetRoleoverride_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams: {
        identity: "GAME_ADMIN" | "USER" | "VIEW_ONLY";
    };
}, options?: Omit<UseQueryOptions<RoleOverrideResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RoleOverrideResponse>) => void) => UseQueryResult<RoleOverrideResponse, AxiosError<ApiError>>;
/**
 * This API is for updating role override config. Note: This API has upsert behavior, if there is no config yet, it will create a new one first.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OverrideRoleConfigV3Admin.Roleoverride_v3, input]
 * }
 * ```
 */
declare const useOverrideRoleConfigV3AdminApi_PatchRoleoverrideMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<RoleOverrideResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: RoleOverrideUpdateRequest;
    queryParams: {
        identity: "GAME_ADMIN" | "USER" | "VIEW_ONLY";
    };
}>, "mutationKey">, callback?: (data: RoleOverrideResponse) => void) => UseMutationResult<RoleOverrideResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: RoleOverrideUpdateRequest;
    queryParams: {
        identity: "GAME_ADMIN" | "USER" | "VIEW_ONLY";
    };
}>;
/**
 * Get role source permission set.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OverrideRoleConfigV3Admin.RoleoverrideSource_v3, input]
 * }
 * ```
 */
declare const useOverrideRoleConfigV3AdminApi_GetRoleoverrideSource_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams: {
        identity: "GAME_ADMIN" | "USER" | "VIEW_ONLY";
    };
}, options?: Omit<UseQueryOptions<RoleOverrideSourceResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RoleOverrideSourceResponse>) => void) => UseQueryResult<RoleOverrideSourceResponse, AxiosError<ApiError>>;
/**
 * Enable or disable the target role override feature in path namespace. Note: This API has upsert behavior, if there is no config yet, it will create a new one first.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OverrideRoleConfigV3Admin.RoleoverrideStatus_v3, input]
 * }
 * ```
 */
declare const useOverrideRoleConfigV3AdminApi_PatchRoleoverrideStatusMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<RoleOverrideResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: RoleOverrideStatsUpdateRequest;
    queryParams: {
        identity: "GAME_ADMIN" | "USER" | "VIEW_ONLY";
    };
}>, "mutationKey">, callback?: (data: RoleOverrideResponse) => void) => UseMutationResult<RoleOverrideResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: RoleOverrideStatsUpdateRequest;
    queryParams: {
        identity: "GAME_ADMIN" | "USER" | "VIEW_ONLY";
    };
}>;
/**
 * Get role namespace permission set.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OverrideRoleConfigV3Admin.Permissions_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useOverrideRoleConfigV3AdminApi_GetPermissions_ByRoleId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    roleId: string;
}, options?: Omit<UseQueryOptions<RolePermissionResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RolePermissionResponseV3>) => void) => UseQueryResult<RolePermissionResponseV3, AxiosError<ApiError>>;

/**
 * AUTO GENERATED
 */

declare enum Key_ProfileUpdateStrategyAdmin {
    ProfileUpdateStrategies_v3 = "Iam.ProfileUpdateStrategyAdmin.ProfileUpdateStrategies_v3",
    ProfileUpdateStrategy_v3 = "Iam.ProfileUpdateStrategyAdmin.ProfileUpdateStrategy_v3"
}
/**
 * This API is for admin to get profile update strategy by namespace and field. Note: If the config is not found, this API will return a config with unlimited.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ProfileUpdateStrategyAdmin.ProfileUpdateStrategies_v3, input]
 * }
 * ```
 */
declare const useProfileUpdateStrategyAdminApi_GetProfileUpdateStrategies_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        field?: "country" | "display_name" | "dob" | "username";
    };
}, options?: Omit<UseQueryOptions<GetProfileUpdateStrategyConfigResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetProfileUpdateStrategyConfigResponse>) => void) => UseQueryResult<GetProfileUpdateStrategyConfigResponse, AxiosError<ApiError>>;
/**
 * This API includes upsert behavior. Note: 1. field &#39;config&#39;&#39; in request body will only work when type is limited
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ProfileUpdateStrategyAdmin.ProfileUpdateStrategy_v3, input]
 * }
 * ```
 */
declare const useProfileUpdateStrategyAdminApi_UpdateProfileUpdateStrategyMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<SimpleProfileUpdateStrategyConfigs, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UpdateProfileUpdateStrategyConfigRequest;
    queryParams: {
        field: "country" | "display_name" | "dob" | "username";
    };
}>, "mutationKey">, callback?: (data: SimpleProfileUpdateStrategyConfigs) => void) => UseMutationResult<SimpleProfileUpdateStrategyConfigs, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UpdateProfileUpdateStrategyConfigRequest;
    queryParams: {
        field: "country" | "display_name" | "dob" | "username";
    };
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_RolesAdmin {
    Roles_v3 = "Iam.RolesAdmin.Roles_v3",
    Role_v3 = "Iam.RolesAdmin.Role_v3",
    Roles_v4 = "Iam.RolesAdmin.Roles_v4",
    Role_v4 = "Iam.RolesAdmin.Role_v4",
    Role_ByRoleId_v3 = "Iam.RolesAdmin.Role_ByRoleId_v3",
    Role_ByRoleId_v4 = "Iam.RolesAdmin.Role_ByRoleId_v4",
    Admin_ByRoleId_v3 = "Iam.RolesAdmin.Admin_ByRoleId_v3",
    User_ByRoleId_v4 = "Iam.RolesAdmin.User_ByRoleId_v4",
    Users_ByRoleId_v4 = "Iam.RolesAdmin.Users_ByRoleId_v4",
    Member_ByRoleId_v3 = "Iam.RolesAdmin.Member_ByRoleId_v3",
    Members_ByRoleId_v3 = "Iam.RolesAdmin.Members_ByRoleId_v3",
    Manager_ByRoleId_v3 = "Iam.RolesAdmin.Manager_ByRoleId_v3",
    Managers_ByRoleId_v3 = "Iam.RolesAdmin.Managers_ByRoleId_v3",
    Permission_ByRoleId_v3 = "Iam.RolesAdmin.Permission_ByRoleId_v3",
    Permission_ByRoleId_admin_v3 = "Iam.RolesAdmin.Permission_ByRoleId_admin_v3",
    Permission_ByRoleId_v4 = "Iam.RolesAdmin.Permission_ByRoleId_v4",
    Permission_ByRoleId_admin_v4 = "Iam.RolesAdmin.Permission_ByRoleId_admin_v4",
    Permission_ByRoleId_ByResource_ByAction_v3 = "Iam.RolesAdmin.Permission_ByRoleId_ByResource_ByAction_v3"
}
/**
 * action code: 10414
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Roles_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_GetRoles_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        after?: string | null;
        before?: string | null;
        isWildcard?: boolean | null;
        limit?: number;
    };
}, options?: Omit<UseQueryOptions<RoleResponseWithManagersAndPaginationV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RoleResponseWithManagersAndPaginationV3>) => void) => UseQueryResult<RoleResponseWithManagersAndPaginationV3, AxiosError<ApiError>>;
/**
 * Create role request body: - roleName: specify role name, alphanumeric, cannot have special character (required) - permissions: specify the permission that this role have - managers: specify list of user that will act as the managers of this role - members: specify list of user that will act as the members of this role - adminRole: specify if role is for admin user (default false) - isWildcard: specify if role can be assigned to wildcard (*) namespace (default false) - deletable: specify if role can be deleted or not (default true) action code: 10401
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Role_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_CreateRoleMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<RoleV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: RoleCreateV3Request;
}>, "mutationKey">, callback?: (data: RoleV3) => void) => UseMutationResult<RoleV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: RoleCreateV3Request;
}>;
/**
 * action code: 10414
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Roles_v4, input]
 * }
 * ```
 */
declare const useRolesAdminApi_GetRoles_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        adminRole?: boolean | null;
        isWildcard?: boolean | null;
        limit?: number;
        offset?: number;
    };
}, options?: Omit<UseQueryOptions<ListRoleV4Response, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ListRoleV4Response>) => void) => UseQueryResult<ListRoleV4Response, AxiosError<ApiError>>;
/**
 * Create role request body: - roleName: specify role name, alphanumeric, cannot have special character (required) - adminRole: specify if role is for admin user (default false) - isWildcard: specify if role can be assigned to wildcard (*) namespace (default false) - deletable: specify if role can be deleted (default true) action code: 10401
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Role_v4, input]
 * }
 * ```
 */
declare const useRolesAdminApi_CreateRoleMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<RoleV4Response, AxiosError<ApiError>, SdkSetConfigParam & {
    data: RoleV4Request;
}>, "mutationKey">, callback?: (data: RoleV4Response) => void) => UseMutationResult<RoleV4Response, AxiosError<ApiError>, SdkSetConfigParam & {
    data: RoleV4Request;
}>;
/**
 * action code: 10403
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Role_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_DeleteRole_ByRoleIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
}>;
/**
 * action code: 10419
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Role_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_GetRole_ByRoleId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    roleId: string;
}, options?: Omit<UseQueryOptions<RoleResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RoleResponseV3>) => void) => UseQueryResult<RoleResponseV3, AxiosError<ApiError>>;
/**
 * Update role request body: - roleName: specify role name, alphanumeric, cannot have special character (required) - isWildcard: specify if role can be assigned to wildcard (*) namespace (default false) - deletable: specify if role can be deleted or not (optional) action code: 10402
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Role_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_PatchRole_ByRoleIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<RoleResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleUpdateRequestV3;
}>, "mutationKey">, callback?: (data: RoleResponseV3) => void) => UseMutationResult<RoleResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleUpdateRequestV3;
}>;
/**
 * Removes role ID from user&#39;s Roles and NamespaceRoles before deleting the role. action code: 10403
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Role_ByRoleId_v4, input]
 * }
 * ```
 */
declare const useRolesAdminApi_DeleteRole_ByRoleIdMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
}>;
/**
 * action code: 10419
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Role_ByRoleId_v4, input]
 * }
 * ```
 */
declare const useRolesAdminApi_GetRole_ByRoleId_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    roleId: string;
}, options?: Omit<UseQueryOptions<RoleV4Response, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RoleV4Response>) => void) => UseQueryResult<RoleV4Response, AxiosError<ApiError>>;
/**
 * Update role request body: - roleName: specify role name, alphanumeric, cannot have special character (required) - adminRole: specify if role is for admin user (default false) - isWildcard: specify if role can be assigned to wildcard (*) namespace (default false) - deletable: specify if role can be deleted (optional) action code: 10402
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Role_ByRoleId_v4, input]
 * }
 * ```
 */
declare const useRolesAdminApi_PatchRole_ByRoleIdMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<RoleV4Response, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleV4Request;
}>, "mutationKey">, callback?: (data: RoleV4Response) => void) => UseMutationResult<RoleV4Response, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleV4Request;
}>;
/**
 * code: 10413
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Admin_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_DeleteAdmin_ByRoleIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
}>;
/**
 * Admin roles has its members listed in the role. action code: 10420
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Admin_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_GetAdmin_ByRoleId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    roleId: string;
}, options?: Omit<UseQueryOptions<RoleAdminStatusResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RoleAdminStatusResponseV3>) => void) => UseQueryResult<RoleAdminStatusResponseV3, AxiosError<ApiError>>;
/**
 * Admin roles has its members listed in the role. Role can be set as admin role only when it has at least 1 manager. action code: 10412
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Admin_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_UpdateAdmin_ByRoleIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
}>;
/**
 * Current implementation will revoke user from role in all assigned namespaces. Parameters: - userId: string (required) - namespace: string (user’s namespace) (required) action code: 10411
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.User_ByRoleId_v4, input]
 * }
 * ```
 */
declare const useRolesAdminApi_DeleteUser_ByRoleIdMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RevokeUserV4Request;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RevokeUserV4Request;
}>;
/**
 * Query all users that has the specified role. action code: 10416
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Users_ByRoleId_v4, input]
 * }
 * ```
 */
declare const useRolesAdminApi_GetUsers_ByRoleId_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    roleId: string;
    queryParams?: {
        after?: string | null;
        before?: string | null;
        limit?: number;
    };
}, options?: Omit<UseQueryOptions<ListAssignedUsersV4Response, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ListAssignedUsersV4Response>) => void) => UseQueryResult<ListAssignedUsersV4Response, AxiosError<ApiError>>;
/**
 * Parameters: - **userId**: string (required) - **namespace**: string (user’s namespace) (required) - **assignedNamespaces**: array of string (namespaces to be assigned on role) (required) action code: 10410
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.User_ByRoleId_v4, input]
 * }
 * ```
 */
declare const useRolesAdminApi_UpdateUser_ByRoleIdMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<AssignedUserV4Response, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: AssignUserV4Request;
}>, "mutationKey">, callback?: (data: AssignedUserV4Response) => void) => UseMutationResult<AssignedUserV4Response, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: AssignUserV4Request;
}>;
/**
 * @deprecated
 * Admin roles has its members listed in the role. Role can only be assigned to other users by the role&#39;s manager. action code: 10411 Deprecate: Suggest to use this: AdminRevokeUserFromRoleV4
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Member_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_DeleteMember_ByRoleIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleMembersRequestV3;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleMembersRequestV3;
}>;
/**
 * Admin roles has its members listed in the role. action code: 10416
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Members_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_GetMembers_ByRoleId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    roleId: string;
    queryParams?: {
        after?: string | null;
        before?: string | null;
        limit?: number;
    };
}, options?: Omit<UseQueryOptions<RoleMembersResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RoleMembersResponseV3>) => void) => UseQueryResult<RoleMembersResponseV3, AxiosError<ApiError>>;
/**
 * Admin roles has its members listed in the role. Role can only be assigned to other users by the role&#39;s manager. action code: 10410
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Member_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_UpdateMember_ByRoleIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleMembersRequestV3;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleMembersRequestV3;
}>;
/**
 * Role can only be assigned to other users by the role&#39;s manager. action code: 10409
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Manager_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_DeleteManager_ByRoleIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleManagersRequestV3;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleManagersRequestV3;
}>;
/**
 * Role can only be assigned to other users by the role&#39;s manager. action code: 10415
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Managers_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_GetManagers_ByRoleId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    roleId: string;
    queryParams?: {
        after?: string | null;
        before?: string | null;
        limit?: number;
    };
}, options?: Omit<UseQueryOptions<RoleManagersResponsesV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RoleManagersResponsesV3>) => void) => UseQueryResult<RoleManagersResponsesV3, AxiosError<ApiError>>;
/**
 * Role can only be assigned to other users by the role&#39;s manager. action code: 10408
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Manager_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_UpdateManager_ByRoleIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleManagersRequestV3;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleManagersRequestV3;
}>;
declare const useRolesAdminApi_DeletePermission_ByRoleIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: string[];
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: string[];
}>;
/**
 * This endpoint will ATTACH permission(s) into the role action code: 10404 Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect. Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *. In ranged schedule, first element will be start date, and second one will be end date If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive Syntax reference Fields: 1. Seconds: 0-59 * / , - 1. Minutes: 0-59 * / , - 1. Hours: 0-23 * / , - 1. Day of month: 1-31 * / , - L W 1. Month: 1-12 JAN-DEC * / , - 1. Day of week: 0-6 SUN-SAT * / , - L # 1. Year: 1970-2099 * / , - Special characters: 1. *: all values in the fields, e.g. * in seconds fields indicates every second 1. /: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter 1. ,: separate items of a list, e.g. MON,WED,FRI in day of week 1. -: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive 1. L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month. 1. W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34; 1. #: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Permission_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_UpdatePermission_ByRoleIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: PermissionsV3;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: PermissionsV3;
}>;
/**
 * This endpoint will REPLACE role&#39;s permissions with the ones defined in body action code: 10405 Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect. Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *. In ranged schedule, first element will be start date, and second one will be end date If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive Syntax reference Fields: 1. Seconds: 0-59 * / , - 1. Minutes: 0-59 * / , - 1. Hours: 0-23 * / , - 1. Day of month: 1-31 * / , - L W 1. Month: 1-12 JAN-DEC * / , - 1. Day of week: 0-6 SUN-SAT * / , - L # 1. Year: 1970-2099 * / , - Special characters: 1. *: all values in the fields, e.g. * in seconds fields indicates every second 1. /: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter 1. ,: separate items of a list, e.g. MON,WED,FRI in day of week 1. -: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive 1. L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month. 1. W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34; 1. #: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Permission_ByRoleId_admin_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_UpdatePermission_ByRoleId_adminMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: PermissionsV3;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: PermissionsV3;
}>;
declare const useRolesAdminApi_DeletePermission_ByRoleIdMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: string[];
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: string[];
}>;
/**
 * This endpoint will ATTACH permission(s) into the role action code: 10404 Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect. Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *. In ranged schedule, first element will be start date, and second one will be end date If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive Syntax reference Fields: 1. Seconds: 0-59 * / , - 2. Minutes: 0-59 * / , - 3. Hours: 0-23 * / , - 4. Day of month: 1-31 * / , - L W 5. Month: 1-12 JAN-DEC * / , - 6. Day of week: 0-6 SUN-SAT * / , - L # 7. Year: 1970-2099 * / , - Special characters: 1. *: all values in the fields, e.g. * in seconds fields indicates every second 2. /: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter 3. ,: separate items of a list, e.g. MON,WED,FRI in day of week 4. -: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive 5. L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month. 6. W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34; 7. #: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Permission_ByRoleId_v4, input]
 * }
 * ```
 */
declare const useRolesAdminApi_UpdatePermission_ByRoleIdMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<RoleV4Response, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: PermissionsV3;
}>, "mutationKey">, callback?: (data: RoleV4Response) => void) => UseMutationResult<RoleV4Response, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: PermissionsV3;
}>;
/**
 * This endpoint will REPLACE role&#39;s permissions with the ones defined in body action code: 10405 Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect. Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *. In ranged schedule, first element will be start date, and second one will be end date If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive Syntax reference Fields: 1. Seconds: 0-59 * / , - 2. Minutes: 0-59 * / , - 3. Hours: 0-23 * / , - 4. Day of month: 1-31 * / , - L W 5. Month: 1-12 JAN-DEC * / , - 6. Day of week: 0-6 SUN-SAT * / , - L # 7. Year: 1970-2099 * / , - Special characters: 1. *: all values in the fields, e.g. * in seconds fields indicates every second 2. /: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter 3. ,: separate items of a list, e.g. MON,WED,FRI in day of week 4. -: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive 5. L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month. 6. W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34; 7. #: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Permission_ByRoleId_admin_v4, input]
 * }
 * ```
 */
declare const useRolesAdminApi_UpdatePermission_ByRoleId_adminMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<RoleV4Response, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: PermissionsV3;
}>, "mutationKey">, callback?: (data: RoleV4Response) => void) => UseMutationResult<RoleV4Response, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: PermissionsV3;
}>;
/**
 * action code: 10406
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_RolesAdmin.Permission_ByRoleId_ByResource_ByAction_v3, input]
 * }
 * ```
 */
declare const useRolesAdminApi_DeletePermission_ByRoleId_ByResource_ByActionMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    resource: string;
    action: number;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    resource: string;
    action: number;
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_SsoCredentialAdmin {
    PlatformsSso_v3 = "Iam.SsoCredentialAdmin.PlatformsSso_v3",
    Sso_ByPlatformId_v3 = "Iam.SsoCredentialAdmin.Sso_ByPlatformId_v3"
}
/**
 * This is the API to Get All Active SSO Platform Credential.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_SsoCredentialAdmin.PlatformsSso_v3, input]
 * }
 * ```
 */
declare const useSsoCredentialAdminApi_GetPlatformsSso_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        limit?: number;
        offset?: number;
    };
}, options?: Omit<UseQueryOptions<SsoPlatformCredentialResponseArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<SsoPlatformCredentialResponseArray>) => void) => UseQueryResult<SsoPlatformCredentialResponseArray, AxiosError<ApiError>>;
/**
 * This is the API to Delete SSO Platform Credential.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_SsoCredentialAdmin.Sso_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useSsoCredentialAdminApi_DeleteSso_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
}>;
/**
 * This is the API to Get SSO Platform Credential.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_SsoCredentialAdmin.Sso_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useSsoCredentialAdminApi_GetSso_ByPlatformId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    platformId: string;
}, options?: Omit<UseQueryOptions<SsoPlatformCredentialResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<SsoPlatformCredentialResponse>) => void) => UseQueryResult<SsoPlatformCredentialResponse, AxiosError<ApiError>>;
/**
 * This is the API to Delete SSO Platform Credential.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_SsoCredentialAdmin.Sso_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useSsoCredentialAdminApi_PatchSso_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<SsoPlatformCredentialResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: SsoPlatformCredentialRequest;
}>, "mutationKey">, callback?: (data: SsoPlatformCredentialResponse) => void) => UseMutationResult<SsoPlatformCredentialResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: SsoPlatformCredentialRequest;
}>;
/**
 * This is the API to Add SSO Platform Credential. ## Supported platforms: - **discourse** the ssoUrl of the discourse is the discourse forum url. example: https://forum.example.com - **azure with SAML** **appId** is an application identifier in IdP, in azure it&#39;s called EntityID **acsUrl** is an endpoint on the service provider where the identity provider will redirect to with its authentication response. example: /iam/v3/sso/saml/azuresaml/authenticate **federationMetadataUrl** is an endpoint on the Identity Provider(IdP) to get IdP federation metadata for service provider to build trust relationship
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_SsoCredentialAdmin.Sso_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useSsoCredentialAdminApi_CreateSso_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<SsoPlatformCredentialResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: SsoPlatformCredentialRequest;
}>, "mutationKey">, callback?: (data: SsoPlatformCredentialResponse) => void) => UseMutationResult<SsoPlatformCredentialResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: SsoPlatformCredentialRequest;
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_ThirdPartyCredentialAdmin {
    Availability_ByPlatformId_v3 = "Iam.ThirdPartyCredentialAdmin.Availability_ByPlatformId_v3",
    PlatformsAllClients_v3 = "Iam.ThirdPartyCredentialAdmin.PlatformsAllClients_v3",
    PlatformsAllClientsActive_v3 = "Iam.ThirdPartyCredentialAdmin.PlatformsAllClientsActive_v3",
    Client_ByPlatformId_v3 = "Iam.ThirdPartyCredentialAdmin.Client_ByPlatformId_v3",
    Clients_ByPlatformId_v3 = "Iam.ThirdPartyCredentialAdmin.Clients_ByPlatformId_v3",
    ClientDomain_ByPlatformId_v3 = "Iam.ThirdPartyCredentialAdmin.ClientDomain_ByPlatformId_v3"
}
/**
 * This is the API to check specific 3rd party platform availability. Passing platform group name or it&#39;s member will return same platform availability data Supported third party platform and platform group: - PSN group(psn) - ps4web - ps4 - ps5
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ThirdPartyCredentialAdmin.Availability_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useThirdPartyCredentialAdminApi_GetAvailability_ByPlatformId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    platformId: string;
}, options?: Omit<UseQueryOptions<CheckAvailabilityResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<CheckAvailabilityResponse>) => void) => UseQueryResult<CheckAvailabilityResponse, AxiosError<ApiError>>;
/**
 * This is the API to Get All Active 3rd Platform Credential.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ThirdPartyCredentialAdmin.PlatformsAllClients_v3, input]
 * }
 * ```
 */
declare const useThirdPartyCredentialAdminApi_GetPlatformsAllClients_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<ThirdPartyLoginPlatformCredentialResponseArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ThirdPartyLoginPlatformCredentialResponseArray>) => void) => UseQueryResult<ThirdPartyLoginPlatformCredentialResponseArray, AxiosError<ApiError>>;
/**
 * This is the API to Get All Active 3rd Platform Credential.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ThirdPartyCredentialAdmin.PlatformsAllClientsActive_v3, input]
 * }
 * ```
 */
declare const useThirdPartyCredentialAdminApi_GetPlatformsAllClientsActive_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<ThirdPartyLoginPlatformCredentialResponseArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ThirdPartyLoginPlatformCredentialResponseArray>) => void) => UseQueryResult<ThirdPartyLoginPlatformCredentialResponseArray, AxiosError<ApiError>>;
/**
 * This is the API to Delete 3rd Platform Credential.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ThirdPartyCredentialAdmin.Client_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useThirdPartyCredentialAdminApi_DeleteClient_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
}>;
/**
 * This is the API to Get 3rd Platform Credential.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ThirdPartyCredentialAdmin.Clients_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useThirdPartyCredentialAdminApi_GetClients_ByPlatformId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    platformId: string;
}, options?: Omit<UseQueryOptions<ThirdPartyLoginPlatformCredentialResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ThirdPartyLoginPlatformCredentialResponse>) => void) => UseQueryResult<ThirdPartyLoginPlatformCredentialResponse, AxiosError<ApiError>>;
/**
 * This is the API to Add 3rd Platform Credential. - The secret for **apple** is base64 encoded private key. - No secret for **awscognito**, we only need to configure AWS Cognito Region and User Pool - The secret for **discord** is client secret of the twitch client id. - The secret for **epicgames** is client secret of the epicgames client id. - The secret for **facebook** is client secret of the facebook client id. - The secret for **google** is client secret of the google OAuth client. - No secret for **nintendo**, we only need to configure app id of the game - No secret for **netflix**, we configure the Root, Public, Private Key certificate pem file and target environment; value: [sandbox, production] - The secret for **oculus** is app secret of the oculus app. - The secret for **ps4, ps5, and ps4web** is client secret of the psn web server. - The secret for **steam** is the Steam Web API Key. - The secret for **steamopenid** is the Steam Web API Key. - The secret for **twitch** is client secret of the twitch client. - The secret for **live** is the Relying Party Private Key in base64 encode PEM format. - The secret for **xblwebapi** is client secret of the xbl client. If generic oauth flow is set to true: - Current supported value for TokenAuthenticationType is **code, idToken and bearerToken** - &lt;code&gt;TokenClaimsMapping&lt;/code&gt; is used to extract user info from idToken claims or user info endpoint response accessed using bearerToken. Its a JSON format with key should be &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;avatarUrl&lt;/code&gt; since IAM will look up for these key when extracting user info.**default claims keys : userIdentity/sub, name, email and avatarUrl/picture**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ThirdPartyCredentialAdmin.Client_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useThirdPartyCredentialAdminApi_PatchClient_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<ThirdPartyLoginPlatformCredentialResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: ThirdPartyLoginPlatformCredentialRequest;
}>, "mutationKey">, callback?: (data: ThirdPartyLoginPlatformCredentialResponse) => void) => UseMutationResult<ThirdPartyLoginPlatformCredentialResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: ThirdPartyLoginPlatformCredentialRequest;
}>;
/**
 * This is the API to Add 3rd Platform Credential. - The secret for **apple** is base64 encoded private key. - No secret for **awscognito**, we only need to configure AWS Cognito Region and User Pool - The secret for **discord** is client secret of the twitch client id. - The secret for **epicgames** is client secret of the epicgames client id. - The secret for **facebook** is client secret of the facebook client id. - The secret for **google** is client secret of the google OAuth client. - No secret for **nintendo**, we only need to configure app id of the game - No secret for **netflix**, we configure the Root, Public, Private Key certificate pem file and target environment; value: [sandbox, production] - The secret for **oculus** is app secret of the oculus app. - The secret for **ps4, ps5, and ps4web** is client secret of the psn web server. - The secret for **steam** is the Steam Web API Key. - The secret for **steamopenid** is the Steam Web API Key. - The secret for **twitch** is client secret of the twitch client. - The secret for **live** is the Relying Party Private Key in base64 encode PEM format. - The secret for **xblwebapi** is client secret of the xbl client. If generic oauth flow is set to true: - Current supported value for TokenAuthenticationType are **code, idToken and bearerToken** - &lt;code&gt;TokenClaimsMapping&lt;/code&gt; is used to extract user info from idToken claims or user info endpoint response accessed using bearerToken. Its a JSON format with key should be &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;avatarUrl&lt;/code&gt; since IAM will look up for these key when extracting user info. **default claims keys : userIdentity/sub, name, email and avatarUrl/picture**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ThirdPartyCredentialAdmin.Client_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useThirdPartyCredentialAdminApi_CreateClient_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<ThirdPartyLoginPlatformCredentialResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: ThirdPartyLoginPlatformCredentialRequest;
}>, "mutationKey">, callback?: (data: ThirdPartyLoginPlatformCredentialResponse) => void) => UseMutationResult<ThirdPartyLoginPlatformCredentialResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: ThirdPartyLoginPlatformCredentialRequest;
}>;
/**
 * This is the API to unregister 3rd Platform domain.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ThirdPartyCredentialAdmin.ClientDomain_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useThirdPartyCredentialAdminApi_DeleteClientDomain_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: PlatformDomainDeleteRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: PlatformDomainDeleteRequest;
}>;
/**
 * This is the API to set 3rd Platform domain.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ThirdPartyCredentialAdmin.ClientDomain_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useThirdPartyCredentialAdminApi_UpdateClientDomain_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<PlatformDomainResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: PlatformDomainUpdateRequest;
}>, "mutationKey">, callback?: (data: PlatformDomainResponse) => void) => UseMutationResult<PlatformDomainResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: PlatformDomainUpdateRequest;
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_UsersAdmin {
    UsersMe_v3 = "Iam.UsersAdmin.UsersMe_v3",
    Users_v2 = "Iam.UsersAdmin.Users_v2",
    Users_v3 = "Iam.UsersAdmin.Users_v3",
    User_v3 = "Iam.UsersAdmin.User_v3",
    Admins_v3 = "Iam.UsersAdmin.Admins_v3",
    UserBan_v3 = "Iam.UsersAdmin.UserBan_v3",
    UserBulk_v3 = "Iam.UsersAdmin.UserBulk_v3",
    UserInvite_v3 = "Iam.UsersAdmin.UserInvite_v3",
    UsersSearch_v3 = "Iam.UsersAdmin.UsersSearch_v3",
    User_ByUserId_v2 = "Iam.UsersAdmin.User_ByUserId_v2",
    User_ByUserId_v3 = "Iam.UsersAdmin.User_ByUserId_v3",
    Agerestrictions_v2 = "Iam.UsersAdmin.Agerestrictions_v2",
    Agerestriction_v2 = "Iam.UsersAdmin.Agerestriction_v2",
    Agerestrictions_v3 = "Iam.UsersAdmin.Agerestrictions_v3",
    Agerestriction_v3 = "Iam.UsersAdmin.Agerestriction_v3",
    UserSearchBulk_v3 = "Iam.UsersAdmin.UserSearchBulk_v3",
    Ban_ByUserId_v2 = "Iam.UsersAdmin.Ban_ByUserId_v2",
    Bans_ByUserId_v2 = "Iam.UsersAdmin.Bans_ByUserId_v2",
    Bans_ByUserId_v3 = "Iam.UsersAdmin.Bans_ByUserId_v3",
    Ban_ByUserId_v3 = "Iam.UsersAdmin.Ban_ByUserId_v3",
    UsersLinkhistories_v3 = "Iam.UsersAdmin.UsersLinkhistories_v3",
    Role_ByUserId_v2 = "Iam.UsersAdmin.Role_ByUserId_v2",
    Role_ByUserId_ByNS_v2 = "Iam.UsersAdmin.Role_ByUserId_ByNS_v2",
    Users_ByRoleId_v3 = "Iam.UsersAdmin.Users_ByRoleId_v3",
    Codes_ByUserId_v3 = "Iam.UsersAdmin.Codes_ByUserId_v3",
    Role_ByUserId_v3 = "Iam.UsersAdmin.Role_ByUserId_v3",
    UserBulkPlatform_v3 = "Iam.UsersAdmin.UserBulkPlatform_v3",
    Enable_ByUserId_v2 = "Iam.UsersAdmin.Enable_ByUserId_v2",
    Status_ByUserId_v3 = "Iam.UsersAdmin.Status_ByUserId_v3",
    Verify_ByUserId_v3 = "Iam.UsersAdmin.Verify_ByUserId_v3",
    Disable_ByUserId_v2 = "Iam.UsersAdmin.Disable_ByUserId_v2",
    Country_ByCountryCode_v2 = "Iam.UsersAdmin.Country_ByCountryCode_v2",
    Password_ByUserId_v2 = "Iam.UsersAdmin.Password_ByUserId_v2",
    Password_ByUserId_v3 = "Iam.UsersAdmin.Password_ByUserId_v3",
    UsersPlatformsJustice_v3 = "Iam.UsersAdmin.UsersPlatformsJustice_v3",
    Platforms_ByUserId_v3 = "Iam.UsersAdmin.Platforms_ByUserId_v3",
    CountriesAgerestrictions_v2 = "Iam.UsersAdmin.CountriesAgerestrictions_v2",
    AgerestrictionsCountries_v3 = "Iam.UsersAdmin.AgerestrictionsCountries_v3",
    CodeVerify_ByUserId_v3 = "Iam.UsersAdmin.CodeVerify_ByUserId_v3",
    Information_ByUserId_v3 = "Iam.UsersAdmin.Information_ByUserId_v3",
    Permission_ByUserId_v3 = "Iam.UsersAdmin.Permission_ByUserId_v3",
    Ban_ByUserId_ByBanId_v3 = "Iam.UsersAdmin.Ban_ByUserId_ByBanId_v3",
    BansSummary_ByUserId_v3 = "Iam.UsersAdmin.BansSummary_ByUserId_v3",
    CodeRequest_ByUserId_v3 = "Iam.UsersAdmin.CodeRequest_ByUserId_v3",
    User_ByPlatformId_v3 = "Iam.UsersAdmin.User_ByPlatformId_v3",
    PlatformLink_ByUserId_v3 = "Iam.UsersAdmin.PlatformLink_ByUserId_v3",
    Role_ByUserId_ByRoleId_v3 = "Iam.UsersAdmin.Role_ByUserId_ByRoleId_v3",
    DeletionStatus_ByUserId_v3 = "Iam.UsersAdmin.DeletionStatus_ByUserId_v3",
    LoginsHistories_ByUserId_v3 = "Iam.UsersAdmin.LoginsHistories_ByUserId_v3",
    TrustlyIdentity_ByUserId_v3 = "Iam.UsersAdmin.TrustlyIdentity_ByUserId_v3",
    DistinctPlatforms_ByUserId_v3 = "Iam.UsersAdmin.DistinctPlatforms_ByUserId_v3",
    PlatformsJustice_ByUserId_v3 = "Iam.UsersAdmin.PlatformsJustice_ByUserId_v3",
    PlatformsDistinct_ByUserId_v3 = "Iam.UsersAdmin.PlatformsDistinct_ByUserId_v3",
    HeadlesCodeVerify_ByUserId_v3 = "Iam.UsersAdmin.HeadlesCodeVerify_ByUserId_v3",
    Platform_ByUserId_ByPlatformId_v3 = "Iam.UsersAdmin.Platform_ByUserId_ByPlatformId_v3",
    AgerestrictionCountry_ByCountryCode_v3 = "Iam.UsersAdmin.AgerestrictionCountry_ByCountryCode_v3",
    PlatformsLinkHistories_ByUserId_v3 = "Iam.UsersAdmin.PlatformsLinkHistories_ByUserId_v3",
    All_ByUserId_ByPlatformId_v3 = "Iam.UsersAdmin.All_ByUserId_ByPlatformId_v3",
    Link_ByUserId_ByPlatformId_v2 = "Iam.UsersAdmin.Link_ByUserId_ByPlatformId_v2",
    Link_ByUserId_ByPlatformId_v3 = "Iam.UsersAdmin.Link_ByUserId_ByPlatformId_v3",
    User_ByPlatformId_ByPlatformUserId_v3 = "Iam.UsersAdmin.User_ByPlatformId_ByPlatformUserId_v3",
    Permission_ByUserId_ByResource_ByAction_v3 = "Iam.UsersAdmin.Permission_ByUserId_ByResource_ByAction_v3",
    Metadata_ByUserId_ByPlatformId_v3 = "Iam.UsersAdmin.Metadata_ByUserId_ByPlatformId_v3",
    LinkStatu_ByUserId_ByPlatformId_v3 = "Iam.UsersAdmin.LinkStatu_ByUserId_ByPlatformId_v3",
    PlatformJustice_ByUserId_ByTargetNamespace_v3 = "Iam.UsersAdmin.PlatformJustice_ByUserId_ByTargetNamespace_v3",
    LinkHistory_ByUserId_ByPlatformId_v3 = "Iam.UsersAdmin.LinkHistory_ByUserId_ByPlatformId_v3",
    LinkRestriction_ByUserId_ByPlatformId_v3 = "Iam.UsersAdmin.LinkRestriction_ByUserId_ByPlatformId_v3"
}
/**
 * Get my user data action code : 10147
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.UsersMe_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetUsersMe_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<UserResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserResponseV3>) => void) => UseQueryResult<UserResponseV3, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/search [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Users_v2, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetUsers_v2: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams: {
        platformId: string | null;
        after?: string | null;
        before?: string | null;
        displayName?: string | null;
        limit?: number;
        loginId?: string | null;
        platformUserId?: string | null;
        roleId?: string | null;
        userId?: string | null;
    };
}, options?: Omit<UseQueryOptions<SearchUsersByPlatformIdResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<SearchUsersByPlatformIdResponse>) => void) => UseQueryResult<SearchUsersByPlatformIdResponse, AxiosError<ApiError>>;
/**
 * This endpoint search user who owns the given email address action code : 10132
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Users_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetUsers_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        emailAddress?: string | null;
    };
}, options?: Omit<UseQueryOptions<UserResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserResponseV3>) => void) => UseQueryResult<UserResponseV3, AxiosError<ApiError>>;
/**
 * This endpoint support to bulk update users based on given data. ------ Supported fields: * skipLoginQueue
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.User_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_UpdateUserMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UsersUpdateRequestV3;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UsersUpdateRequestV3;
}>;
/**
 * List all users that has admin role (role that has admin_role attribute set to true). Endpoint behavior : - if query parameter is defined, endpoint will search users whose email address and display name match with the query - if roleId parameter is defined, endpoint will search users that have the defined roleId - if startDate and endDate parameters is defined, endpoint will search users which created on the certain date range - if startDate parameter is defined, endpoint will search users that created start from the defined date - if endDate parameter is defined, endpoint will search users that created until the defined date In multi tenant mode : - if super admin search in super admin namespace, the result will be all admin users - if super admin search in game studio namespace, the result will be all admin users under the game studio namespace - if studio admin search in their studio namespace, the result will be all admin user in the game studio namespace The endpoint will return all admin from all namespace when called from publisher namespace. When not called from publisher namespace, the endpoint will return all admin from the path namespace.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Admins_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetAdmins_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        after?: string | null;
        before?: string | null;
        endDate?: string | null;
        limit?: number;
        query?: string | null;
        roleId?: string | null;
        startDate?: string | null;
    };
}, options?: Omit<UseQueryOptions<GetUsersResponseWithPaginationV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetUsersResponseWithPaginationV3>) => void) => UseQueryResult<GetUsersResponseWithPaginationV3, AxiosError<ApiError>>;
/**
 * This endpoint returns user bans of userIDs specified in the payload action code : 10127
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.UserBan_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_FetchUserBan_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    data: GetBulkUserBansRequest;
    queryParams?: {
        activeOnly?: boolean | null;
        banType?: string | null;
    };
}, options?: Omit<UseQueryOptions<GetUserBanV3Response, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetUserBanV3Response>) => void) => UseQueryResult<GetUserBanV3Response, AxiosError<ApiError>>;
/**
 * List User By User ID This endpoint intended to list user information from the given list of userID and namespace
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.UserBulk_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_CreateUserBulkMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<ListUserInformationResult, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserIDsRequest;
}>, "mutationKey">, callback?: (data: ListUserInformationResult) => void) => UseMutationResult<ListUserInformationResult, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserIDsRequest;
}>;
/**
 * Use this endpoint to invite admin or non-admin user and assign role to them. The role must be scoped to namespace based on the **{namespace}** value in path parameter. An admin user can only assign role to namespaces that the admin user has the required permission. Role is optional, if not specified then it will only assign User role The invited admin will also assigned with &#34;User&#34; role by default.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.UserInvite_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_CreateUserInviteMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<InviteUserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: InviteUserRequestV3;
}>, "mutationKey">, callback?: (data: InviteUserResponseV3) => void) => UseMutationResult<InviteUserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: InviteUserRequestV3;
}>;
/**
 * Endpoint behavior : - by default this endpoint searches all users on the specified namespace - if query parameter is defined, endpoint will search users whose email address, display name, username, or third party partially match with the query - if startDate and endDate parameters is defined, endpoint will search users which created on the certain date range - if query, startDate and endDate parameters are defined, endpoint will search users whose email address and display name match and created on the certain date range - if startDate parameter is defined, endpoint will search users that created start from the defined date - if endDate parameter is defined, endpoint will search users that created until the defined date - if platformId parameter is defined and by parameter is using thirdparty, endpoint will search users based on the platformId they have linked to - if platformBy parameter is defined and by parameter is using thirdparty, endpoint will search users based on the platformUserId or platformDisplayName they have linked to, example value: platformUserId or platformDisplayName - if limit is not defined, The default limit is 100 In multi tenant mode : - if super admin search in super admin namespace, the result will be all game admin user - if super admin search in game studio namespace, the result will be all game admin user and players under the game studio namespace - if super admin search in game namespace, the result will be all game admin users and players under the game namespace - if game admin search in their game studio namespace, the result will be all game admin user in the studio namespace - if game admin search in their game namespace, the result will be all player in the game namespace action code : 10133
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.UsersSearch_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetUsersSearch_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        by?: string | null;
        endDate?: string | null;
        includeTotal?: boolean | null;
        limit?: number;
        offset?: number;
        platformBy?: string | null;
        platformId?: string | null;
        query?: string | null;
        roleIds?: string | null;
        skipLoginQueue?: boolean | null;
        startDate?: string | null;
        testAccount?: boolean | null;
    };
}, options?: Omit<UseQueryOptions<SearchUsersResponseWithPaginationV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<SearchUsersResponseWithPaginationV3>) => void) => UseQueryResult<SearchUsersResponseWithPaginationV3, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId} [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.User_ByUserId_v2, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetUser_ByUserId_v2: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<UserResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserResponse>) => void) => UseQueryResult<UserResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId} [PATCH]_** This Endpoint support update user based on given data. **Single request can update single field or multi fields.** Supported field {Country, DisplayName, LanguageTag} Country use ISO3166-1 alpha-2 two letter, e.g. US. **Several case of updating email address** - User want to update email address of which have been verified, NewEmailAddress response field will be filled with new email address. - User want to update email address of which have not been verified, {LoginId, OldEmailAddress, EmailAddress} response field will be filled with new email address. - User want to update email address of which have been verified and updated before, {LoginId, OldEmailAddress, EmailAddress} response field will be filled with verified email before. NewEmailAddress response field will be filled with newest email address.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.User_ByUserId_v2, input]
 * }
 * ```
 */
declare const useUsersAdminApi_PatchUser_ByUserIdMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserUpdateRequest;
}>, "mutationKey">, callback?: (data: UserResponse) => void) => UseMutationResult<UserResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserUpdateRequest;
}>;
/**
 * Admin Get User By User Id
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.User_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetUser_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<UserResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserResponseV3>) => void) => UseQueryResult<UserResponseV3, AxiosError<ApiError>>;
/**
 * This Endpoint support update user based on given data. **Single request can update single field or multi fields.** Supported field {country, displayName, languageTag, dateOfBirth, avatarUrl, userName} Country use ISO3166-1 alpha-2 two letter, e.g. US. Date of Birth format : YYYY-MM-DD, e.g. 2019-04-29. **Response body logic when user updating email address:** - User want to update email address of which have been verified, NewEmailAddress response field will be filled with new email address. - User want to update email address of which have not been verified, {LoginId, OldEmailAddress, EmailAddress} response field will be filled with new email address. - User want to update email address of which have been verified and updated before, {LoginId, OldEmailAddress, EmailAddress} response field will be filled with verified email before. NewEmailAddress response field will be filled with newest email address. action code : 10103
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.User_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_PatchUser_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserUpdateRequestV3;
}>, "mutationKey">, callback?: (data: UserResponseV3) => void) => UseMutationResult<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserUpdateRequestV3;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/agerestrictions [GET]_** - **Note:** difference in V3 response, format difference: Pascal case =&gt; Camel case
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Agerestrictions_v2, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetAgerestrictions_v2: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<AgeRestrictionResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<AgeRestrictionResponse>) => void) => UseQueryResult<AgeRestrictionResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/agerestrictions [PATCH]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Agerestriction_v2, input]
 * }
 * ```
 */
declare const useUsersAdminApi_PatchAgerestrictionMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<AgeRestrictionResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: AgeRestrictionRequest;
}>, "mutationKey">, callback?: (data: AgeRestrictionResponse) => void) => UseMutationResult<AgeRestrictionResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: AgeRestrictionRequest;
}>;
/**
 * action code: 10138
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Agerestrictions_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetAgerestrictions_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<AgeRestrictionResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<AgeRestrictionResponseV3>) => void) => UseQueryResult<AgeRestrictionResponseV3, AxiosError<ApiError>>;
/**
 * action code: 10122
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Agerestriction_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_PatchAgerestrictionMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<AgeRestrictionResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: AgeRestrictionRequestV3;
}>, "mutationKey">, callback?: (data: AgeRestrictionResponseV3) => void) => UseMutationResult<AgeRestrictionResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: AgeRestrictionRequestV3;
}>;
/**
 * This endpoint search user by the list of email addresses action code : 10132
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.UserSearchBulk_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_FetchUserSearchBulk_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    data: ListEmailAddressRequest;
}, options?: Omit<UseQueryOptions<ListUserResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ListUserResponseV3>) => void) => UseQueryResult<ListUserResponseV3, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/bans [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Ban_ByUserId_v2, input]
 * }
 * ```
 */
declare const useUsersAdminApi_CreateBan_ByUserIdMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserBanResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: BanCreateRequest;
}>, "mutationKey">, callback?: (data: UserBanResponse) => void) => UseMutationResult<UserBanResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: BanCreateRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/bans [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Bans_ByUserId_v2, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetBans_ByUserId_v2: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
    queryParams?: {
        activeOnly?: boolean | null;
    };
}, options?: Omit<UseQueryOptions<UserBanResponseArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserBanResponseArray>) => void) => UseQueryResult<UserBanResponseArray, AxiosError<ApiError>>;
/**
 * This endpoint retrieve the first page of the data if after and before parameters is empty action code : 10126
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Bans_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetBans_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
    queryParams?: {
        activeOnly?: boolean | null;
        after?: string | null;
        before?: string | null;
        limit?: number;
    };
}, options?: Omit<UseQueryOptions<GetUserBanV3Response, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetUserBanV3Response>) => void) => UseQueryResult<GetUserBanV3Response, AxiosError<ApiError>>;
/**
 * Bans a user with specific type of ban. Ban types and reason can be queried. action code : 10141
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Ban_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_CreateBan_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserBanResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: BanCreateRequest;
}>, "mutationKey">, callback?: (data: UserBanResponseV3) => void) => UseMutationResult<UserBanResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: BanCreateRequest;
}>;
/**
 * if limit is not defined, The default limit is 100
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.UsersLinkhistories_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetUsersLinkhistories_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams: {
        platformId: string | null;
        limit?: number;
        offset?: number;
        platformUserId?: string | null;
    };
}, options?: Omit<UseQueryOptions<LinkingHistoryResponseWithPaginationV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<LinkingHistoryResponseWithPaginationV3>) => void) => UseQueryResult<LinkingHistoryResponseWithPaginationV3, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/roles [PATCH]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Role_ByUserId_v2, input]
 * }
 * ```
 */
declare const useUsersAdminApi_UpdateRole_ByUserIdMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: string[];
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: string[];
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/roles [PATCH]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Role_ByUserId_ByNS_v2, input]
 * }
 * ```
 */
declare const useUsersAdminApi_UpdateRole_ByUserId_ByNSMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: string[];
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: string[];
}>;
/**
 * This endpoint search admin users which have the roleId Notes : this endpoint only accept admin role. Admin Role is role which have admin status and members. Use endpoint [GET] /roles/{roleId}/admin to check the role status action code : 10140
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Users_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetUsers_ByRoleId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    roleId: string;
    queryParams?: {
        after?: number;
        before?: number;
        limit?: number;
    };
}, options?: Omit<UseQueryOptions<GetUsersResponseWithPaginationV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetUsersResponseWithPaginationV3>) => void) => UseQueryResult<GetUsersResponseWithPaginationV3, AxiosError<ApiError>>;
/**
 * **[WARNING] This endpoint is only for testing purpose.** This endpoint get active user verification code. There are some scenarios of getting verification codes, all of them will be returned on this endpoint: - After account registration - After reset password request - After headless account upgrade - After update email request This API only accept publisher/studio namespace and userId. Action code: 10146
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Codes_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetCodes_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<VerificationCodeResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<VerificationCodeResponse>) => void) => UseQueryResult<VerificationCodeResponse, AxiosError<ApiError>>;
/**
 * Delete User Roles
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Role_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_DeleteRole_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: string[];
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: string[];
}>;
/**
 * User&#39;s roles will be replaced with roles from request body. An admin user can only assign role with **namespace** (in request body) if the admin user has required permission which is same as the required permission of endpoint: [AdminAddUserRoleV4].
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Role_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_PatchRole_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: NamespaceRoleRequest[];
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: NamespaceRoleRequest[];
}>;
/**
 * Notes: - This endpoint bulk get users&#39; basic info by userId, max allowed 100 at a time - If namespace is game, will search by game user Id, other wise will search by publisher namespace
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.UserBulkPlatform_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_FetchUserBulkPlatform_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    data: UserIDsRequest;
}, options?: Omit<UseQueryOptions<ListBulkUserPlatformsResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ListBulkUserPlatformsResponse>) => void) => UseQueryResult<ListBulkUserPlatformsResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/status [PATCH]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Enable_ByUserId_v2, input]
 * }
 * ```
 */
declare const useUsersAdminApi_UpdateEnable_ByUserIdMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>;
/**
 * This endpoint disable or enable user account. Set the enable status on the request body to true to enable user account or set to false to disable it. Disable user for **Account Disable** purpose fill the reason with: - **AdminDeactivateAccount** : if your disable account request comes from admin Enable user ignore field &#39;reason&#39; in the request body. action code : 10143
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Status_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_PatchStatus_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UpdateUserStatusRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UpdateUserStatusRequest;
}>;
/**
 * This endpoint force verify user Note: - namespace: only accept publisher/studio namespace - userId: only accept publisher/studio userId action code: 10118
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Verify_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_UpdateVerify_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/status [PATCH]_** For **Deletion Account** purpose fill the reason with: - **DeactivateAccount** : if your deletion request comes from user - **AdminDeactivateAccount** : if your deletion request comes from admin
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Disable_ByUserId_v2, input]
 * }
 * ```
 */
declare const useUsersAdminApi_UpdateDisable_ByUserIdMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: DisableUserRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: DisableUserRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/agerestrictions/countries/{countryCode} [PATCH]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Country_ByCountryCode_v2, input]
 * }
 * ```
 */
declare const useUsersAdminApi_PatchCountry_ByCountryCodeMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<Country, AxiosError<ApiError>, SdkSetConfigParam & {
    countryCode: string;
    data: CountryAgeRestrictionRequest;
}>, "mutationKey">, callback?: (data: Country) => void) => UseMutationResult<Country, AxiosError<ApiError>, SdkSetConfigParam & {
    countryCode: string;
    data: CountryAgeRestrictionRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/password [PUT]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Password_ByUserId_v2, input]
 * }
 * ```
 */
declare const useUsersAdminApi_UpdatePassword_ByUserIdMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserPasswordUpdateRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserPasswordUpdateRequest;
}>;
/**
 * Update User Password
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Password_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_UpdatePassword_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserPasswordUpdateV3Request;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserPasswordUpdateV3Request;
}>;
/**
 * **This endpoint requires publisher namespace.** Returns list of users ID and namespace with their Justice platform account, under a namespace. If user doesn&#39;t have Justice platform account, the linkedPlatforms will be empty array.&#39;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.UsersPlatformsJustice_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetUsersPlatformsJustice_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        limit?: number;
        offset?: number;
    };
}, options?: Omit<UseQueryOptions<ListUsersWithPlatformAccountsResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ListUsersWithPlatformAccountsResponse>) => void) => UseQueryResult<ListUsersWithPlatformAccountsResponse, AxiosError<ApiError>>;
/**
 * Gets platform accounts that are already linked with user account. Action code : 10128 **Supported Platforms:** - Steam group (steamnetwork): - steam - steamopenid - PSN group (psn): - ps4web - ps4 - ps5 - XBOX group(xbox): - live - xblweb - Oculus group (oculusgroup): - oculus - oculusweb - Google group (google): - google - googleplaygames: - epicgames - facebook - twitch - discord - android - ios - apple - device - nintendo - awscognito - amazon - netflix - snapchat - _oidc platform id_ Note: - You can use either platform id or platform group as **platformId** parameter. - **Nintendo platform user id**: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1 ## Justice Platform Account The permission ’ADMIN:NAMESPACE:{namespace}:JUSTICE:USER:{userId}’ [READ] is required in order to read the UserID who linked with the user.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Platforms_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetPlatforms_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
    queryParams?: {
        after?: string | null;
        before?: string | null;
        limit?: number;
        platformId?: string | null;
        targetNamespace?: string | null;
    };
}, options?: Omit<UseQueryOptions<UserLinkedPlatformsResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserLinkedPlatformsResponseV3>) => void) => UseQueryResult<UserLinkedPlatformsResponseV3, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/agerestrictions/countries [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.CountriesAgerestrictions_v2, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetCountriesAgerestrictions_v2: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<CountryAgeRestrictionArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<CountryAgeRestrictionArray>) => void) => UseQueryResult<CountryAgeRestrictionArray, AxiosError<ApiError>>;
/**
 * action code : 10139
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.AgerestrictionsCountries_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetAgerestrictionsCountries_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<CountryV3ResponseArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<CountryV3ResponseArray>) => void) => UseQueryResult<CountryV3ResponseArray, AxiosError<ApiError>>;
/**
 * Will verify account and consume code if validateOnly is set false in request body Redeems a verification code sent to a user to verify the user&#39;s contact address is correct Available ContactType : **email** or **phone**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.CodeVerify_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_UpdateCodeVerify_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserVerificationRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserVerificationRequest;
}>;
/**
 * [WARNING] This endpoint is deleting user data from database directly by skipping GDPR flow
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Information_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_DeleteInformation_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>;
/**
 * Delete User Permission
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Permission_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_DeletePermission_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: PermissionDeleteRequest[];
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: PermissionDeleteRequest[];
}>;
/**
 * This endpoint will APPEND user&#39;s permissions with the ones defined in body Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect. Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *. In ranged schedule, first element will be start date, and second one will be end date If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive Syntax reference Fields: 1. Seconds: 0-59 * / , - 1. Minutes: 0-59 * / , - 1. Hours: 0-23 * / , - 1. Day of month: 1-31 * / , - L W 1. Month: 1-12 JAN-DEC * / , - 1. Day of week: 0-6 SUN-SAT * / , - L # 1. Year: 1970-2099 * / , - Special characters: 1. *: all values in the fields, e.g. * in seconds fields indicates every second 1. /: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter 1. ,: separate items of a list, e.g. MON,WED,FRI in day of week 1. -: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive 1. L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month. 1. W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34; 1. #: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Permission_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_CreatePermission_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: Permissions;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: Permissions;
}>;
/**
 * This endpoint will REPLACE user&#39;s permissions with the ones defined in body Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect. Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *. In ranged schedule, first element will be start date, and second one will be end date If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive Syntax reference Fields: 1. Seconds: 0-59 * / , - 2. Minutes: 0-59 * / , - 3. Hours: 0-23 * / , - 4. Day of month: 1-31 * / , - L W 5. Month: 1-12 JAN-DEC * / , - 6. Day of week: 0-6 SUN-SAT * / , - L # 7. Year: 1970-2099 * / , - Special characters: 1. *: all values in the fields, e.g. * in seconds fields indicates every second 2. /: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter 3. ,: separate items of a list, e.g. MON,WED,FRI in day of week 4. -: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive 5. L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month. 6. W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34; 7. #: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Permission_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_UpdatePermission_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: Permissions;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: Permissions;
}>;
/**
 * Set ban status for a single user for a specific ban. Retrieve user ban and choose the ban ID. Set the form parameter to true/false to enable or disable the ban. action code : 10142&#39;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Ban_ByUserId_ByBanId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_PatchBan_ByUserId_ByBanIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserBanResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    banId: string;
    data: BanUpdateRequest;
}>, "mutationKey">, callback?: (data: UserBanResponseV3) => void) => UseMutationResult<UserBanResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    banId: string;
    data: BanUpdateRequest;
}>;
/**
 * This endpoint get user&#39;s bans summary&#39;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.BansSummary_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetBansSummary_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<GetUserBanSummaryV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetUserBanSummaryV3>) => void) => UseQueryResult<GetUserBanSummaryV3, AxiosError<ApiError>>;
/**
 * The verification code is sent to email address. Available contexts for use : - **UserAccountRegistration** a context type used for verifying email address in user account registration. It returns 409 if the email address already verified. **_It is the default context if the Context field is empty_** - **UpdateEmailAddress** a context type used for verify user before updating email address.(Without email address verified checking) - **upgradeHeadlessAccount** The context is intended to be used whenever the email address wanted to be automatically verified on upgrading a headless account. If this context used, IAM rejects the request if the email address is already used by others by returning HTTP Status Code 409. action code: 10116
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.CodeRequest_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_UpdateCodeRequest_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: SendVerificationCodeRequestV3;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: SendVerificationCodeRequestV3;
}>;
/**
 * Admin List User ID By Platform User ID This endpoint intended to list game user ID from the given namespace This endpoint return list of user ID by given platform ID and list of platform user ID Supported platform: - steam - steamopenid - ps4web - ps4 - ps5 - live - xblweb - oculus - oculusweb - facebook - google - googleplaygames - twitch - discord - android - ios - apple - device - justice - epicgames - nintendo - awscognito - netflix - snapchat - oidc platform id Note: **nintendo platform user ID**: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.User_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_FetchUser_ByPlatformId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    platformId: string;
    data: PlatformUserIdRequest;
    queryParams?: {
        rawPID?: boolean | null;
        rawPUID?: boolean | null;
    };
}, options?: Omit<UseQueryOptions<UserPlatforms, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserPlatforms>) => void) => UseQueryResult<UserPlatforms, AxiosError<ApiError>>;
/**
 * Force linking platform account to user User Account. This endpoint intended for admin to forcefully link account to user. By default, these cases are not allowed - The platform account current is linked by another account - The target account ever linked this platform&#39;s another account
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.PlatformLink_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_UpdatePlatformLink_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: LinkPlatformAccountRequest;
    queryParams?: {
        skipConflict?: boolean | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: LinkPlatformAccountRequest;
    queryParams?: {
        skipConflict?: boolean | null;
    };
}>;
/**
 * This endpoint removes role from user action code: 10110
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Role_ByUserId_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_DeleteRole_ByUserId_ByRoleIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    roleId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    roleId: string;
}>;
/**
 * action code: 10109
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Role_ByUserId_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_UpdateRole_ByUserId_ByRoleIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    roleId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    roleId: string;
}>;
/**
 * action code : 10145
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.DeletionStatus_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetDeletionStatus_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<UserDeletionStatusResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserDeletionStatusResponse>) => void) => UseQueryResult<UserDeletionStatusResponse, AxiosError<ApiError>>;
/**
 * action code : 10144
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.DeletionStatus_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_PatchDeletionStatus_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UpdateUserDeletionStatusRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UpdateUserDeletionStatusRequest;
}>;
/**
 * Notes for this endpoint: This endpoint retrieve the first page of the data if &lt;code&gt;after&lt;/code&gt; and &lt;code&gt;before&lt;/code&gt; parameters is empty. - The maximum value of the limit is 100 and the minimum value of the limit is 1. - This endpoint retrieve the next page of the data if we provide &lt;code&gt;after&lt;/code&gt; parameters with valid Unix timestamp. - This endpoint retrieve the previous page of the data if we provide &lt;code&gt;before&lt;/code&gt; parameter with valid data Unix timestamp.&#34;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.LoginsHistories_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetLoginsHistories_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
    queryParams?: {
        after?: number;
        before?: number;
        limit?: number;
    };
}, options?: Omit<UseQueryOptions<LoginHistoriesResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<LoginHistoriesResponse>) => void) => UseQueryResult<LoginHistoriesResponse, AxiosError<ApiError>>;
/**
 * This endpoint ONLY accept **Client Token** This endpoint is utilized for specific scenarios where **email notifications are disabled** The user&#39;s email will be marked as verified Note: - emailAddress or password field are optional - request body can&#39;t be empty action code : 10103
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.TrustlyIdentity_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_PatchTrustlyIdentity_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserIdentityUpdateRequestV3;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserIdentityUpdateRequestV3;
}>;
/**
 * This endpoint retrieves platform accounts linked to user. It will query all linked platform accounts and result will be distinct &amp; grouped, same platform we will pick oldest linked one.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.DistinctPlatforms_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetDistinctPlatforms_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<DistinctPlatformResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<DistinctPlatformResponseV3>) => void) => UseQueryResult<DistinctPlatformResponseV3, AxiosError<ApiError>>;
/**
 * This endpoint gets list justice platform account by providing publisher namespace and publisher userID
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.PlatformsJustice_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetPlatformsJustice_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<GetUserMappingArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetUserMappingArray>) => void) => UseQueryResult<GetUserMappingArray, AxiosError<ApiError>>;
/**
 * This endpoint only retrieves 3rd party platform accounts linked to user. It will query platform accounts and result will be distinct &amp; grouped, same platform we will pick oldest linked one. ------ Supported status: - LINKED - RESTRICTIVELY_UNLINKED - UNLINKED - ALL
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.PlatformsDistinct_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetPlatformsDistinct_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
    queryParams?: {
        status?: string | null;
    };
}, options?: Omit<UseQueryOptions<DistinctPlatformResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<DistinctPlatformResponseV3>) => void) => UseQueryResult<DistinctPlatformResponseV3, AxiosError<ApiError>>;
/**
 * If validateOnly is set false, will upgrade headless account with verification code The endpoint upgrades a headless account by linking the headless account with the email address and the password. By upgrading the headless account into a full account, the user could use the email address and password for using Justice IAM. The endpoint is a shortcut for upgrading a headless account and verifying the email address in one call. In order to get a verification code for the endpoint, please check the send verification code endpoint. This endpoint also have an ability to update user data (if the user data field is specified) right after the upgrade account process is done. Supported user data fields : - displayName - dateOfBirth : format YYYY-MM-DD, e.g. 2019-04-29 - country : format ISO3166-1 alpha-2 two letter, e.g. US action code : 10124
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.HeadlesCodeVerify_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_UpdateHeadlesCodeVerify_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UpgradeHeadlessAccountWithVerificationCodeRequestV3;
}>, "mutationKey">, callback?: (data: UserResponseV3) => void) => UseMutationResult<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UpgradeHeadlessAccountWithVerificationCodeRequestV3;
}>;
/**
 * @deprecated
 * ## Supported platforms: - **steam** - **steamopenid** - **facebook** - **google** - **googleplaygames** - **oculus** - **twitch** - **android** - **ios** - **apple** - **device** - **discord** - **awscognito** - **epicgames** - **nintendo** - **snapchat** Unlink user&#39;s account from a specific platform. &#39;justice&#39; platform might have multiple accounts from different namespaces linked. _platformNamespace_ need to be specified when the platform ID is &#39;justice&#39;. Unlink user&#39;s account from justice platform will enable password token grant and password update. If you want to unlink user&#39;s account in a game namespace, you have to specify _platformNamespace_ to that game namespace. action code : 10121
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Platform_ByUserId_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_DeletePlatform_ByUserId_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
    data: UnlinkUserPlatformRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
    data: UnlinkUserPlatformRequest;
}>;
/**
 * action code: 10123
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.AgerestrictionCountry_ByCountryCode_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_PatchAgerestrictionCountry_ByCountryCodeMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<CountryV3Response, AxiosError<ApiError>, SdkSetConfigParam & {
    countryCode: string;
    data: CountryAgeRestrictionV3Request;
}>, "mutationKey">, callback?: (data: CountryV3Response) => void) => UseMutationResult<CountryV3Response, AxiosError<ApiError>, SdkSetConfigParam & {
    countryCode: string;
    data: CountryAgeRestrictionV3Request;
}>;
/**
 * This API is for admin to get user&#39;s link history. **Supported Platforms:** - Steam group (steamnetwork): - steam - steamopenid - PSN group (psn): - ps4web - ps4 - ps5 - XBOX group(xbox): - live - xblweb - Oculus group (oculusgroup): - oculus - oculusweb - Google group (google): - google - googleplaygames: - epicgames - facebook - twitch - discord - android - ios - apple - device - nintendo - awscognito - amazon - netflix - snapchat - _oidc platform id_ Note: - You can use either platform id or platform group as **platformId** parameter. - **Nintendo platform user id**: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.PlatformsLinkHistories_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetPlatformsLinkHistories_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
    queryParams: {
        platformId: string | null;
    };
}, options?: Omit<UseQueryOptions<UserPlatformLinkHistories, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserPlatformLinkHistories>) => void) => UseQueryResult<UserPlatformLinkHistories, AxiosError<ApiError>>;
/**
 * Unlink user&#39;s account from third platform in all namespaces. Several platforms are grouped under account groups, you can use either platform ID or platform group as platformId path parameter. example: to unlink steam third party account, you can use steamnetwork / steam / steamopenid as platformId path parameter. **Supported Platforms:** - Steam group (steamnetwork): - steam - steamopenid - PSN group (psn): - ps4web - ps4 - ps5 - XBOX group(xbox): - live - xblweb - Oculus group (oculusgroup): - oculus - oculusweb - Google group (google): - google - googleplaygames: - epicgames - facebook - twitch - discord - android - ios - apple - device - nintendo - awscognito - amazon - netflix - snapchat - _oidc platform id_ Note: - You can use either platform id or platform group as **platformId** parameter. - **Nintendo platform user id**: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1 Unlink platform account associated with a group: If user unlink platform account associated with a group, the API logic will unlink all of platform account under that group as well. example: if user unlink from ps4, the API logic will unlink ps5 and ps4web as well
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.All_ByUserId_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_DeleteAll_ByUserId_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/platforms/{platformId} [DELETE]_** ## Supported platforms: - **steam** - **steamopenid** - **facebook** - **google** - **oculus** - **twitch** - **android** - **ios** - **device** - **discord** Delete link of user&#39;s account with platform. &#39;justice&#39; platform might have multiple accounts from different namespaces linked. platform_namespace need to be specified when the platform ID is &#39;justice&#39;. Delete link of justice platform will enable password token grant and password update.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Link_ByUserId_ByPlatformId_v2, input]
 * }
 * ```
 */
declare const useUsersAdminApi_DeleteLink_ByUserId_ByPlatformIdMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
    data: {
        platform_namespace?: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
    data: {
        platform_namespace?: string | null;
    };
}>;
/**
 * **Prerequisite:** Platform client configuration need to be added to database for specific platformId. Namespace service URL need to be specified (refer to required environment variables). ## Supported platforms: - **steam**: The ticket’s value is the authentication code returned by Steam. - **steamopenid**: Steam&#39;s user authentication method using OpenID 2.0. The ticket&#39;s value is URL generated by Steam on web authentication - **facebook**: The ticket’s value is the authorization code returned by Facebook OAuth - **google**: The ticket’s value is the authorization code returned by Google OAuth - **googleplaygames**: The ticket’s value is the authorization code returned by Google play games OAuth - **oculus**: The ticket’s value is a string composed of Oculus&#39;s user ID and the nonce separated by a colon (:). - **twitch**: The ticket’s value is the authorization code returned by Twitch OAuth. - **android**: The ticket&#39;s value is the Android’s device ID - **ios**: The ticket&#39;s value is the iOS’s device ID. - **apple**: The ticket’s value is the authorization code returned by Apple OAuth. - **device**: Every device that does’nt run Android and iOS is categorized as a device platform. The ticket&#39;s value is the device’s ID. - **discord**: The ticket’s value is the authorization code returned by Discord OAuth. - **awscognito**: The ticket’s value is the aws cognito access token (JWT). - **epicgames**: The ticket’s value is an access-token obtained from Epicgames EOS Account Service. - **nintendo**: The ticket’s value is the authorization code(id_token) returned by Nintendo OAuth.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Link_ByUserId_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_PostLink_ByUserId_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
    data: {
        ticket: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
    data: {
        ticket: string | null;
    };
}>;
/**
 * Get User By Platform User ID This endpoint return user information by given platform ID and platform user ID. Several platforms are grouped under account groups, you can use either platform ID or platform group as platformId path parameter. example: for steam network platform, you can use steamnetwork / steam / steamopenid as platformId path parameter. **Supported Platforms:** - Steam group (steamnetwork): - steam - steamopenid - PSN group (psn): - ps4web - ps4 - ps5 - XBOX group(xbox): - live - xblweb - Oculus group (oculusgroup): - oculus - oculusweb - Google group (google): - google - googleplaygames: - epicgames - facebook - twitch - discord - android - ios - apple - device - nintendo - awscognito - amazon - netflix - snapchat - _oidc platform id_ Note: - You can use either platform id or platform group as **platformId** parameter. - **Nintendo platform user id**: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.User_ByPlatformId_ByPlatformUserId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetUser_ByPlatformId_ByPlatformUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    platformId: string;
    platformUserId: string;
}, options?: Omit<UseQueryOptions<UserResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserResponseV3>) => void) => UseQueryResult<UserResponseV3, AxiosError<ApiError>>;
/**
 * Delete User Permission
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Permission_ByUserId_ByResource_ByAction_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_DeletePermission_ByUserId_ByResource_ByActionMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    resource: string;
    action: number;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    resource: string;
    action: number;
}>;
/**
 * This endpoint gets user single platform account metadata. **Supported Platforms:** - Steam group (steamnetwork): - steam - steamopenid - PSN group (psn): - ps4web - ps4 - ps5 - XBOX group(xbox): - live - xblweb - Oculus group (oculusgroup): - oculus - oculusweb - Google group (google): - google - googleplaygames: - epicgames - facebook - twitch - discord - android - ios - apple - device - nintendo - awscognito - amazon - netflix - snapchat - _oidc platform id_ Note: - You can use either platform id or platform group as **platformId** parameter. - **Nintendo platform user id**: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.Metadata_ByUserId_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetMetadata_ByUserId_ByPlatformId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
    platformId: string;
    queryParams?: {
        crossNamespace?: boolean | null;
    };
}, options?: Omit<UseQueryOptions<UserPlatformMetadata, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserPlatformMetadata>) => void) => UseQueryResult<UserPlatformMetadata, AxiosError<ApiError>>;
/**
 * Admin get the link status of the third party platform token with user id. This endpoint is used for checking whether the third party user represented by third party token is linked with the corresponding user id. ## Supported platforms: - **steam**: The platform_token’s value is the authentication code returned by Steam. - **steamopenid**: Steam&#39;s user authentication method using OpenID 2.0. The platform_token&#39;s value is URL generated by Steam on web authentication - **facebook**: The platform_token’s value is the authorization code returned by Facebook OAuth - **google**: The platform_token’s value is the authorization code returned by Google OAuth - **googleplaygames**: The platform_token’s value is the authorization code returned by Google play games OAuth - **oculus**: The platform_token’s value is a string composed of Oculus&#39;s user ID and the nonce separated by a colon (:). - **twitch**: The platform_token’s value is the authorization code returned by Twitch OAuth. - **discord**: The platform_token’s value is the authorization code returned by Discord OAuth - **android**: The device_id is the Android’s device ID - **ios**: The device_id is the iOS’s device ID. - **apple**: The platform_token’s value is the authorization code returned by Apple OAuth.(We will use this code to generate APP token) - **device**: Every device that does’nt run Android and iOS is categorized as a device. The device_id is the device’s ID. - **justice**: The platform_token’s value is the designated user’s access token. - **epicgames**: The platform_token’s value is an access-token obtained from Epicgames EOS Account Service. - **ps4**: The platform_token’s value is the authorization code returned by Sony OAuth. - **ps5**: The platform_token’s value is the authorization code returned by Sony OAuth. - **nintendo**: The platform_token’s value is the authorization code(id_token) returned by Nintendo OAuth. - **awscognito**: The platform_token’s value is the aws cognito access token or id token (JWT). - **live**: The platform_token’s value is xbox XSTS token - **xblweb**: The platform_token’s value is code returned by xbox after login - **netflix**: The platform_token’s value is GAT (Gamer Access Token) returned by Netflix backend - **snapchat**: The platform_token’s value is the authorization code returned by Snapchat OAuth.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.LinkStatu_ByUserId_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_PostLinkStatu_ByUserId_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<TokenThirdPartyLinkStatusResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
    data: {
        platformToken: string | null;
    };
}>, "mutationKey">, callback?: (data: TokenThirdPartyLinkStatusResponse) => void) => UseMutationResult<TokenThirdPartyLinkStatusResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
    data: {
        platformToken: string | null;
    };
}>;
/**
 * This endpoint will support publisher access to game and game access to publisher If targetNamespace filled with publisher namespace then this endpoint will return its publisher user id and publisher namespace. If targetNamespace filled with game namespace then this endpoint will return its game user id and game namespace.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.PlatformJustice_ByUserId_ByTargetNamespace_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_GetPlatformJustice_ByUserId_ByTargetNamespace_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
    targetNamespace: string;
}, options?: Omit<UseQueryOptions<GetUserMappingV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetUserMappingV3>) => void) => UseQueryResult<GetUserMappingV3, AxiosError<ApiError>>;
/**
 * Create Justice User from Publisher User information. It will check first if Justice User on target namespace already exist.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.PlatformJustice_ByUserId_ByTargetNamespace_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_CreatePlatformJustice_ByUserId_ByTargetNamespaceMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<CreateJusticeUserResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    targetNamespace: string;
}>, "mutationKey">, callback?: (data: CreateJusticeUserResponse) => void) => UseMutationResult<CreateJusticeUserResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    targetNamespace: string;
}>;
/**
 * @deprecated
 * This API is for admin to delete user&#39;s linking history with target platform id. **Supported Platforms:** - Steam group (steamnetwork): - steam - steamopenid - PSN group (psn): - ps4web - ps4 - ps5 - XBOX group(xbox): - live - xblweb - Oculus group (oculusgroup): - oculus - oculusweb - Google group (google): - google - googleplaygames: - epicgames - facebook - twitch - discord - android - ios - apple - device - nintendo - awscognito - amazon - netflix - snapchat - _oidc platform id_ Note: - You can use either platform id or platform group as **platformId** parameter. - **Nintendo platform user id**: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1 ---- **Substitute endpoint**: /v3/admin/namespaces/{namespace}/users/{userId}/platforms/{platformId}/link/restrictions
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.LinkHistory_ByUserId_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_DeleteLinkHistory_ByUserId_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
}>;
/**
 * This API is for admin to delete user&#39;s linking restriction with target platform id. **Supported Platforms:** - Steam group (steamnetwork): - steam - steamopenid - PSN group (psn): - ps4web - ps4 - ps5 - XBOX group(xbox): - live - xblweb - Oculus group (oculusgroup): - oculus - oculusweb - Google group (google): - google - googleplaygames: - epicgames - facebook - twitch - discord - android - ios - apple - device - nintendo - awscognito - amazon - netflix - snapchat - _oidc platform id_ Note: - You can use either platform id or platform group as **platformId** parameter. - **Nintendo platform user id**: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersAdmin.LinkRestriction_ByUserId_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useUsersAdminApi_DeleteLinkRestriction_ByUserId_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_UsersV4Admin {
    UserMe_v4 = "Iam.UsersV4Admin.UserMe_v4",
    UserInvite_v4 = "Iam.UsersV4Admin.UserInvite_v4",
    UserUserInvite_v4 = "Iam.UsersV4Admin.UserUserInvite_v4",
    InvitationHistories_v4 = "Iam.UsersV4Admin.InvitationHistories_v4",
    UsersMeMfaFactor_v4 = "Iam.UsersV4Admin.UsersMeMfaFactor_v4",
    UserMeMfaFactor_v4 = "Iam.UsersV4Admin.UserMeMfaFactor_v4",
    UsersMeMfaStatus_v4 = "Iam.UsersV4Admin.UsersMeMfaStatus_v4",
    UserMeMfaStatus_v4 = "Iam.UsersV4Admin.UserMeMfaStatus_v4",
    UsersMeMfaBackupCode_v4 = "Iam.UsersV4Admin.UsersMeMfaBackupCode_v4",
    UserMeMfaBackupCode_v4 = "Iam.UsersV4Admin.UserMeMfaBackupCode_v4",
    UserMeMfaEmailCode_v4 = "Iam.UsersV4Admin.UserMeMfaEmailCode_v4",
    UsersMeMfaBackupCodes_v4 = "Iam.UsersV4Admin.UsersMeMfaBackupCodes_v4",
    UserMeMfaBackupCode_admin_v4 = "Iam.UsersV4Admin.UserMeMfaBackupCode_admin_v4",
    UserMeMfaEmailEnable_v4 = "Iam.UsersV4Admin.UserMeMfaEmailEnable_v4",
    UserMeMfaEmailDisable_v4 = "Iam.UsersV4Admin.UserMeMfaEmailDisable_v4",
    User_v4 = "Iam.UsersV4Admin.User_v4",
    UserMeMfaChallengeVerify_v4 = "Iam.UsersV4Admin.UserMeMfaChallengeVerify_v4",
    UserMeMfaAuthenticatorKey_v4 = "Iam.UsersV4Admin.UserMeMfaAuthenticatorKey_v4",
    UserMeMfaBackupCodeEnable_v4 = "Iam.UsersV4Admin.UserMeMfaBackupCodeEnable_v4",
    UserMeMfaBackupCodeDisable_v4 = "Iam.UsersV4Admin.UserMeMfaBackupCodeDisable_v4",
    UserMeMfaBackupCodeEnable_admin_v4 = "Iam.UsersV4Admin.UserMeMfaBackupCodeEnable_admin_v4",
    UsersMeMfaBackupCodeDownload_v4 = "Iam.UsersV4Admin.UsersMeMfaBackupCodeDownload_v4",
    TestUser_v4 = "Iam.UsersV4Admin.TestUser_v4",
    UserMeMfaAuthenticatorEnable_v4 = "Iam.UsersV4Admin.UserMeMfaAuthenticatorEnable_v4",
    UserMeMfaAuthenticatorDisable_v4 = "Iam.UsersV4Admin.UserMeMfaAuthenticatorDisable_v4",
    User_ByUserId_v4 = "Iam.UsersV4Admin.User_ByUserId_v4",
    InvitationHistories_ByNS_v4 = "Iam.UsersV4Admin.InvitationHistories_ByNS_v4",
    UserBulkValidate_v4 = "Iam.UsersV4Admin.UserBulkValidate_v4",
    Email_ByUserId_v4 = "Iam.UsersV4Admin.Email_ByUserId_v4",
    Role_ByUserId_v4 = "Iam.UsersV4Admin.Role_ByUserId_v4",
    Roles_ByUserId_v4 = "Iam.UsersV4Admin.Roles_ByUserId_v4",
    Role_ByUserId_ByNS_v4 = "Iam.UsersV4Admin.Role_ByUserId_ByNS_v4",
    UserBulkAccountType_v4 = "Iam.UsersV4Admin.UserBulkAccountType_v4",
    InvitationHistoriesUsers_v4 = "Iam.UsersV4Admin.InvitationHistoriesUsers_v4",
    MfaStatus_ByUserId_v4 = "Iam.UsersV4Admin.MfaStatus_ByUserId_v4",
    MfaDisable_ByUserId_v4 = "Iam.UsersV4Admin.MfaDisable_ByUserId_v4"
}
/**
 * This Endpoint support update user based on given data. **Single request can update single field or multi fields.** Supported field {country, displayName, languageTag, dateOfBirth, avatarUrl, userName} Country use ISO3166-1 alpha-2 two letter, e.g. US. Date of Birth format : YYYY-MM-DD, e.g. 2019-04-29. action code : 10103
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserMe_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_PatchUserMeMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserUpdateRequestV3;
}>, "mutationKey">, callback?: (data: UserResponseV3) => void) => UseMutationResult<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserUpdateRequestV3;
}>;
/**
 * Use this endpoint to invite admin or non-admin user and assign role to them. The role must be scoped to namespace. An admin user can only assign role with **assignedNamespaces** if the admin user has required permission which is same as the required permission of endpoint: [AdminAddUserRoleV4]. Detail request body : - **emailAddresses** is required, List of email addresses that will be invited - **isAdmin** is required, true if user is admin, false if user is not admin - **namespace** is optional. Only works on multi tenant mode, if not specified then it will be assigned Publisher namespace, if specified, it will become that studio/publisher where user is invited to. - **roleId** is optional, if not specified then it will only assign User role. - **assignedNamespaces** is optional, List of namespaces which the Role will be assigned to the user, only works when Role is not empty. The invited admin will also assigned with &#34;User&#34; role by default.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserInvite_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_CreateUserInviteMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<InviteUserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: InviteUserRequestV4;
}>, "mutationKey">, callback?: (data: InviteUserResponseV3) => void) => UseMutationResult<InviteUserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: InviteUserRequestV4;
}>;
/**
 * @deprecated
 * Use this endpoint to invite admin or non-admin user and assign role to them. The role must be scoped to namespace. An admin user can only assign role with **assignedNamespaces** if the admin user has required permission which is same as the required permission of endpoint: [AdminAddUserRoleV4]. Detail request body : - Email Address is required, List of email addresses that will be invited - isAdmin is required, true if user is admin, false if user is not admin - Namespace is optional. Only works on multi tenant mode, if not specified then it will be assigned Publisher namespace, if specified, it will become that studio/publisher where user is invited to. - Role is optional, if not specified then it will only assign User role. - Assigned Namespaces is optional, List of namespaces which the Role will be assigned to the user, only works when Role is not empty. The invited admin will also assigned with &#34;User&#34; role by default. Substitute endpoint: /iam/v4/admin/users/invite
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserUserInvite_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_CreateUserUserInviteMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<InviteUserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: InviteUserRequestV4;
}>, "mutationKey">, callback?: (data: InviteUserResponseV3) => void) => UseMutationResult<InviteUserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: InviteUserRequestV4;
}>;
/**
 * This endpoint is to list all Invitation Histories for new studio namespace in multi tenant mode. It will return error if the service multi tenant mode is set to false. Accepted Query: - namespace - offset - limit
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.InvitationHistories_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_GetInvitationHistories_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        limit?: number;
        namespace?: string | null;
        offset?: number;
    };
}, options?: Omit<UseQueryOptions<ListInvitationHistoriesV4Response, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ListInvitationHistoriesV4Response>) => void) => UseQueryResult<ListInvitationHistoriesV4Response, AxiosError<ApiError>>;
/**
 * This endpoint is used to get user enabled factors.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UsersMeMfaFactor_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_GetUsersMeMfaFactor_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<EnabledFactorsResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<EnabledFactorsResponseV4>) => void) => UseQueryResult<EnabledFactorsResponseV4, AxiosError<ApiError>>;
/**
 * This endpoint is used to make 2FA factor default.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserMeMfaFactor_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_PostUserMeMfaFactorMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        factor: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        factor: string | null;
    };
}>;
/**
 * This endpoint will get user&#39;s&#39; MFA status.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UsersMeMfaStatus_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_GetUsersMeMfaStatus_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<UserMfaStatusResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserMfaStatusResponseV4>) => void) => UseQueryResult<UserMfaStatusResponseV4, AxiosError<ApiError>>;
/**
 * @deprecated
 * This endpoint will get user&#39;s&#39; MFA status. ------------ **Substitute endpoint**: /iam/v4/admin/users/me/mfa/status [GET]
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserMeMfaStatus_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_CreateUserMeMfaStatusMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserMfaStatusResponseV4, AxiosError<ApiError>, SdkSetConfigParam>, "mutationKey">, callback?: (data: UserMfaStatusResponseV4) => void) => UseMutationResult<UserMfaStatusResponseV4, AxiosError<ApiError>, SdkSetConfigParam>;
/**
 * @deprecated
 * This endpoint is used to get 8-digits backup codes. Each code is a one-time code and will be deleted once used.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UsersMeMfaBackupCode_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_GetUsersMeMfaBackupCode_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<BackupCodesResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<BackupCodesResponseV4>) => void) => UseQueryResult<BackupCodesResponseV4, AxiosError<ApiError>>;
/**
 * @deprecated
 * This endpoint is used to generate 8-digits backup codes. Each code is a one-time code and will be deleted once used.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserMeMfaBackupCode_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_CreateUserMeMfaBackupCodeMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<BackupCodesResponseV4, AxiosError<ApiError>, SdkSetConfigParam>, "mutationKey">, callback?: (data: BackupCodesResponseV4) => void) => UseMutationResult<BackupCodesResponseV4, AxiosError<ApiError>, SdkSetConfigParam>;
/**
 * This endpoint is used to send email code. -------------- Supported actions: * ChangePassword * DisableMFAEmail
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserMeMfaEmailCode_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_PostUserMeMfaEmailCodeMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        action?: string | null;
        languageTag?: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        action?: string | null;
        languageTag?: string | null;
    };
}>;
/**
 * This endpoint is used to get 8-digits backup codes. Each code is a one-time code and will be deleted once used.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UsersMeMfaBackupCodes_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_GetUsersMeMfaBackupCodes_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        languageTag?: string | null;
    };
}, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * This endpoint is used to generate 8-digits backup codes. Each code is a one-time code and will be deleted once used.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserMeMfaBackupCode_admin_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_CreateUserMeMfaBackupCode_adminMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    queryParams?: {
        languageTag?: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    queryParams?: {
        languageTag?: string | null;
    };
}>;
/**
 * This endpoint is used to enable 2FA email.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserMeMfaEmailEnable_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_PostUserMeMfaEmailEnableMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code: string | null;
    };
}>;
/**
 * This endpoint is used to disable 2FA email. ------ **Note**: **mfaToken** is required when all the following are enabled: - The environment variable **SENSITIVE_MFA_AUTH_ENABLED** is true - The **Two-Factor Authentication** is enabled in the IAM client where user logs in - Users already enabled the MFA
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserMeMfaEmailDisable_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_CreateUserMeMfaEmailDisableMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: DisableMfaRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: DisableMfaRequest;
}>;
/**
 * Create a new user with unique email address and username. **Required attributes:** - authType: possible value is EMAILPASSWD - emailAddress: Please refer to the rule from /v3/public/inputValidations API. - username: Please refer to the rule from /v3/public/inputValidations API. - password: Please refer to the rule from /v3/public/inputValidations API. - country: ISO3166-1 alpha-2 two letter, e.g. US. - dateOfBirth: YYYY-MM-DD, e.g. 1990-01-01. valid values are between 1905-01-01 until current date. - uniqueDisplayName: required when uniqueDisplayNameEnabled/UNIQUE_DISPLAY_NAME_ENABLED is true, please refer to the rule from /v3/public/inputValidations API. **Not required attributes:** - displayName: Please refer to the rule from /v3/public/inputValidations API. This endpoint support accepting agreements for the created user. Supply the accepted agreements in acceptedPolicies attribute.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.User_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_CreateUserMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<CreateUserResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    data: CreateUserRequestV4;
}>, "mutationKey">, callback?: (data: CreateUserResponseV4) => void) => UseMutationResult<CreateUserResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    data: CreateUserRequestV4;
}>;
/**
 * This endpoint will verify user&#39;s&#39; MFA code and generate a MFA token.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserMeMfaChallengeVerify_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_PostUserMeMfaChallengeVerifyMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserMfaTokenResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code?: string | null;
        factor?: string | null;
    };
}>, "mutationKey">, callback?: (data: UserMfaTokenResponseV4) => void) => UseMutationResult<UserMfaTokenResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code?: string | null;
        factor?: string | null;
    };
}>;
/**
 * This endpoint is used to generate a secret key for 3rd-party authenticator app. A QR code URI is also returned so that frontend can generate QR code image.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserMeMfaAuthenticatorKey_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_CreateUserMeMfaAuthenticatorKeyMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<AuthenticatorKeyResponseV4, AxiosError<ApiError>, SdkSetConfigParam>, "mutationKey">, callback?: (data: AuthenticatorKeyResponseV4) => void) => UseMutationResult<AuthenticatorKeyResponseV4, AxiosError<ApiError>, SdkSetConfigParam>;
/**
 * @deprecated
 * This endpoint is used to enable 2FA backup codes.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserMeMfaBackupCodeEnable_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_CreateUserMeMfaBackupCodeEnableMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<BackupCodesResponseV4, AxiosError<ApiError>, SdkSetConfigParam>, "mutationKey">, callback?: (data: BackupCodesResponseV4) => void) => UseMutationResult<BackupCodesResponseV4, AxiosError<ApiError>, SdkSetConfigParam>;
/**
 * This endpoint is used to disable 2FA backup codes. ------ **Note**: **mfaToken** is required when all the following are enabled: - The environment variable **SENSITIVE_MFA_AUTH_ENABLED** is true - The **Two-Factor Authentication** is enabled in the IAM client where user logs in - Users already enabled the MFA
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserMeMfaBackupCodeDisable_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_DeleteUserMeMfaBackupCodeDisableMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: DisableMfaRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: DisableMfaRequest;
}>;
/**
 * This endpoint is used to enable 2FA backup codes.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserMeMfaBackupCodeEnable_admin_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_CreateUserMeMfaBackupCodeEnable_adminMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    queryParams?: {
        languageTag?: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    queryParams?: {
        languageTag?: string | null;
    };
}>;
/**
 * @deprecated
 * This endpoint is used to download backup codes.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UsersMeMfaBackupCodeDownload_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_GetUsersMeMfaBackupCodeDownload_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * Create test users and not send verification code email. Note: - count : Enter the number of test users you want to create in the count field. The maximum value of the user count is 100. - userInfo(optional) : - country: you can specify country for the test user. Country use ISO3166-1 alpha-2 two letter, e.g. US
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.TestUser_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_CreateTestUserMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<CreateTestUsersResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    data: CreateTestUsersRequestV4;
}>, "mutationKey">, callback?: (data: CreateTestUsersResponseV4) => void) => UseMutationResult<CreateTestUsersResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    data: CreateTestUsersRequestV4;
}>;
/**
 * This endpoint is used to enable 2FA authenticator. ---------- Prerequisites: - Generate the secret key/QR code uri by **_/iam/v4/admin/users/me/mfa/authenticator/key_** - Consume the secret key/QR code by an authenticator app - Get the code from the authenticator app
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserMeMfaAuthenticatorEnable_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_PostUserMeMfaAuthenticatorEnableMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code: string | null;
    };
}>;
/**
 * This endpoint is used to disable 2FA authenticator. ------ **Note**: **mfaToken** is required when all the following are enabled: - The environment variable **SENSITIVE_MFA_AUTH_ENABLED** is true - The **Two-Factor Authentication** is enabled in the IAM client where user logs in - Users already enabled the MFA
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserMeMfaAuthenticatorDisable_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_DeleteUserMeMfaAuthenticatorDisableMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: DisableMfaRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: DisableMfaRequest;
}>;
/**
 * This Endpoint support update user based on given data. **Single request can update single field or multi fields.** Supported field {country, displayName, languageTag, dateOfBirth, avatarUrl, userName} Country use ISO3166-1 alpha-2 two letter, e.g. US. Date of Birth format : YYYY-MM-DD, e.g. 2019-04-29. **Response body logic when user updating email address:** - User want to update email address of which have been verified, newEmailAddress response field will be filled with new email address. - User want to update email address of which have not been verified, { oldEmailAddress, emailAddress} response field will be filled with new email address. - User want to update email address of which have been verified and updated before, { oldEmailAddress, emailAddress} response field will be filled with verified email before. newEmailAddress response field will be filled with newest email address. action code : 10103
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.User_ByUserId_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_UpdateUser_ByUserIdMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserUpdateRequestV3;
}>, "mutationKey">, callback?: (data: UserResponseV3) => void) => UseMutationResult<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserUpdateRequestV3;
}>;
/**
 * This endpoint is to Invitation Historiy for specific new studio namespace in multi tenant mode. It will return error if the service multi tenant mode is set to false.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.InvitationHistories_ByNS_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_GetInvitationHistories_ByNS_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<InvitationHistoryResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<InvitationHistoryResponse>) => void) => UseQueryResult<InvitationHistoryResponse, AxiosError<ApiError>>;
/**
 * Use this endpoint to check if userID exists or not Maximum number of userID to be checked is 50
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserBulkValidate_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_FetchUserBulkValidate_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    data: CheckValidUserIdRequestV4;
}, options?: Omit<UseQueryOptions<ListValidUserIdResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ListValidUserIdResponseV4>) => void) => UseQueryResult<ListValidUserIdResponseV4, AxiosError<ApiError>>;
/**
 * This is the endpoint for an admin to update a user email address. This endpoint need a valid user token from an admin to verify its identity (email) before updating a user.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.Email_ByUserId_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_UpdateEmail_ByUserIdMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: EmailUpdateRequestV4;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: EmailUpdateRequestV4;
}>;
/**
 * Remove a role from user&#39;s roles.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.Role_ByUserId_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_DeleteRole_ByUserIdMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: RemoveUserRoleV4Request;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: RemoveUserRoleV4Request;
}>;
/**
 * List roles assigned to a user
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.Roles_ByUserId_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_GetRoles_ByUserId_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<ListUserRolesV4Response, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ListUserRolesV4Response>) => void) => UseQueryResult<ListUserRolesV4Response, AxiosError<ApiError>>;
/**
 * New role will be appended to user&#39;s current roles. An admin user can only assign role with **assignedNamespaces** if the admin user has required permission which is same as the required permission of this endpoint.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.Role_ByUserId_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_UpdateRole_ByUserIdMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<ListUserRolesV4Response, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: AddUserRoleV4Request;
}>, "mutationKey">, callback?: (data: ListUserRolesV4Response) => void) => UseMutationResult<ListUserRolesV4Response, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: AddUserRoleV4Request;
}>;
/**
 * User&#39;s roles will be replaced with roles from request body. An admin user can only assign role with **assignedNamespaces** if the admin user has required permission which is same as the required permission of this endpoint.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.Role_ByUserId_ByNS_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_UpdateRole_ByUserId_ByNSMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<ListUserRolesV4Response, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: AddUserRoleV4Request;
}>, "mutationKey">, callback?: (data: ListUserRolesV4Response) => void) => UseMutationResult<ListUserRolesV4Response, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: AddUserRoleV4Request;
}>;
/**
 * This endpoint is used to change users account type - set **testAccount** to &lt;code&gt;true&lt;/code&gt; to mark user as test account type - set **testAccount** to &lt;code&gt;false&lt;/code&gt; to mark user as default account type
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.UserBulkAccountType_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_PatchUserBulkAccountTypeMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: BulkAccountTypeUpdateRequestV4;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: BulkAccountTypeUpdateRequestV4;
}>;
/**
 * This endpoint is to Get list of users Invitation History for specific new studio namespace in multi tenant mode. It will return error if the service multi tenant mode is set to false. Accepted Query: - offset - limit
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.InvitationHistoriesUsers_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_GetInvitationHistoriesUsers_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        limit?: number;
        offset?: number;
    };
}, options?: Omit<UseQueryOptions<NamespaceInvitationHistoryUserV4Response, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<NamespaceInvitationHistoryUserV4Response>) => void) => UseQueryResult<NamespaceInvitationHistoryUserV4Response, AxiosError<ApiError>>;
/**
 * **This endpoint is used to get user&#39;s 2FA status.**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.MfaStatus_ByUserId_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_GetMfaStatus_ByUserId_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<UserMfaStatusResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserMfaStatusResponseV4>) => void) => UseQueryResult<UserMfaStatusResponseV4, AxiosError<ApiError>>;
/**
 * This endpoint is used to disable user 2FA. ----------- **Note**: if the factor is not specified, will disable all 2FA methods.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4Admin.MfaDisable_ByUserId_v4, input]
 * }
 * ```
 */
declare const useUsersV4AdminApi_DeleteMfaDisable_ByUserIdMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: DisableMfaRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: DisableMfaRequest;
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_Bans {
    Bans = "Iam.Bans.Bans",
    BansReasons = "Iam.Bans.BansReasons"
}
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/bans [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Bans.Bans, input]
 * }
 * ```
 */
declare const useBansApi_GetBans: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<Bans, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<Bans>) => void) => UseQueryResult<Bans, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/bans/reasons [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Bans.BansReasons, input]
 * }
 * ```
 */
declare const useBansApi_GetBansReasons: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<BanReasons, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<BanReasons>) => void) => UseQueryResult<BanReasons, AxiosError<ApiError>>;

/**
 * AUTO GENERATED
 */

declare enum Key_Clients {
    Clients = "Iam.Clients.Clients",
    Client = "Iam.Clients.Client",
    Client_ByClientId = "Iam.Clients.Client_ByClientId",
    Secret_ByClientId = "Iam.Clients.Secret_ByClientId",
    Clients_ByNS = "Iam.Clients.Clients_ByNS",
    Client_ByNS = "Iam.Clients.Client_ByNS",
    Clientpermission_ByClientId = "Iam.Clients.Clientpermission_ByClientId",
    Client_ByClientId_ByNS = "Iam.Clients.Client_ByClientId_ByNS",
    Clientpermission_ByClientId_ByResource_ByAction = "Iam.Clients.Clientpermission_ByClientId_ByResource_ByAction"
}
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/clients [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Clients.Clients, input]
 * }
 * ```
 */
declare const useClientsApi_GetClients: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<ClientResponseArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ClientResponseArray>) => void) => UseQueryResult<ClientResponseArray, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/clients [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Clients.Client, input]
 * }
 * ```
 */
declare const useClientsApi_CreateClientMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<ClientCreationResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ClientCreateRequest;
}>, "mutationKey">, callback?: (data: ClientCreationResponse) => void) => UseMutationResult<ClientCreationResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ClientCreateRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/clients/{clientId} [DELETE]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Clients.Client_ByClientId, input]
 * }
 * ```
 */
declare const useClientsApi_DeleteClient_ByClientIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/clients/{clientId} [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Clients.Client_ByClientId, input]
 * }
 * ```
 */
declare const useClientsApi_GetClient_ByClientId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    clientId: string;
}, options?: Omit<UseQueryOptions<ClientResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ClientResponse>) => void) => UseQueryResult<ClientResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/clients/{clientId} [PATCH]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Clients.Client_ByClientId, input]
 * }
 * ```
 */
declare const useClientsApi_UpdateClient_ByClientIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<ClientResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    data: ClientUpdateRequest;
}>, "mutationKey">, callback?: (data: ClientResponse) => void) => UseMutationResult<ClientResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    data: ClientUpdateRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/{clientId}/secret [PUT]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Clients.Secret_ByClientId, input]
 * }
 * ```
 */
declare const useClientsApi_UpdateSecret_ByClientIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    data: ClientUpdateSecretRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    data: ClientUpdateSecretRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/clients [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Clients.Clients_ByNS, input]
 * }
 * ```
 */
declare const useClientsApi_GetClients_ByNS: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<ClientResponseArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ClientResponseArray>) => void) => UseQueryResult<ClientResponseArray, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/v3/admin/namespaces/{namespace}/clients [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Clients.Client_ByNS, input]
 * }
 * ```
 */
declare const useClientsApi_CreateClient_ByNSMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<ClientCreationResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ClientCreateRequest;
}>, "mutationKey">, callback?: (data: ClientCreationResponse) => void) => UseMutationResult<ClientCreationResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ClientCreateRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _iam/v3/admin/namespaces/{namespace}/clients/{clientId}/permissions [PUT]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Clients.Clientpermission_ByClientId, input]
 * }
 * ```
 */
declare const useClientsApi_UpdateClientpermission_ByClientIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    data: ClientPermissions;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    data: ClientPermissions;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/clients/{clientId} [DELETE]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Clients.Client_ByClientId_ByNS, input]
 * }
 * ```
 */
declare const useClientsApi_DeleteClient_ByClientId_ByNSMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/clients/{clientId}/permissions/{resource}/{action} [DELETE]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Clients.Clientpermission_ByClientId_ByResource_ByAction, input]
 * }
 * ```
 */
declare const useClientsApi_DeleteClientpermission_ByClientId_ByResource_ByActionMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    resource: string;
    action: number;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    resource: string;
    action: number;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/clients/{clientId}/permissions [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Clients.Clientpermission_ByClientId_ByResource_ByAction, input]
 * }
 * ```
 */
declare const useClientsApi_UpdateClientpermission_ByClientId_ByResource_ByActionMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    resource: string;
    action: number;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    clientId: string;
    resource: string;
    action: number;
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_Config {
    Config_ByConfigKey_v3 = "Iam.Config.Config_ByConfigKey_v3"
}
/**
 * This endpoint return the value of config key. The namespace should be publisher namespace or studio namespace. Note: this endpoint does not need any authorization. **Supported config key:** * uniqueDisplayNameEnabled * usernameDisabled * mandatoryEmailVerificationEnabled
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Config.Config_ByConfigKey_v3, input]
 * }
 * ```
 */
declare const useConfigApi_GetConfig_ByConfigKey_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    configKey: string;
}, options?: Omit<UseQueryOptions<ConfigValueResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ConfigValueResponseV3>) => void) => UseQueryResult<ConfigValueResponseV3, AxiosError<ApiError>>;

/**
 * AUTO GENERATED
 */

declare enum Key_Country {
    Countries_v3 = "Iam.Country.Countries_v3"
}
/**
 * Public get country list, will filter out countries in black list
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Country.Countries_v3, input]
 * }
 * ```
 */
declare const useCountryApi_GetCountries_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<CountryResponseArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<CountryResponseArray>) => void) => UseQueryResult<CountryResponseArray, AxiosError<ApiError>>;

/**
 * AUTO GENERATED
 */

declare enum Key_InputValidations {
    InputValidations_v3 = "Iam.InputValidations.InputValidations_v3",
    InputValidation_ByField_v3 = "Iam.InputValidations.InputValidation_ByField_v3"
}
/**
 * No role required This endpoint is to get list of input validation configuration. &lt;code&gt;regex&lt;/code&gt; parameter will be returned if &lt;code&gt;isCustomRegex&lt;/code&gt; is true. Otherwise, it will be empty.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_InputValidations.InputValidations_v3, input]
 * }
 * ```
 */
declare const useInputValidationsApi_GetInputValidations_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        defaultOnEmpty?: boolean | null;
        languageCode?: string | null;
    };
}, options?: Omit<UseQueryOptions<InputValidationsPublicResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<InputValidationsPublicResponse>) => void) => UseQueryResult<InputValidationsPublicResponse, AxiosError<ApiError>>;
/**
 * This endpoint is to get input validation configuration by field.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_InputValidations.InputValidation_ByField_v3, input]
 * }
 * ```
 */
declare const useInputValidationsApi_GetInputValidation_ByField_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    field: string;
}, options?: Omit<UseQueryOptions<InputValidationConfigVersion, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<InputValidationConfigVersion>) => void) => UseQueryResult<InputValidationConfigVersion, AxiosError<ApiError>>;

/**
 * AUTO GENERATED
 */

declare enum Key_OAuth {
    OauthJwks = "Iam.OAuth.OauthJwks",
    OauthToken = "Iam.OAuth.OauthToken",
    OauthVerify = "Iam.OAuth.OauthVerify",
    OauthAuthorize = "Iam.OAuth.OauthAuthorize",
    OauthRevokeUser = "Iam.OAuth.OauthRevokeUser",
    OauthRevokeToken = "Iam.OAuth.OauthRevokeToken",
    OauthRevocationlist = "Iam.OAuth.OauthRevocationlist",
    RevokeOauth_ByUserId = "Iam.OAuth.RevokeOauth_ByUserId",
    TokenOauth_ByPlatformId = "Iam.OAuth.TokenOauth_ByPlatformId"
}
/**
 * @deprecated
 * ## The endpoint is going to be deprecated This endpoint serves public keys for verifying JWT access tokens generated by this service. When a client application wants to verify a JWT token, it needs to get the &#39;kid&#39; value found in the JWT token header and use it to look up the corresponding public key from a set returned by this endpoint. The client application can then use that public key to verify the JWT. A client application might cache the keys so it doesn&#39;t need to do request every time it needs to verify a JWT token. If a client application caches the keys and a key with the same &#39;kid&#39; cannot be found in the cache, it should then try to refresh the keys by making a request to this endpoint again. Please refer to the RFC for more information about JWK (JSON Web Key): https://tools.ietf.org/html/rfc7517 ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/oauth/jwks [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth.OauthJwks, input]
 * }
 * ```
 */
declare const useOAuthApi_GetOauthJwks: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<JwkSet, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<JwkSet>) => void) => UseQueryResult<JwkSet, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: /iam/v3/oauth/token [POST]** - **Note: difference in V3 response:** format difference（Pascal case =&gt; Camel case): permissions field from Action =&gt; action, Resource =&gt; resource This endpoint requires all requests to have &lt;code&gt;Authorization&lt;/code&gt; header set with &lt;code&gt;Basic&lt;/code&gt; access authentication constructed from client id and client secret. This endpoint supports different **grant types**: 1. Grant Type == &lt;code&gt;client_credentials&lt;/code&gt;: This endpoint will check the client credentials provided through Authorization header. 2. Grant Type == &lt;code&gt;password&lt;/code&gt;: The grant type to use for authenticating a user, whether it&#39;s by email / username and password combination or through platform. 3. Grant Type == &lt;code&gt;refresh_token&lt;/code&gt;: Used to get a new access token for a valid refresh token. 4. Grant Type == &lt;code&gt;authorization_code&lt;/code&gt;: It generates the user token by given the authorization code which generated in &#34;/authorize&#34; API response. It should also pass in the redirect_uri, which should be the same as generating the authorization code request. For platform authentication, use grant type &lt;code&gt;password&lt;/code&gt;. The &lt;code&gt;username&lt;/code&gt; field would be in form of &lt;code&gt;platform:&lt;platform type&gt;&lt;/code&gt;, for example &lt;code&gt;platform:steam&lt;/code&gt; for Steam. For the &lt;code&gt;password&lt;/code&gt; field, set it to the authentication/authorization ticket or token obtainable through the respective platform SDK after authenticated the user to the platform. Supported platforms: - **steam** - use &lt;code&gt;platform:steam&lt;/code&gt; as the username and use the authentication ticket obtained from Steam through the Steam SDK as the password. - **ps4** - use &lt;code&gt;platform:ps4&lt;/code&gt; as the username and use the authorization code obtained from the PlayStation Network through a player PS4 unit as the password. - **live** - use &lt;code&gt;platform:live&lt;/code&gt; as the username and use token obtained from Xbox Secure Token Service (XSTS) as the password. - **oculus** - use &lt;code&gt;platform:oculus&lt;/code&gt; as the username and use the &lt;code&gt;user_id:nonce&lt;/code&gt; as password obtained from Oculus through the Oculus SDK. The access token and refresh token are in form of JWT token. An access token JWT contains data which structure is similar to the Response Class below, but without OAuth-related data. To verify a token, use the public keys obtained from the &lt;code&gt;/jwks&lt;/code&gt; endpoint below. ## Access Token Content Following is the access token’s content: - **namespace**. It is the namespace the token was generated from. - **display_name**. The display name of the sub. It is empty if the token is generated from the client credential - **roles**. The sub’s roles. It is empty if the token is generated from the client credential - **namespace_roles**. The sub’s roles scoped to namespace. Improvement from roles, which make the role scoped to specific namespace instead of global to publisher namespace - **permissions**. The sub or aud’ permissions - **bans**. The sub’s list of bans. It is used by the IAM client for validating the token. - **jflgs**. It stands for Justice Flags. It is a special flag used for storing additional status information regarding the sub. It is implemented as a bit mask. Following explains what each bit represents: - 1: Email Address Verified - 2: Phone Number Verified - 4: Anonymous - **aud**. The aud is the client ID. - **iat**. The time the token issues at. It is in Epoch time format - **exp**. The time the token expires. It is in Epoch time format - **sub**. The UserID. The sub is omitted if the token is generated from client credential ## Bans The JWT contains user&#39;s active bans with its expiry date. List of ban types can be obtained from /bans. ## Track Login History This endpoint will track login history to detect suspicious login activity, please provide &#34;device_id&#34; (alphanumeric) in request header parameter otherwise we will set to &#34;unknown&#34;. Align with General Data Protection Regulation in Europe, user login history will be kept within 28 days by default&#34;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth.OauthToken, input]
 * }
 * ```
 */
declare const useOAuthApi_PostOauthTokenMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<TokenResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        grant_type: "authorization_code" | "client_credentials" | "password" | "refresh_token";
        code?: string | null;
        extend_exp?: boolean | null;
        namespace?: string | null;
        password?: string | null;
        redirect_uri?: string | null;
        refresh_token?: string | null;
        username?: string | null;
    };
}>, "mutationKey">, callback?: (data: TokenResponse) => void) => UseMutationResult<TokenResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        grant_type: "authorization_code" | "client_credentials" | "password" | "refresh_token";
        code?: string | null;
        extend_exp?: boolean | null;
        namespace?: string | null;
        password?: string | null;
        redirect_uri?: string | null;
        refresh_token?: string | null;
        username?: string | null;
    };
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated This endpoint requires all requests to have Authorization header set with Basic access authentication constructed from client id and client secret. ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/oauth/verify [POST]_** - **Note: difference in V3 response:** 1. format difference（Pascal case =&gt; Camel case): permissions field from Action =&gt; action, Resource =&gt; resource
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth.OauthVerify, input]
 * }
 * ```
 */
declare const useOAuthApi_PostOauthVerifyMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<TokenResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        token: string | null;
    };
}>, "mutationKey">, callback?: (data: TokenResponse) => void) => UseMutationResult<TokenResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        token: string | null;
    };
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated The endpoint supports two response types: ### 1. Response Type == &#34;code&#34;: The endpoint returns an authorization code that will be used by the IAM client to exchange for an access token. It supports two different headers, the basic and the bearer header. Each behaves differently. - **The basic header** The basic header’s value is the base64 of the client ID and client secret. It is used by the developer whenever the developer authorizes a user on a same namespace. - **The bearer header** The bearer header’s value is an access token. It is used by the developer whenever the developer authorizes a user on a different namespace. The endpoint validates user’s entitlement on the designated namespace for making sure the user is authorized for a designated namespace. Following are the responses returned by the endpoint: - **Authorize success**: redirects to the given URL with the following information: ?code={authorization code}&amp;state={state} - **Authorize failure**: redirects to the given URL with the following information:?error=access_denied&amp;error_description=... ### 2. Response Type == &#34;token&#34; (Implicit) is deprecated. ### Endpoint migration guide - **Substitute endpoint (for: basic header style)**: _/iam/v3/oauth/authorize [GET]_ - **Substitute endpoint (for: bearer header style)**: step1: /iam/v3/namespace/{namespace}/token/request [POST] =&gt; get code step2: /iam/v3/token/exchange [POST] =&gt; get token by step1&#39;s code - **Note:** 1. V3 is standard OAuth2 flow and support PKCE 2. Will not support implicit flow in v3.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth.OauthAuthorize, input]
 * }
 * ```
 */
declare const useOAuthApi_PostOauthAuthorizeMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        client_id: string | null;
        redirect_uri: string | null;
        response_type: "code" | "token";
        login?: string | null;
        password?: string | null;
        scope?: string | null;
        state?: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        client_id: string | null;
        redirect_uri: string | null;
        response_type: "code" | "token";
        login?: string | null;
        password?: string | null;
        scope?: string | null;
        state?: string | null;
    };
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated This endpoint revokes a user. This endpoint requires all requests to have Authorization header set with Bearer access authentication with valid access token. When other clients know that the userID has been revoked and the token is issued before the revocation, forcing a new token will contain banned permissions. ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/oauth/admin/namespaces/{namespace}/users/{userId}/revoke [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth.OauthRevokeUser, input]
 * }
 * ```
 */
declare const useOAuthApi_PostOauthRevokeUserMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        userID: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        userID: string | null;
    };
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated Revokes a token. This endpoint requires all requests to have Authorization header set with Basic access authentication constructed from client id and client secret or Bearer access authentication with valid access token. ### Endpoint migration guide - **Substitute endpoint: _/v3/oauth/revoke [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth.OauthRevokeToken, input]
 * }
 * ```
 */
declare const useOAuthApi_PostOauthRevokeTokenMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        token: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        token: string | null;
    };
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated This endpoint will return a list of revoked users and revoked tokens. List of revoked tokens in bloom filter format. This endpoint requires all requests to have Authorization header set with Basic access authentication constructed from client id and client secret. The bloom filter uses MurmurHash3 algorithm for hashing the values ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/oauth/revocationlist [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth.OauthRevocationlist, input]
 * }
 * ```
 */
declare const useOAuthApi_GetOauthRevocationlist: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<RevocationList, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RevocationList>) => void) => UseQueryResult<RevocationList, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated This endpoint requires all requests to have authorization header set with bearer token. The endpoint revokes all access tokens and refresh tokens a user has prior the revocation time. It is a convenient feature for the developer (or admin) who wanted to revokes all user&#39;s access tokens and refresh tokens generated before some period of time. ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/oauth/admin/namespaces/{namespace}/users/{userId}/revoke [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth.RevokeOauth_ByUserId, input]
 * }
 * ```
 */
declare const useOAuthApi_UpdateRevokeOauth_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated This endpoint requires all requests to have Authorization header set with Basic access authentication constructed from client id and client secret. For publisher-game namespace schema : Specify only either platform_token or device_id. Device token grant should be requested along with device_id parameter against game namespace. Another 3rd party platform token grant should be requested along with platform_token parameter against publisher namespace. Supported platforms: - **steamopenid**: Steam&#39;s user authentication method using OpenID 2.0. The expected value of the platform token is the URL generated by Steam on web authentication The JWT contains user&#39;s active bans with its expiry date. List of ban types can be obtained from /iam/bans.. ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/oauth/platforms/{platformId}/token [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth.TokenOauth_ByPlatformId, input]
 * }
 * ```
 */
declare const useOAuthApi_PostTokenOauth_ByPlatformIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<TokenResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: {
        device_id?: string | null;
        macAddress?: string | null;
        platform_token?: string | null;
    };
}>, "mutationKey">, callback?: (data: TokenResponse) => void) => UseMutationResult<TokenResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: {
        device_id?: string | null;
        macAddress?: string | null;
        platform_token?: string | null;
    };
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_OAuth20 {
    OauthJwks_v3 = "Iam.OAuth20.OauthJwks_v3",
    OauthToken_v3 = "Iam.OAuth20.OauthToken_v3",
    OauthRevoke_v3 = "Iam.OAuth20.OauthRevoke_v3",
    OauthVerify_v3 = "Iam.OAuth20.OauthVerify_v3",
    OauthMfaCode_v3 = "Iam.OAuth20.OauthMfaCode_v3",
    OauthAuthorize_v3 = "Iam.OAuth20.OauthAuthorize_v3",
    OauthIntrospect_v3 = "Iam.OAuth20.OauthIntrospect_v3",
    OauthMfaVerify_v3 = "Iam.OAuth20.OauthMfaVerify_v3",
    OauthRevocationlist_v3 = "Iam.OAuth20.OauthRevocationlist_v3",
    OauthMfaFactorChange_v3 = "Iam.OAuth20.OauthMfaFactorChange_v3",
    OauthSimultaneousLogin_v3 = "Iam.OAuth20.OauthSimultaneousLogin_v3",
    TokenOauth_ByPlatformId_v3 = "Iam.OAuth20.TokenOauth_ByPlatformId_v3",
    AuthorizeOauth_ByPlatformId_v3 = "Iam.OAuth20.AuthorizeOauth_ByPlatformId_v3",
    PlatformTokenOauth_ByUserId_ByPlatformId_v3 = "Iam.OAuth20.PlatformTokenOauth_ByUserId_ByPlatformId_v3"
}
/**
 * This endpoint serves public keys for verifying JWT access tokens generated by this service. When a client application wants to verify a JWT token, it needs to get the &#39;kid&#39; value found in the JWT token header and use it to look up the corresponding public key from a set returned by this endpoint. The client application can then use that public key to verify the JWT. A client application might cache the keys so it doesn&#39;t need to do request every time it needs to verify a JWT token. If a client application caches the keys and a key with the same &#39;kid&#39; cannot be found in the cache, it should then try to refresh the keys by making a request to this endpoint again. Please refer to the RFC for more information about JWK (JSON Web Key): https://tools.ietf.org/html/rfc7517 action code : 10709
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20.OauthJwks_v3, input]
 * }
 * ```
 */
declare const useOAuth20Api_GetOauthJwks_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<JwkSet, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<JwkSet>) => void) => UseQueryResult<JwkSet, AxiosError<ApiError>>;
/**
 * This endpoint supports grant type: 1. Grant Type == &lt;code&gt;authorization_code&lt;/code&gt;: It generates the user token by given the authorization code which generated in &#34;/iam/v3/authenticate&#34; API response. It should also pass in the redirect_uri, which should be the same as generating the authorization code request. 2. Grant Type == &lt;code&gt;password&lt;/code&gt;: The grant type to use for authenticating a user, whether it&#39;s by email / username and password combination or through platform. 3. Grant Type == &lt;code&gt;refresh_token&lt;/code&gt;: Used to get a new access token for a valid refresh token. 4. Grant Type == &lt;code&gt;client_credentials&lt;/code&gt;: It generates a token by checking the client credentials provided through Authorization header. 5. Grant Type == &lt;code&gt;urn:ietf:params:oauth:grant-type:extend_client_credentials&lt;/code&gt;: It generates a token by checking the client credentials provided through Authorization header. It only allows publisher/studio namespace client. In generated token: 1. There wil be no roles, namespace_roles &amp; permission. 2. The scope will be fixed as &#39;extend&#39;. 3. There will have a new field &#39;extend_namespace&#39;, the value is from token request body. ## Access Token Content Following is the access token’s content: - **namespace**. It is the namespace the token was generated from. - **display_name**. The display name of the sub. It is empty if the token is generated from the client credential - **roles**. The sub’s roles. It is empty if the token is generated from the client credential - **namespace_roles**. The sub’s roles scoped to namespace. Improvement from roles, which make the role scoped to specific namespace instead of global to publisher namespace - **permissions**. The sub or aud’ permissions - **bans**. The sub’s list of bans. It is used by the IAM client for validating the token. - **jflgs**. It stands for Justice Flags. It is a special flag used for storing additional status information regarding the sub. It is implemented as a bit mask. Following explains what each bit represents: - 1: Email Address Verified - 2: Phone Number Verified - 4: Anonymous - 8: Suspicious Login - **aud**. The aud is the targeted resource server. - **iat**. The time the token issues at. It is in Epoch time format - **exp**. The time the token expires. It is in Epoch time format - **client_id**. The UserID. The sub is omitted if the token is generated from client credential - **scope**. The scope of the access request, expressed as a list of space-delimited, case-sensitive strings ## Bans The JWT contains user&#39;s active bans with its expiry date. List of ban types can be obtained from /bans. ## Device Cookie Validation _**For grant type &#34;password&#34; only**_ Device Cookie is used to protect the user account from brute force login attack, &lt;a target=&#34;_blank&#34; href=&#34;https://owasp.org/www-community/Slow_Down_Online_Guessing_Attacks_with_Device_Cookies&#34;&gt;more detail from OWASP&lt;a&gt;. This endpoint will read device cookie from request header **Auth-Trust-Id**. If device cookie not found, it will generate a new one and set it into response body **auth_trust_id** when successfully login. ## Track Login History This endpoint will track login history to detect suspicious login activity, please provide **Device-Id** (alphanumeric) in request header parameter otherwise it will set to &#34;unknown&#34;. Align with General Data Protection Regulation in Europe, user login history will be kept within 28 days by default&#34; ## 2FA remember device To remember device for 2FA, should provide cookie: device_token or header: Device-Token ## Response note If it is a user token request and user hasn&#39;t accepted required legal policy, the field &lt;code&gt;is_comply&lt;/code&gt; will be false in response and responsed token will have no permission. action code: 10703
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20.OauthToken_v3, input]
 * }
 * ```
 */
declare const useOAuth20Api_PostOauthTokenMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<TokenWithDeviceCookieResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        grant_type: "authorization_code" | "client_credentials" | "password" | "refresh_token" | "urn:ietf:params:oauth:grant-type:extend_client_credentials";
        additionalData?: string | null;
        client_id?: string | null;
        client_secret?: string | null;
        code?: string | null;
        code_verifier?: string | null;
        extendNamespace?: string | null;
        extend_exp?: boolean | null;
        password?: string | null;
        redirect_uri?: string | null;
        refresh_token?: string | null;
        username?: string | null;
    };
}>, "mutationKey">, callback?: (data: TokenWithDeviceCookieResponseV3) => void) => UseMutationResult<TokenWithDeviceCookieResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        grant_type: "authorization_code" | "client_credentials" | "password" | "refresh_token" | "urn:ietf:params:oauth:grant-type:extend_client_credentials";
        additionalData?: string | null;
        client_id?: string | null;
        client_secret?: string | null;
        code?: string | null;
        code_verifier?: string | null;
        extendNamespace?: string | null;
        extend_exp?: boolean | null;
        password?: string | null;
        redirect_uri?: string | null;
        refresh_token?: string | null;
        username?: string | null;
    };
}>;
/**
 * This endpoint revokes a token. This endpoint requires authorized requests header with Basic Authentication from client that establish the token. action code: 10706
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20.OauthRevoke_v3, input]
 * }
 * ```
 */
declare const useOAuth20Api_PostOauthRevokeMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        token: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        token: string | null;
    };
}>;
/**
 * This endpoint requires all requests to have Authorization header set with Basic access authentication constructed from client id and client secret.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20.OauthVerify_v3, input]
 * }
 * ```
 */
declare const useOAuth20Api_PostOauthVerifyMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<TokenResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        token: string | null;
    };
}>, "mutationKey">, callback?: (data: TokenResponseV3) => void) => UseMutationResult<TokenResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        token: string | null;
    };
}>;
/**
 * Send 2FA code This endpoint is used for sending 2FA code.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20.OauthMfaCode_v3, input]
 * }
 * ```
 */
declare const useOAuth20Api_PostOauthMfaCodeMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        clientId: string | null;
        factor: string | null;
        mfaToken: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        clientId: string | null;
        factor: string | null;
        mfaToken: string | null;
    };
}>;
/**
 * Initializes OAuth2.0 authorization code flow The endpoint stores authorization request and redirects to login page with the authorization request id. The user can then do the authentication on the login page. The user will be redirected back to the requesting client with authorization code if successfully authenticated. Only authorization code flow supported by this endpoint, implicit flow is not supported. - **Authorize success**: redirects to login page with the following information: ?request_id={authorization_request_id} - **Authorize failure**: redirects to the given redirect uri with the following information: ?error={error_code}&amp;error_description={error description} For Public Client case, it&#39;s mandatory to fill **code_challenge** to avoid authorization code interception attack. Please refer to the RFC for more information about Proof Key for Code Exchange(PKCE): https://datatracker.ietf.org/doc/html/rfc7636 Following are the error code based on the specification: - invalid_request: The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. - server_error: The authorization server encountered an unexpected condition that prevented it from fulfilling the request. - unauthorized_client: The client is not authorized to request a token using this method. - access_denied: The resource owner or authorization server denied the request. - invalid_scope: The requested scope is invalid, unknown, or malformed. - unsupported_response_type: The authorization server does not support obtaining a token using this method. - temporarily_unavailable: The authorization server is currently unable to handle the request due to a temporary overloading or maintenance of the server. Please refer to the RFC for more information about authorization code flow: https://tools.ietf.org/html/rfc6749#section-4.1 action code: 10701
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20.OauthAuthorize_v3, input]
 * }
 * ```
 */
declare const useOAuth20Api_GetOauthAuthorize_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams: {
        client_id: string | null;
        response_type: "code";
        code_challenge?: string | null;
        code_challenge_method?: "S256" | "plain";
        createHeadless?: boolean | null;
        oneTimeLinkCode?: string | null;
        redirect_uri?: string | null;
        scope?: string | null;
        state?: string | null;
        target_auth_page?: string | null;
        useRedirectUriAsLoginUrlWhenLocked?: boolean | null;
    };
}, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * This endpoint returns information about an access token intended to be used by resource servers or other internal servers. This endpoint requires authorized requests header with valid basic or bearer token. action code : 10705
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20.OauthIntrospect_v3, input]
 * }
 * ```
 */
declare const useOAuth20Api_PostOauthIntrospectMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<TokenIntrospectResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        token: string | null;
    };
}>, "mutationKey">, callback?: (data: TokenIntrospectResponse) => void) => UseMutationResult<TokenIntrospectResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        token: string | null;
    };
}>;
/**
 * Verify 2FA code This endpoint is used for verifying 2FA code. ## 2FA remember device To remember device for 2FA, should provide cookie: device_token or header: Device-Token
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20.OauthMfaVerify_v3, input]
 * }
 * ```
 */
declare const useOAuth20Api_PostOauthMfaVerifyMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<TokenResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code: string | null;
        factor: string | null;
        mfaToken: string | null;
        rememberDevice: boolean | null;
    };
}>, "mutationKey">, callback?: (data: TokenResponseV3) => void) => UseMutationResult<TokenResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code: string | null;
        factor: string | null;
        mfaToken: string | null;
        rememberDevice: boolean | null;
    };
}>;
/**
 * This endpoint will return a list of revoked users and revoked tokens. List of revoked tokens in bloom filter format. This endpoint requires all requests to have Authorization header set with Basic access authentication constructed from client id and client secret. The bloom filter uses MurmurHash3 algorithm for hashing the values action code : 10708
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20.OauthRevocationlist_v3, input]
 * }
 * ```
 */
declare const useOAuth20Api_GetOauthRevocationlist_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<RevocationList, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RevocationList>) => void) => UseQueryResult<RevocationList, AxiosError<ApiError>>;
/**
 * Change 2FA method This endpoint is used for change 2FA method. Only enabled methods are accepted. Supported methods: - authenticator - backupCode - email
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20.OauthMfaFactorChange_v3, input]
 * }
 * ```
 */
declare const useOAuth20Api_PostOauthMfaFactorChangeMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        factor: string | null;
        mfaToken: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        factor: string | null;
        mfaToken: string | null;
    };
}>;
/**
 * # This endpoint is in ALPHA, avoid using this endpoint fow now, reach out to AB support for inquiries Simultaneous login flow. The primary goals of this project are to entitle players to authenticate on a native PC platform(Steam/Epic) and the PlayStation platform, link their accounts, and provide support for platform sync with a valid 3rd platform access token. ## Given a valid native ticket and empty simultaneous ticket, these cases will be failed - Native ticket&#39;s account is not linked AGS account yet - Native ticket&#39;s account is linked AGS account, but AGS account is not linked simultaneous platform yet - Native ticket&#39;s account is linked AGS account, AGS account is linked simultaneous platform but there is no available simultaneous token.(only if this platform is expected to store the platform token) ## Given a valid native ticket and empty simultaneous ticket, this case will be success - Native ticket&#39;s account already linked AGS account, this AGS account already linked simultaneous platform. There is valid simultaneous token.(this is required only when this simultaneous is expected to cache platform token) ## Given a valid native ticket token and valid simultaneous ticket, these cases will be failed #### Native ticket&#39;s account is already linked with AGS account - Native linked AGS account is linked this simultaneous platform but is different with simultaneous ticket&#39;s account - Native linked AGS account is not linked with simultaneous but has a linking history with simultaneous platform and it is different with simultaneous ticket&#39;s account #### Native ticket&#39;s account is not linked with AGS account and Simultaneous ticket&#39;s account is already linked wth AGS account - Simultaneous linked AGS account is linked this native platform but is different with native ticket&#39;s account - Simultaneous linked AGS account is not linked with native but has a linking history with native platform and it is different with native ticket&#39;s account ## Given a valid native ticket and valid simultaneous ticket, these cases will be success - Native ticket&#39;s account &amp; Simultaneous ticket&#39;s account are both not linked to AGS account yet - Native ticket&#39;s account &amp; Simultaneous ticket&#39;s account are already linked to same AGS account
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20.OauthSimultaneousLogin_v3, input]
 * }
 * ```
 */
declare const useOAuth20Api_PostOauthSimultaneousLoginMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<TokenResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        nativePlatform: "epicgames" | "steam";
        nativePlatformTicket: string | null;
        simultaneousPlatform?: string | null;
        simultaneousTicket?: string | null;
    };
}>, "mutationKey">, callback?: (data: TokenResponseV3) => void) => UseMutationResult<TokenResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        nativePlatform: "epicgames" | "steam";
        nativePlatformTicket: string | null;
        simultaneousPlatform?: string | null;
        simultaneousTicket?: string | null;
    };
}>;
/**
 * Platform token grant specifically used for performing token grant using platform, e.g. Steam, Justice, etc. The endpoint automatically create an account if the account associated with the platform is not exists yet. This endpoint requires all requests to have Authorization header set with Basic access authentication constructed from client id and client secret. For publisher-game namespace schema : Specify only either platform_token or device_id. Device token grant should be requested along with device_id parameter against game namespace. Another 3rd party platform token grant should be requested along with platform_token parameter against publisher namespace. ## 2FA remember device To remember device for 2FA, should provide cookie: device_token or header: Device-Token ## Supported platforms: - **steam**: The platform_token’s value is the binary ticket returned by Steam. If this ticket was generated by Steam GetAuthTicketForWebApi with version &gt;= 1.57, then platform token should use this style: &lt;code&gt;{identity}:{ticket}&lt;/code&gt;, the &lt;code&gt;{identity}&lt;/code&gt; was the parameter to call GetAuthTicketForWebApi when the ticket was created. Note: Do not contain &lt;code&gt;:&lt;/code&gt; in this &lt;code&gt;{identity}&lt;/code&gt;. - **steamopenid**: Steam&#39;s user authentication method using OpenID 2.0. The platform_token&#39;s value is URL generated by Steam on web authentication - **facebook**: The platform_token’s value is the authorization code returned by Facebook OAuth - **google**: The platform_token’s value is the authorization code or idToken returned by Google OAuth - **googleplaygames**: The platform_token’s value is the authorization code or idToken returned by Google play games OAuth - **oculus**: The platform_token’s value is a string composed of Oculus&#39;s user ID and the nonce separated by a colon (:). - **twitch**: The platform_token’s value is the authorization code returned by Twitch OAuth. - **discord**: The platform_token’s value is the authorization code returned by Discord OAuth - **android**: The device_id is the Android’s device ID - **ios**: The device_id is the iOS’s device ID. - **apple**: The platform_token’s value is the authorization code or idToken returned by Apple OAuth.(We will use this code to generate APP token) - **device**: Every device that does’nt run Android and iOS is categorized as a device. The device_id is the device’s ID. - **justice**: The platform_token’s value is the designated user’s access token. - **epicgames**: The platform_token’s value is an access-token or authorization code obtained from Epicgames EOS Account Service. - **ps4**: The platform_token’s value is the authorization code returned by Sony OAuth. - **ps5**: The platform_token’s value is the authorization code returned by Sony OAuth. - **nintendo**: The platform_token’s value is the id_token returned by Nintendo OAuth. - **awscognito**: The platform_token’s value is the aws cognito access token or id token (JWT). - **live**: The platform_token’s value is xbox XSTS token - **xblweb**: The platform_token’s value is code returned by xbox after login - **netflix**: The platform_token’s value is GAT (Gamer Access Token) returned by Netflix backend - **snapchat**: The platform_token’s value is the authorization code returned by Snapchat OAuth. - **for specific generic oauth (OIDC)**: The platform_token’s value should be the same type as created OIDC auth type whether it is auth code, idToken or bearerToken. ## Account Group Several platforms are grouped under account groups. The accounts on these platforms have the same platform user id. Login using one of these platform will returns the same IAM user. Following is the current registered account grouping: - Steam group(steamnetwork): - steam - steamopenid - PSN group(psn) - ps4web - ps4 - ps5 - XBOX group(xbox) - live - xblweb - Oculus group(oculusgroup) - oculus - oculusweb ## Access Token Content Following is the access token’s content: - **namespace**. It is the namespace the token was generated from. - **display_name**. The display name of the sub. It is empty if the token is generated from the client credential - **roles**. The sub’s roles. It is empty if the token is generated from the client credential - **namespace_roles**. The sub’s roles scoped to namespace. Improvement from roles, which make the role scoped to specific namespace instead of global to publisher namespace - **permissions**. The sub or aud’ permissions - **bans**. The sub’s list of bans. It is used by the IAM client for validating the token. - **jflgs**. It stands for Justice Flags. It is a special flag used for storing additional status information regarding the sub. It is implemented as a bit mask. Following explains what each bit represents: - 1: Email Address Verified - 2: Phone Number Verified - 4: Anonymous - 8: Suspicious Login - **aud**. The aud is the client ID. - **iat**. The time the token issues at. It is in Epoch time format - **exp**. The time the token expires. It is in Epoch time format - **sub**. The UserID. The sub is omitted if the token is generated from client credential ## Bans The JWT contains user&#39;s active bans with its expiry date. List of ban types can be obtained from /bans. action code : 10704
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20.TokenOauth_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useOAuth20Api_PostTokenOauth_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<TokenResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: {
        additionalData?: string | null;
        client_id?: string | null;
        createHeadless?: boolean | null;
        device_id?: string | null;
        macAddress?: string | null;
        platform_token?: string | null;
        serviceLabel?: number;
        skipSetCookie?: boolean | null;
    };
}>, "mutationKey">, callback?: (data: TokenResponse) => void) => UseMutationResult<TokenResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: {
        additionalData?: string | null;
        client_id?: string | null;
        createHeadless?: boolean | null;
        device_id?: string | null;
        macAddress?: string | null;
        platform_token?: string | null;
        serviceLabel?: number;
        skipSetCookie?: boolean | null;
    };
}>;
/**
 * Generate url to request auth code from third party platform ## Supported platforms: - **steamopenid**This endpoint redirects to steam login page, then redirect back to platform authenticate endpoint after successfully authenticating user steam. - **xblweb**This endpoint redirects to xbox login page, then redirect back to platform authenticate endpoint after successfully authenticating xbox user. - **ps4web**This endpoint redirects to psn login page, then redirect back to platform authenticate endpoint after successfully authenticating psn user. - **epicgames**This endpoint redirects to Epicgames OAuth login page. then redirect to platform authenticate endpoint after successfully authenticating an Epicgames credential - **twitch**This endpoint redirects to twitch login page, then redirect back to platform authenticate endpoint after successfully authenticating twitch user. - **azure**This endpoint redirects to azure login page, then redirect back to platform authenticate(saml) endpoint after successfully authenticating azure user. - **facebook**This endpoint redirects to facebook login page, then redirect back to platform authenticate endpoint after successfully authenticating facebook user. - **google**This endpoint redirects to google login page, then redirect back to platform authenticate endpoint after successfully authenticating google user. - **snapchat**This endpoint redirects to snapchat login page, then redirect back to platform authenticate endpoint after successfully authenticating snapchat user. - **discord**This endpoint redirects to discord login page, then redirect back to platform authenticate endpoint after successfully authenticating discord user. - **amazon**This endpoint redirects to amazon login page, then redirect back to platform authenticate endpoint after successfully authenticating amazon user. - **oculusweb**This endpoint redirects to oculus login page, then redirect back to Login Website page after successfully authenticating oculus user. action code : 10702&#39;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20.AuthorizeOauth_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useOAuth20Api_GetAuthorizeOauth_ByPlatformId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    platformId: string;
    queryParams: {
        request_id: string | null;
        client_id?: string | null;
        redirect_uri?: string | null;
    };
}, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * Retrieve User Third Party Platform Token This endpoint used for retrieving third party platform token for user that login using third party, if user have not link requested platform in game namespace, will try to retrieving third party platform token from publisher namespace. Passing platform group name or it&#39;s member will return same access token that can be used across the platform members. The third party platform and platform group covered for this is: - (psn) ps4web - (psn) ps4 - (psn) ps5 - epicgames - twitch - awscognito - &lt;amazon/li&gt; - eaorigin - snapchat - twitch - live **Authentication:** The _**userId**_ parameter should match the one in the access token.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20.PlatformTokenOauth_ByUserId_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useOAuth20Api_GetPlatformTokenOauth_ByUserId_ByPlatformId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
    platformId: string;
}, options?: Omit<UseQueryOptions<TokenThirdPartyResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<TokenThirdPartyResponse>) => void) => UseQueryResult<TokenThirdPartyResponse, AxiosError<ApiError>>;

/**
 * AUTO GENERATED
 */

declare enum Key_OAuth20Extension {
    Logout_v3 = "Iam.OAuth20Extension.Logout_v3",
    Authenticate_v3 = "Iam.OAuth20Extension.Authenticate_v3",
    HeadlesToken_v3 = "Iam.OAuth20Extension.HeadlesToken_v3",
    TokenExchange_v3 = "Iam.OAuth20Extension.TokenExchange_v3",
    LocationCountry_v3 = "Iam.OAuth20Extension.LocationCountry_v3",
    LinkCodeRequest_v3 = "Iam.OAuth20Extension.LinkCodeRequest_v3",
    LinkCodeValidate_v3 = "Iam.OAuth20Extension.LinkCodeValidate_v3",
    LinkTokenExchange_v3 = "Iam.OAuth20Extension.LinkTokenExchange_v3",
    AuthenticateWithLink_v3 = "Iam.OAuth20Extension.AuthenticateWithLink_v3",
    TokenRequest_v3 = "Iam.OAuth20Extension.TokenRequest_v3",
    Authenticate_ByPlatformId_v3 = "Iam.OAuth20Extension.Authenticate_ByPlatformId_v3",
    TokenVerify_ByPlatformId_v3 = "Iam.OAuth20Extension.TokenVerify_ByPlatformId_v3"
}
/**
 * This endpoint is used to remove **access_token**, **refresh_token** from cookie.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20Extension.Logout_v3, input]
 * }
 * ```
 */
declare const useOAuth20ExtensionApi_CreateLogoutMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam>;
/**
 * This endpoint is being used to authenticate a user account. It validates user&#39;s email / username and password. Deactivated or login-banned users are unable to login. Redirect URI and Client ID must be specified as a pair and only used to redirect to the specified redirect URI in case the requestId is no longer valid. ## Device Cookie Validation Device Cookie is used to protect the user account from brute force login attack, [more detail from OWASP](https://owasp.org/www-community/Slow_Down_Online_Guessing_Attacks_with_Device_Cookies). This endpoint will read device cookie from cookie **auth-trust-id**. If device cookie not found, it will generate a new one and set it into cookie when successfully authenticate. Action code: 10801
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20Extension.Authenticate_v3, input]
 * }
 * ```
 */
declare const useOAuth20ExtensionApi_PostAuthenticateMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        password: string | null;
        request_id: string | null;
        user_name: string | null;
        client_id?: string | null;
        extend_exp?: boolean | null;
        redirect_uri?: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        password: string | null;
        request_id: string | null;
        user_name: string | null;
        client_id?: string | null;
        extend_exp?: boolean | null;
        redirect_uri?: string | null;
    };
}>;
/**
 * This endpoint is being used to create headless account after 3rd platform authenticated, and response token . The &#39;linkingToken&#39; in request body is received from &#34;/platforms/{platformId}/token&#34; when 3rd platform account is not linked to justice account yet.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20Extension.HeadlesToken_v3, input]
 * }
 * ```
 */
declare const useOAuth20ExtensionApi_PostHeadlesTokenMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<TokenResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        linkingToken: string | null;
        additionalData?: string | null;
        extend_exp?: boolean | null;
    };
}>, "mutationKey">, callback?: (data: TokenResponseV3) => void) => UseMutationResult<TokenResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        linkingToken: string | null;
        additionalData?: string | null;
        extend_exp?: boolean | null;
    };
}>;
/**
 * This endpoint is being used to generate target token. It requires basic header with ClientID and Secret, it should match the ClientID when call &lt;code&gt;/iam/v3/namespace/{namespace}/token/request&lt;/code&gt; The code should be generated from &lt;code&gt;/iam/v3/namespace/{namespace}/token/request&lt;/code&gt;.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20Extension.TokenExchange_v3, input]
 * }
 * ```
 */
declare const useOAuth20ExtensionApi_PostTokenExchangeMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<TokenResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code: string | null;
        additionalData?: string | null;
    };
}>, "mutationKey">, callback?: (data: TokenResponseV3) => void) => UseMutationResult<TokenResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code: string | null;
        additionalData?: string | null;
    };
}>;
/**
 * This endpoint get country location based on the request.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20Extension.LocationCountry_v3, input]
 * }
 * ```
 */
declare const useOAuth20ExtensionApi_GetLocationCountry_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<CountryLocationResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<CountryLocationResponse>) => void) => UseQueryResult<CountryLocationResponse, AxiosError<ApiError>>;
/**
 * This endpoint is being used to request the one time code [8 length] for headless account to link or upgrade to a full account. Should specify the target platform id and current user should already linked to this platform. Current user should be a headless account. ## Supported platforms: - **steam** - **steamopenid** - **facebook** - **google** - **googleplaygames** - **oculus** - **twitch** - **discord** - **android** - **ios** - **apple** - **device** - **justice** - **epicgames** - **ps4** - **ps5** - **nintendo** - **awscognito** - **live** - **xblweb** - **netflix** - **snapchat**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20Extension.LinkCodeRequest_v3, input]
 * }
 * ```
 */
declare const useOAuth20ExtensionApi_PostLinkCodeRequestMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<OneTimeLinkingCodeResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        platformId: string | null;
    };
}>, "mutationKey">, callback?: (data: OneTimeLinkingCodeResponse) => void) => UseMutationResult<OneTimeLinkingCodeResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        platformId: string | null;
    };
}>;
/**
 * This endpoint is being used to validate one time link code.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20Extension.LinkCodeValidate_v3, input]
 * }
 * ```
 */
declare const useOAuth20ExtensionApi_PostLinkCodeValidateMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<OneTimeLinkingCodeValidationResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        oneTimeLinkCode: string | null;
    };
}>, "mutationKey">, callback?: (data: OneTimeLinkingCodeValidationResponse) => void) => UseMutationResult<OneTimeLinkingCodeValidationResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        oneTimeLinkCode: string | null;
    };
}>;
/**
 * This endpoint is being used to generate user&#39;s token by one time link code. It require publisher ClientID It required a code which can be generated from &lt;code&gt;/iam/v3/link/code/request&lt;/code&gt;. This endpoint support creating transient token by utilizing **isTransient** param: **isTransient=true** will generate a transient token with a short Time Expiration and without a refresh token **isTransient=false** will consume the one-time code and generate the access token with a refresh token.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20Extension.LinkTokenExchange_v3, input]
 * }
 * ```
 */
declare const useOAuth20ExtensionApi_PostLinkTokenExchangeMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<TokenResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        client_id: string | null;
        oneTimeLinkCode: string | null;
        additionalData?: string | null;
        isTransient?: boolean | null;
    };
}>, "mutationKey">, callback?: (data: TokenResponseV3) => void) => UseMutationResult<TokenResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        client_id: string | null;
        oneTimeLinkCode: string | null;
        additionalData?: string | null;
        isTransient?: boolean | null;
    };
}>;
/**
 * This endpoint is being used to authenticate a user account and perform platform link. It validates user&#39;s email / username and password. If user already enable 2FA, then invoke _/mfa/verify_ using **mfa_token** from this endpoint response. ## Device Cookie Validation Device Cookie is used to protect the user account from brute force login attack, [more detail from OWASP](https://owasp.org/www-community/Slow_Down_Online_Guessing_Attacks_with_Device_Cookies). This endpoint will read device cookie from cookie **auth-trust-id**. If device cookie not found, it will generate a new one and set it into cookie when successfully authenticate.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20Extension.AuthenticateWithLink_v3, input]
 * }
 * ```
 */
declare const useOAuth20ExtensionApi_PostAuthenticateWithLinkMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<TokenResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        client_id: string | null;
        linkingToken: string | null;
        password: string | null;
        username: string | null;
        extend_exp?: boolean | null;
    };
}>, "mutationKey">, callback?: (data: TokenResponseV3) => void) => UseMutationResult<TokenResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        client_id: string | null;
        linkingToken: string | null;
        password: string | null;
        username: string | null;
        extend_exp?: boolean | null;
    };
}>;
/**
 * This endpoint is being used to request the code to exchange a new token. The target new token&#39;s clientId should NOT be same with current using one. Path namespace should be target namespace. Client ID should match the target namespace. The code in response can be consumed by &lt;code&gt;/iam/v3/token/exchange&lt;/code&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20Extension.TokenRequest_v3, input]
 * }
 * ```
 */
declare const useOAuth20ExtensionApi_PostTokenRequestMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<TargetTokenCodeResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        client_id: string | null;
    };
    queryParams?: {
        code_challenge?: string | null;
        code_challenge_method?: "S256" | "plain";
    };
}>, "mutationKey">, callback?: (data: TargetTokenCodeResponse) => void) => UseMutationResult<TargetTokenCodeResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        client_id: string | null;
    };
    queryParams?: {
        code_challenge?: string | null;
        code_challenge_method?: "S256" | "plain";
    };
}>;
/**
 * This endpoint authenticates user platform. It validates user to its respective platforms. Deactivated or login-banned users are unable to login. If already linked with justice account or match SSO condition, will redirect to client&#39;s redirect url with code. then invoke &#39;/iam/v3/oauth/token&#39; with grant_type=authorization_code If already not linked with justice account and not match SSO condition, will redirect to client&#39;s account linking page ## Supported platforms: - **steamopenid**Steam login page will redirects to this endpoint after login success as previously defined on openID request parameter &lt;code&gt;openid.return_to&lt;/code&gt; when request login to steam https://openid.net/specs/openid-authentication-2_0.html#anchor27 - **ps4web**PS4 login page will redirects to this endpoint after login success as previously defined on authorize request parameter &lt;code&gt;redirect_uri&lt;/code&gt; https://ps4.siedev.net/resources/documents/WebAPI/1/Auth_WebAPI-Reference/0002.html#0GetAccessTokenUsingAuthorizationCode - **xblweb**XBL login page will redirects to this endpoint after login success as previously defined on authorize request parameter &lt;code&gt;redirect_uri&lt;/code&gt; - **epicgames**Epicgames login page will redirects to this endpoint after login success or an error occurred. If error, it redirects to the login page. - **twitch**Twitch login page will redirects to this endpoint after login success as previously defined on authorize request parameter &lt;code&gt;redirect_uri&lt;/code&gt; - **facebook**Facebook login page will redirects to this endpoint after login success as previously defined on authorize request parameter &lt;code&gt;redirect_uri&lt;/code&gt; - **google**Google login page will redirects to this endpoint after login success as previously defined on authorize request parameter &lt;code&gt;redirect_uri&lt;/code&gt; - **snapchat**Snapchat login page will redirects to this endpoint after login success as previously defined on authorize request parameter &lt;code&gt;redirect_uri&lt;/code&gt; - **discord**Discord login page will redirects to this endpoint after login success as previously defined on authorize request parameter &lt;code&gt;redirect_uri&lt;/code&gt; action code : 10709
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20Extension.Authenticate_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useOAuth20ExtensionApi_GetAuthenticate_ByPlatformId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    platformId: string;
    queryParams: {
        state: string | null;
        code?: string | null;
        error?: string | null;
        assoc_handle?: string | null;
        claimed_id?: string | null;
        identity?: string | null;
        mode?: string | null;
        ns?: string | null;
        op_endpoint?: string | null;
        response_nonce?: string | null;
        return_to?: string | null;
        sig?: string | null;
        signed?: string | null;
    };
}, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * This endpoint will validate the third party platform token, for some platforms will also refresh the token stored in IAM, it will not generate any event or AB access/refresh token. This endpoint can be used by game client to refresh third party token if game client got platform token not found error, for example got 404 platform token not found from IAP/DLC. ## Platforms will refresh stored token: - **twitch**: The platform_token’s value is the authorization code returned by Twitch OAuth. - **epicgames**: The platform_token’s value is an access-token or authorization code obtained from Epicgames EOS Account Service. - **ps4**: The platform_token’s value is the authorization code returned by Sony OAuth. - **ps5**: The platform_token’s value is the authorization code returned by Sony OAuth. - **amazon**: The platform_token’s value is authorization code. - **awscognito**: The platform_token’s value is the aws cognito access token or id token (JWT). - **live**: The platform_token’s value is xbox XSTS token - **snapchat**: The platform_token’s value is the authorization code returned by Snapchat OAuth. - **for specific generic oauth (OIDC)**: The platform_token’s value should be the same type as created OIDC auth type whether it is auth code, idToken or bearerToken.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20Extension.TokenVerify_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useOAuth20ExtensionApi_PostTokenVerify_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<PlatformTokenRefreshResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: {
        platform_token: string | null;
    };
}>, "mutationKey">, callback?: (data: PlatformTokenRefreshResponseV3) => void) => UseMutationResult<PlatformTokenRefreshResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: {
        platform_token: string | null;
    };
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_OAuth20V4 {
    OauthToken_v4 = "Iam.OAuth20V4.OauthToken_v4",
    OauthMfaVerify_v4 = "Iam.OAuth20V4.OauthMfaVerify_v4",
    OauthHeadlesToken_v4 = "Iam.OAuth20V4.OauthHeadlesToken_v4",
    OauthTokenExchange_v4 = "Iam.OAuth20V4.OauthTokenExchange_v4",
    OauthSimultaneousLogin_v4 = "Iam.OAuth20V4.OauthSimultaneousLogin_v4",
    OauthAuthenticateWithLink_v4 = "Iam.OAuth20V4.OauthAuthenticateWithLink_v4",
    TokenOauth_ByPlatformId_v4 = "Iam.OAuth20V4.TokenOauth_ByPlatformId_v4"
}
/**
 * This endpoint supports grant type: 1. Grant Type == &lt;code&gt;authorization_code&lt;/code&gt;: It generates the user token by given the authorization code which generated in &#34;/iam/v3/authenticate&#34; API response. It should also pass in the redirect_uri, which should be the same as generating the authorization code request. 2. Grant Type == &lt;code&gt;password&lt;/code&gt;: The grant type to use for authenticating a user, whether it&#39;s by email / username and password combination or through platform. 3. Grant Type == &lt;code&gt;refresh_token&lt;/code&gt;: Used to get a new access token for a valid refresh token. 4. Grant Type == &lt;code&gt;client_credentials&lt;/code&gt;: It generates a token by checking the client credentials provided through Authorization header. 5. Grant Type == &lt;code&gt;urn:ietf:params:oauth:grant-type:extend_client_credentials&lt;/code&gt;: It generates a token by checking the client credentials provided through Authorization header. It only allows publisher/studio namespace client. In generated token: 1. There wil be no roles, namespace_roles &amp; permission. 2. The scope will be fixed as &#39;extend&#39;. 3. There will have a new field &#39;extend_namespace&#39;, the value is from token request body. 6. Grant Type == &lt;code&gt;urn:ietf:params:oauth:grant-type:login_queue_ticket&lt;/code&gt;: It generates a token by validating the login queue ticket against login queue service. ## Access Token Content Following is the access token’s content: - **namespace**. It is the namespace the token was generated from. - **display_name**. The display name of the sub. It is empty if the token is generated from the client credential - **roles**. The sub’s roles. It is empty if the token is generated from the client credential - **namespace_roles**. The sub’s roles scoped to namespace. Improvement from roles, which make the role scoped to specific namespace instead of global to publisher namespace - **permissions**. The sub or aud’ permissions - **bans**. The sub’s list of bans. It is used by the IAM client for validating the token. - **jflgs**. It stands for Justice Flags. It is a special flag used for storing additional status information regarding the sub. It is implemented as a bit mask. Following explains what each bit represents: - 1: Email Address Verified - 2: Phone Number Verified - 4: Anonymous - 8: Suspicious Login - **aud**. The aud is the targeted resource server. - **iat**. The time the token issues at. It is in Epoch time format - **exp**. The time the token expires. It is in Epoch time format - **client_id**. The UserID. The sub is omitted if the token is generated from client credential - **scope**. The scope of the access request, expressed as a list of space-delimited, case-sensitive strings ## Bans The JWT contains user&#39;s active bans with its expiry date. List of ban types can be obtained from /bans. ## Device Cookie Validation _**For grant type &#34;password&#34; only**_ Device Cookie is used to protect the user account from brute force login attack, &lt;a target=&#34;_blank&#34; href=&#34;https://owasp.org/www-community/Slow_Down_Online_Guessing_Attacks_with_Device_Cookies&#34;&gt;more detail from OWASP&lt;a&gt;. This endpoint will read device cookie from request header **Auth-Trust-Id**. If device cookie not found, it will generate a new one and set it into response body **auth_trust_id** when successfully login. ## Track Login History This endpoint will track login history to detect suspicious login activity, please provide **Device-Id** (alphanumeric) in request header parameter otherwise it will set to &#34;unknown&#34;. Align with General Data Protection Regulation in Europe, user login history will be kept within 28 days by default&#34; ## 2FA remember device To remember device for 2FA, should provide cookie: device_token or header: Device-Token ## Response note If it is a user token request and user hasn&#39;t accepted required legal policy, the field &lt;code&gt;is_comply&lt;/code&gt; will be false in response and responsed token will have no permission. action code: 10703
 *
 * #### Response type:
 * - `TokenWithDeviceCookieResponseV3`
 * - `LoginQueueTicketResponse`
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20V4.OauthToken_v4, input]
 * }
 * ```
 */
declare const useOAuth20V4Api_PostOauthTokenMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        grant_type: "authorization_code" | "client_credentials" | "password" | "refresh_token" | "urn:ietf:params:oauth:grant-type:extend_client_credentials" | "urn:ietf:params:oauth:grant-type:login_queue_ticket";
        additionalData?: string | null;
        client_id?: string | null;
        client_secret?: string | null;
        code?: string | null;
        code_verifier?: string | null;
        extendNamespace?: string | null;
        extend_exp?: boolean | null;
        login_queue_ticket?: string | null;
        password?: string | null;
        redirect_uri?: string | null;
        refresh_token?: string | null;
        username?: string | null;
    };
    queryParams?: {
        code_challenge?: string | null;
        code_challenge_method?: "S256" | "plain";
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        grant_type: "authorization_code" | "client_credentials" | "password" | "refresh_token" | "urn:ietf:params:oauth:grant-type:extend_client_credentials" | "urn:ietf:params:oauth:grant-type:login_queue_ticket";
        additionalData?: string | null;
        client_id?: string | null;
        client_secret?: string | null;
        code?: string | null;
        code_verifier?: string | null;
        extendNamespace?: string | null;
        extend_exp?: boolean | null;
        login_queue_ticket?: string | null;
        password?: string | null;
        redirect_uri?: string | null;
        refresh_token?: string | null;
        username?: string | null;
    };
    queryParams?: {
        code_challenge?: string | null;
        code_challenge_method?: "S256" | "plain";
    };
}>;
/**
 * Verify 2FA code This endpoint is used for verifying 2FA code. ## 2FA remember device To remember device for 2FA, should provide cookie: device_token or header: Device-Token
 *
 * #### Response type:
 * - `TokenResponseV3`
 * - `LoginQueueTicketResponse`
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20V4.OauthMfaVerify_v4, input]
 * }
 * ```
 */
declare const useOAuth20V4Api_PostOauthMfaVerifyMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code: string | null;
        factor: string | null;
        mfaToken: string | null;
        rememberDevice: boolean | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code: string | null;
        factor: string | null;
        mfaToken: string | null;
        rememberDevice: boolean | null;
    };
}>;
/**
 * This endpoint is being used to create headless account after 3rd platform authenticated, and response token . The &#39;linkingToken&#39; in request body is received from &#34;/platforms/{platformId}/token&#34; when 3rd platform account is not linked to justice account yet.
 *
 * #### Response type:
 * - `TokenResponseV3`
 * - `LoginQueueTicketResponse`
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20V4.OauthHeadlesToken_v4, input]
 * }
 * ```
 */
declare const useOAuth20V4Api_PostOauthHeadlesTokenMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        linkingToken: string | null;
        additionalData?: string | null;
        extend_exp?: boolean | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        linkingToken: string | null;
        additionalData?: string | null;
        extend_exp?: boolean | null;
    };
}>;
/**
 * This endpoint is being used to generate target token. It requires basic header with ClientID and Secret, it should match the ClientID when call &lt;code&gt;/iam/v3/namespace/{namespace}/token/request&lt;/code&gt; The code should be generated from &lt;code&gt;/iam/v3/namespace/{namespace}/token/request&lt;/code&gt;.
 *
 * #### Response type:
 * - `TokenResponseV3`
 * - `LoginQueueTicketResponse`
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20V4.OauthTokenExchange_v4, input]
 * }
 * ```
 */
declare const useOAuth20V4Api_PostOauthTokenExchangeMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code: string | null;
        additionalData?: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code: string | null;
        additionalData?: string | null;
    };
}>;
/**
 * # This endpoint is in ALPHA, avoid using this endpoint fow now, reach out to AB support for inquiries Simultaneous login flow. The primary goals of this project are to entitle players to authenticate on a native PC platform(Steam/Epic) and the PlayStation platform, link their accounts, and provide support for platform sync with a valid 3rd platform access token. ## Given a valid native ticket and empty simultaneous ticket, these cases will be failed - Native ticket&#39;s account is not linked AGS account yet - Native ticket&#39;s account is linked AGS account, but AGS account is not linked simultaneous platform yet - Native ticket&#39;s account is linked AGS account, AGS account is linked simultaneous platform but there is no available simultaneous token.(only if this platform is expected to store the platform token) ## Given a valid native ticket and empty simultaneous ticket, this case will be success - Native ticket&#39;s account already linked AGS account, this AGS account already linked simultaneous platform. There is valid simultaneous token.(this is required only when this simultaneous is expected to cache platform token) ## Given a valid native ticket token and valid simultaneous ticket, these cases will be failed #### Native ticket&#39;s account is already linked with AGS account - Native linked AGS account is linked this simultaneous platform but is different with simultaneous ticket&#39;s account - Native linked AGS account is not linked with simultaneous but has a linking history with simultaneous platform and it is different with simultaneous ticket&#39;s account #### Native ticket&#39;s account is not linked with AGS account and Simultaneous ticket&#39;s account is already linked wth AGS account - Simultaneous linked AGS account is linked this native platform but is different with native ticket&#39;s account - Simultaneous linked AGS account is not linked with native but has a linking history with native platform and it is different with native ticket&#39;s account ## Given a valid native ticket and valid simultaneous ticket, these cases will be success - Native ticket&#39;s account &amp; Simultaneous ticket&#39;s account are both not linked to AGS account yet - Native ticket&#39;s account &amp; Simultaneous ticket&#39;s account are already linked to same AGS account
 *
 * #### Response type:
 * - `TokenResponseV3`
 * - `LoginQueueTicketResponse`
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20V4.OauthSimultaneousLogin_v4, input]
 * }
 * ```
 */
declare const useOAuth20V4Api_PostOauthSimultaneousLoginMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        nativePlatform: "epicgames" | "steam";
        nativePlatformTicket: string | null;
        simultaneousPlatform?: string | null;
        simultaneousTicket?: string | null;
    };
    queryParams?: {
        code_challenge?: string | null;
        code_challenge_method?: "S256" | "plain";
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        nativePlatform: "epicgames" | "steam";
        nativePlatformTicket: string | null;
        simultaneousPlatform?: string | null;
        simultaneousTicket?: string | null;
    };
    queryParams?: {
        code_challenge?: string | null;
        code_challenge_method?: "S256" | "plain";
    };
}>;
/**
 * This endpoint is being used to authenticate a user account and perform platform link. It validates user&#39;s email / username and password. If user already enable 2FA, then invoke _/mfa/verify_ using **mfa_token** from this endpoint response. ## Device Cookie Validation Device Cookie is used to protect the user account from brute force login attack, [more detail from OWASP](https://owasp.org/www-community/Slow_Down_Online_Guessing_Attacks_with_Device_Cookies). This endpoint will read device cookie from cookie **auth-trust-id**. If device cookie not found, it will generate a new one and set it into cookie when successfully authenticate.
 *
 * #### Response type:
 * - `TokenResponseV3`
 * - `LoginQueueTicketResponse`
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20V4.OauthAuthenticateWithLink_v4, input]
 * }
 * ```
 */
declare const useOAuth20V4Api_PostOauthAuthenticateWithLinkMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        client_id: string | null;
        linkingToken: string | null;
        password: string | null;
        username: string | null;
        extend_exp?: boolean | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        client_id: string | null;
        linkingToken: string | null;
        password: string | null;
        username: string | null;
        extend_exp?: boolean | null;
    };
}>;
/**
 * Platform token grant specifically used for performing token grant using platform, e.g. Steam, Justice, etc. The endpoint automatically create an account if the account associated with the platform is not exists yet. This endpoint requires all requests to have Authorization header set with Basic access authentication constructed from client id and client secret. For publisher-game namespace schema : Specify only either platform_token or device_id. Device token grant should be requested along with device_id parameter against game namespace. Another 3rd party platform token grant should be requested along with platform_token parameter against publisher namespace. ## 2FA remember device To remember device for 2FA, should provide cookie: device_token or header: Device-Token ## Supported platforms: - **steam**: The platform_token’s value is the binary ticket returned by Steam. If this ticket was generated by Steam GetAuthTicketForWebApi with version &gt;= 1.57, then platform token should use this style: &lt;code&gt;{identity}:{ticket}&lt;/code&gt;, the &lt;code&gt;{identity}&lt;/code&gt; was the parameter to call GetAuthTicketForWebApi when the ticket was created. Note: Do not contain &lt;code&gt;:&lt;/code&gt; in this &lt;code&gt;{identity}&lt;/code&gt;. - **steamopenid**: Steam&#39;s user authentication method using OpenID 2.0. The platform_token&#39;s value is URL generated by Steam on web authentication - **facebook**: The platform_token’s value is the authorization code returned by Facebook OAuth - **google**: The platform_token’s value is the authorization code or idToken returned by Google OAuth - **googleplaygames**: The platform_token’s value is the authorization code or idToken returned by Google play games OAuth - **oculus**: The platform_token’s value is a string composed of Oculus&#39;s user ID and the nonce separated by a colon (:). - **twitch**: The platform_token’s value is the authorization code returned by Twitch OAuth. - **discord**: The platform_token’s value is the authorization code returned by Discord OAuth - **android**: The device_id is the Android’s device ID - **ios**: The device_id is the iOS’s device ID. - **apple**: The platform_token’s value is the authorization code or idToken returned by Apple OAuth.(We will use this code to generate APP token) - **device**: Every device that does’nt run Android and iOS is categorized as a device. The device_id is the device’s ID. - **justice**: The platform_token’s value is the designated user’s access token. - **epicgames**: The platform_token’s value is an access-token or authorization code obtained from Epicgames EOS Account Service. - **ps4**: The platform_token’s value is the authorization code returned by Sony OAuth. - **ps5**: The platform_token’s value is the authorization code returned by Sony OAuth. - **nintendo**: The platform_token’s value is the id_token returned by Nintendo OAuth. - **awscognito**: The platform_token’s value is the aws cognito access token or id token (JWT). - **live**: The platform_token’s value is xbox XSTS token - **xblweb**: The platform_token’s value is code returned by xbox after login - **netflix**: The platform_token’s value is GAT (Gamer Access Token) returned by Netflix backend - **snapchat**: The platform_token’s value is the authorization code returned by Snapchat OAuth. - **for specific generic oauth (OIDC)**: The platform_token’s value should be the same type as created OIDC auth type whether it is auth code, idToken or bearerToken. ## Account Group Several platforms are grouped under account groups. The accounts on these platforms have the same platform user id. Login using one of these platform will returns the same IAM user. Following is the current registered account grouping: - Steam group(steamnetwork): - steam - steamopenid - PSN group(psn) - ps4web - ps4 - ps5 - XBOX group(xbox) - live - xblweb - Oculus group(oculusgroup) - oculus - oculusweb ## Access Token Content Following is the access token’s content: - **namespace**. It is the namespace the token was generated from. - **display_name**. The display name of the sub. It is empty if the token is generated from the client credential - **roles**. The sub’s roles. It is empty if the token is generated from the client credential - **namespace_roles**. The sub’s roles scoped to namespace. Improvement from roles, which make the role scoped to specific namespace instead of global to publisher namespace - **permissions**. The sub or aud’ permissions - **bans**. The sub’s list of bans. It is used by the IAM client for validating the token. - **jflgs**. It stands for Justice Flags. It is a special flag used for storing additional status information regarding the sub. It is implemented as a bit mask. Following explains what each bit represents: - 1: Email Address Verified - 2: Phone Number Verified - 4: Anonymous - 8: Suspicious Login - **aud**. The aud is the client ID. - **iat**. The time the token issues at. It is in Epoch time format - **exp**. The time the token expires. It is in Epoch time format - **sub**. The UserID. The sub is omitted if the token is generated from client credential ## Bans The JWT contains user&#39;s active bans with its expiry date. List of ban types can be obtained from /bans. action code : 10704
 *
 * #### Response type:
 * - `TokenResponseV3`
 * - `LoginQueueTicketResponse`
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_OAuth20V4.TokenOauth_ByPlatformId_v4, input]
 * }
 * ```
 */
declare const useOAuth20V4Api_PostTokenOauth_ByPlatformIdMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: {
        additionalData?: string | null;
        client_id?: string | null;
        createHeadless?: boolean | null;
        device_id?: string | null;
        macAddress?: string | null;
        platform_token?: string | null;
        serviceLabel?: number;
        skipSetCookie?: boolean | null;
    };
    queryParams?: {
        code_challenge?: string | null;
        code_challenge_method?: "S256" | "plain";
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: {
        additionalData?: string | null;
        client_id?: string | null;
        createHeadless?: boolean | null;
        device_id?: string | null;
        macAddress?: string | null;
        platform_token?: string | null;
        serviceLabel?: number;
        skipSetCookie?: boolean | null;
    };
    queryParams?: {
        code_challenge?: string | null;
        code_challenge_method?: "S256" | "plain";
    };
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_ProfileUpdateStrategy {
    ProfileUpdateStrategies_v3 = "Iam.ProfileUpdateStrategy.ProfileUpdateStrategies_v3"
}
/**
 * This API is for public user to get profile update strategy by namespace and field. Note: If the config is not found, this API will return a config with unlimited.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ProfileUpdateStrategy.ProfileUpdateStrategies_v3, input]
 * }
 * ```
 */
declare const useProfileUpdateStrategyApi_GetProfileUpdateStrategies_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        field?: "country" | "display_name" | "dob" | "username";
    };
}, options?: Omit<UseQueryOptions<GetProfileUpdateStrategyConfigResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetProfileUpdateStrategyConfigResponse>) => void) => UseQueryResult<GetProfileUpdateStrategyConfigResponse, AxiosError<ApiError>>;

/**
 * AUTO GENERATED
 */

declare enum Key_Roles {
    Roles = "Iam.Roles.Roles",
    Role = "Iam.Roles.Role",
    Role_ByRoleId = "Iam.Roles.Role_ByRoleId",
    Roles_v3 = "Iam.Roles.Roles_v3",
    Admin_ByRoleId = "Iam.Roles.Admin_ByRoleId",
    Member_ByRoleId = "Iam.Roles.Member_ByRoleId",
    Members_ByRoleId = "Iam.Roles.Members_ByRoleId",
    Manager_ByRoleId = "Iam.Roles.Manager_ByRoleId",
    Managers_ByRoleId = "Iam.Roles.Managers_ByRoleId",
    Role_ByRoleId_v3 = "Iam.Roles.Role_ByRoleId_v3",
    Permission_ByRoleId = "Iam.Roles.Permission_ByRoleId",
    Permission_ByRoleId_ByResource_ByAction = "Iam.Roles.Permission_ByRoleId_ByResource_ByAction"
}
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/roles [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Roles, input]
 * }
 * ```
 */
declare const useRolesApi_GetRoles: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        isWildcard?: string | null;
    };
}, options?: Omit<UseQueryOptions<RoleResponseWithManagersArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RoleResponseWithManagersArray>) => void) => UseQueryResult<RoleResponseWithManagersArray, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated Role can only be assigned to other users by the role&#39;s manager. If role is an administrator role (i.e. AdminRole == true), it will list out the role&#39;s members. Administrator role can be created only when at least 1 manager is specified. ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/roles [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Role, input]
 * }
 * ```
 */
declare const useRolesApi_CreateRoleMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<Role, AxiosError<ApiError>, SdkSetConfigParam & {
    data: RoleCreateRequest;
}>, "mutationKey">, callback?: (data: Role) => void) => UseMutationResult<Role, AxiosError<ApiError>, SdkSetConfigParam & {
    data: RoleCreateRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/roles/{roleId} [DELETE]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Role_ByRoleId, input]
 * }
 * ```
 */
declare const useRolesApi_DeleteRole_ByRoleIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/roles/{roleId} [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Role_ByRoleId, input]
 * }
 * ```
 */
declare const useRolesApi_GetRole_ByRoleId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    roleId: string;
}, options?: Omit<UseQueryOptions<RoleResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RoleResponse>) => void) => UseQueryResult<RoleResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/roles/{roleId} [PATCH]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Role_ByRoleId, input]
 * }
 * ```
 */
declare const useRolesApi_UpdateRole_ByRoleIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<RoleResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleUpdateRequest;
}>, "mutationKey">, callback?: (data: RoleResponse) => void) => UseMutationResult<RoleResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleUpdateRequest;
}>;
/**
 * This endpoint is used to get all non-admin role. action code: 10418
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Roles_v3, input]
 * }
 * ```
 */
declare const useRolesApi_GetRoles_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        after?: string | null;
        before?: string | null;
        isWildcard?: boolean | null;
        limit?: number;
    };
}, options?: Omit<UseQueryOptions<RoleNamesResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RoleNamesResponseV3>) => void) => UseQueryResult<RoleNamesResponseV3, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/roles/{roleId}/admin [DELETE]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Admin_ByRoleId, input]
 * }
 * ```
 */
declare const useRolesApi_DeleteAdmin_ByRoleIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated Admin roles has its members listed in the role. ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/roles/{roleId}/admin [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Admin_ByRoleId, input]
 * }
 * ```
 */
declare const useRolesApi_GetAdmin_ByRoleId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    roleId: string;
}, options?: Omit<UseQueryOptions<RoleAdminStatusResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RoleAdminStatusResponse>) => void) => UseQueryResult<RoleAdminStatusResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated Admin roles has its members listed in the role. Role can be set as admin role only when it has at least 1 manager. ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/roles/{roleId}/admin [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Admin_ByRoleId, input]
 * }
 * ```
 */
declare const useRolesApi_UpdateAdmin_ByRoleIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/roles/{roleId}/members [DELETE]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Member_ByRoleId, input]
 * }
 * ```
 */
declare const useRolesApi_DeleteMember_ByRoleIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleMembersRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleMembersRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/roles/{roleId}/members [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Members_ByRoleId, input]
 * }
 * ```
 */
declare const useRolesApi_GetMembers_ByRoleId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    roleId: string;
}, options?: Omit<UseQueryOptions<RoleMembersResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RoleMembersResponse>) => void) => UseQueryResult<RoleMembersResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated Admin roles has its members listed in the role. Role can only be assigned to other users by the role&#39;s manager. ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/roles/{roleId}/members [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Member_ByRoleId, input]
 * }
 * ```
 */
declare const useRolesApi_UpdateMember_ByRoleIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleMembersRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleMembersRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/roles/{roleId}/managers [DELETE]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Manager_ByRoleId, input]
 * }
 * ```
 */
declare const useRolesApi_DeleteManager_ByRoleIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleManagersRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleManagersRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated Role can only be assigned to other users by the role&#39;s manager. ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/roles/{roleId}/managers [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Managers_ByRoleId, input]
 * }
 * ```
 */
declare const useRolesApi_GetManagers_ByRoleId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    roleId: string;
}, options?: Omit<UseQueryOptions<RoleManagersResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RoleManagersResponse>) => void) => UseQueryResult<RoleManagersResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated Role can only be assigned to other users by the role&#39;s manager. ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/roles/{roleId}/managers [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Manager_ByRoleId, input]
 * }
 * ```
 */
declare const useRolesApi_UpdateManager_ByRoleIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleManagersRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: RoleManagersRequest;
}>;
/**
 * This endpoint is used to get non-admin role based on specify roleId. action code : 10417
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Role_ByRoleId_v3, input]
 * }
 * ```
 */
declare const useRolesApi_GetRole_ByRoleId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    roleId: string;
}, options?: Omit<UseQueryOptions<RoleResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RoleResponse>) => void) => UseQueryResult<RoleResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated This endpoint will REPLACE role&#39;s permissions with the ones defined in body Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect. Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *. In ranged schedule, first element will be start date, and second one will be end date If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive Syntax reference Fields: 1. Seconds: 0-59 * / , - 2. Minutes: 0-59 * / , - 3. Hours: 0-23 * / , - 4. Day of month: 1-31 * / , - L W 5. Month: 1-12 JAN-DEC * / , - 6. Day of week: 0-6 SUN-SAT * / , - L # 7. Year: 1970-2099 * / , - Special characters: 1. \*: all values in the fields, e.g. \* in seconds fields indicates every second 2. /: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter 3. ,: separate items of a list, e.g. MON,WED,FRI in day of week 4. -: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive 5. L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month. 6. W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34; 7. #: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month. ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/roles/{roleId}/permissions [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Permission_ByRoleId, input]
 * }
 * ```
 */
declare const useRolesApi_UpdatePermission_ByRoleIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: Permissions;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    data: Permissions;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/roles/{roleId}/permissions/{resource}/{action} [DELETE]_** - **Substitute endpoint: _/iam/v4/admin/roles/{roleId}/permissions [DELETE]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Permission_ByRoleId_ByResource_ByAction, input]
 * }
 * ```
 */
declare const useRolesApi_DeletePermission_ByRoleId_ByResource_ByActionMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    resource: string;
    action: number;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    resource: string;
    action: number;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated This endpoint will update existing permission (bitwise OR the action) if found one with same resource, otherwise it will append a new permission Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect. Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *. In ranged schedule, first element will be start date, and second one will be end date If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive Syntax reference Fields: - Seconds: 0-59 * / , - - Minutes: 0-59 * / , - - Hours: 0-23 * / , - - Day of month: 1-31 * / , - L W - Month: 1-12 JAN-DEC * / , - - Day of week: 0-6 SUN-SAT * / , - L # - Year: 1970-2099 * / , - Special characters: - \**: all values in the fields, e.g. \* in seconds fields indicates every second - /: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter - ,: separate items of a list, e.g. MON,WED,FRI in day of week - -: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive - L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month. - W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34; - #: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month. ### Endpoint migration guide - **Substitute endpoint(update): _/iam/v3/admin/roles/{roleId}/permissions [PUT]_** - **Substitute endpoint(create): _/iam/v3/admin/roles/{roleId}/permissions [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Roles.Permission_ByRoleId_ByResource_ByAction, input]
 * }
 * ```
 */
declare const useRolesApi_UpdatePermission_ByRoleId_ByResource_ByActionMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    resource: string;
    action: number;
    data: UpdatePermissionScheduleRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    roleId: string;
    resource: string;
    action: number;
    data: UpdatePermissionScheduleRequest;
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_Sso {
    Sso_ByPlatformId_v3 = "Iam.Sso.Sso_ByPlatformId_v3",
    Logout_ByPlatformId_v3 = "Iam.Sso.Logout_ByPlatformId_v3"
}
declare const useSsoApi_GetSso_ByPlatformId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    platformId: string;
    queryParams?: {
        payload?: string | null;
    };
}, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * Logout user&#39;s session on platform that logged in using SSO. Supported platforms: - discourse
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Sso.Logout_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useSsoApi_CreateLogout_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_SsoSaml20 {
    AuthenticateSamlSso_ByPlatformId_v3 = "Iam.SsoSaml20.AuthenticateSamlSso_ByPlatformId_v3"
}
/**
 * This endpoint authenticates user platform for SAML protocol. It validates user to its respective platforms. Deactivated or login-banned users are unable to login. ## Supported platforms: - **azure** Microsoft login page will redirects to this endpoint after login success as previously defined on authentication request SAML
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_SsoSaml20.AuthenticateSamlSso_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useSsoSaml20Api_PostAuthenticateSamlSso_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    queryParams: {
        state: string | null;
        code?: string | null;
        error?: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    queryParams: {
        state: string | null;
        code?: string | null;
        error?: string | null;
    };
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_ThirdPartyCredential {
    PlatformsClientsOidc_v3 = "Iam.ThirdPartyCredential.PlatformsClientsOidc_v3",
    PlatformsClientsActive_v3 = "Iam.ThirdPartyCredential.PlatformsClientsActive_v3"
}
/**
 * This is the Public API to Get All Active OIDC Platform Credential By Client ID
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ThirdPartyCredential.PlatformsClientsOidc_v3, input]
 * }
 * ```
 */
declare const useThirdPartyCredentialApi_GetPlatformsClientsOidc_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams: {
        clientId: string | null;
    };
}, options?: Omit<UseQueryOptions<PublicThirdPartyPlatformInfoArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<PublicThirdPartyPlatformInfoArray>) => void) => UseQueryResult<PublicThirdPartyPlatformInfoArray, AxiosError<ApiError>>;
/**
 * This is the Public API to Get All Active 3rd Platform Credential.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ThirdPartyCredential.PlatformsClientsActive_v3, input]
 * }
 * ```
 */
declare const useThirdPartyCredentialApi_GetPlatformsClientsActive_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<PublicThirdPartyPlatformInfoArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<PublicThirdPartyPlatformInfoArray>) => void) => UseQueryResult<PublicThirdPartyPlatformInfoArray, AxiosError<ApiError>>;

/**
 * AUTO GENERATED
 */

declare enum Key_Users {
    UsersMe_v3 = "Iam.Users.UsersMe_v3",
    User = "Iam.Users.User",
    UsersMeProfileStatus_v3 = "Iam.Users.UsersMeProfileStatus_v3",
    UsersAdmin = "Iam.Users.UsersAdmin",
    UsersVerifyLinkVerify_v3 = "Iam.Users.UsersVerifyLinkVerify_v3",
    UsersSearch = "Iam.Users.UsersSearch",
    User_ByUserId = "Iam.Users.User_ByUserId",
    UsersByLoginId = "Iam.Users.UsersByLoginId",
    User_v2 = "Iam.Users.User_v2",
    Users_v3 = "Iam.Users.Users_v3",
    User_v3 = "Iam.Users.User_v3",
    UserMeVerifyLinkRequest_v3 = "Iam.Users.UserMeVerifyLinkRequest_v3",
    Ban_ByUserId = "Iam.Users.Ban_ByUserId",
    UserMe_v3 = "Iam.Users.UserMe_v3",
    UsersMeHeadlessLinkConflict_v3 = "Iam.Users.UsersMeHeadlessLinkConflict_v3",
    Bans_ByUserId = "Iam.Users.Bans_ByUserId",
    UserResetPassword = "Iam.Users.UserResetPassword",
    Role_ByUserId = "Iam.Users.Role_ByUserId",
    UserForgotPassword = "Iam.Users.UserForgotPassword",
    UsersListByLoginIds = "Iam.Users.UsersListByLoginIds",
    Enable_ByUserId = "Iam.Users.Enable_ByUserId",
    UserReset_v3 = "Iam.Users.UserReset_v3",
    Disable_ByUserId = "Iam.Users.Disable_ByUserId",
    UsersByPlatformUserId = "Iam.Users.UsersByPlatformUserId",
    UserForgot_v3 = "Iam.Users.UserForgot_v3",
    Password_ByUserId = "Iam.Users.Password_ByUserId",
    Crosslink_ByUserId = "Iam.Users.Crosslink_ByUserId",
    Platforms_ByUserId = "Iam.Users.Platforms_ByUserId",
    Publisher_ByUserId = "Iam.Users.Publisher_ByUserId",
    User_ByUserId_v2 = "Iam.Users.User_ByUserId_v2",
    User_ByUserId_v3 = "Iam.Users.User_ByUserId_v3",
    UserMeHeadlesLinkWithProgression_v3 = "Iam.Users.UserMeHeadlesLinkWithProgression_v3",
    UserPlatform_v3 = "Iam.Users.UserPlatform_v3",
    Information_ByUserId = "Iam.Users.Information_ByUserId",
    Permission_ByUserId = "Iam.Users.Permission_ByUserId",
    UserBulkBasic_v3 = "Iam.Users.UserBulkBasic_v3",
    Verification_ByUserId = "Iam.Users.Verification_ByUserId",
    UserCodeVerify_v3 = "Iam.Users.UserCodeVerify_v3",
    UserMePassword_v3 = "Iam.Users.UserMePassword_v3",
    UsersAvailability_v3 = "Iam.Users.UsersAvailability_v3",
    UserCodeRequest_v3 = "Iam.Users.UserCodeRequest_v3",
    Role_ByUserId_ByRoleId = "Iam.Users.Role_ByUserId_ByRoleId",
    Bans_ByUserId_v2 = "Iam.Users.Bans_ByUserId_v2",
    UserResetPassword_v2 = "Iam.Users.UserResetPassword_v2",
    Bans_ByUserId_v3 = "Iam.Users.Bans_ByUserId_v3",
    UserForgotPassword_v2 = "Iam.Users.UserForgotPassword_v2",
    UserMeCodeVerify_v3 = "Iam.Users.UserMeCodeVerify_v3",
    LoginsHistories_ByUserId = "Iam.Users.LoginsHistories_ByUserId",
    Verificationcode_ByUserId = "Iam.Users.Verificationcode_ByUserId",
    UserMeCodeRequest_v3 = "Iam.Users.UserMeCodeRequest_v3",
    UserInputValidation_v3 = "Iam.Users.UserInputValidation_v3",
    Password_ByUserId_v2 = "Iam.Users.Password_ByUserId_v2",
    Validate_ByUserId_v3 = "Iam.Users.Validate_ByUserId_v3",
    Enable_ByUserId_ByBanId = "Iam.Users.Enable_ByUserId_ByBanId",
    Platforms_ByUserId_v3 = "Iam.Users.Platforms_ByUserId_v3",
    Publisher_ByUserId_v3 = "Iam.Users.Publisher_ByUserId_v3",
    UserMeHeadlesVerify_v3 = "Iam.Users.UserMeHeadlesVerify_v3",
    Disable_ByUserId_ByBanId = "Iam.Users.Disable_ByUserId_ByBanId",
    Information_ByUserId_v3 = "Iam.Users.Information_ByUserId_v3",
    UpgradeHeadlessAccount_ByUserId = "Iam.Users.UpgradeHeadlessAccount_ByUserId",
    UserInvite_ByInvitationId_v3 = "Iam.Users.UserInvite_ByInvitationId_v3",
    User_ByPlatformId_v3 = "Iam.Users.User_ByPlatformId_v3",
    PlatformLink_ByUserId_v3 = "Iam.Users.PlatformLink_ByUserId_v3",
    UserMeHeadlesCodeVerify_v3 = "Iam.Users.UserMeHeadlesCodeVerify_v3",
    LoginsHistories_ByUserId_v3 = "Iam.Users.LoginsHistories_ByUserId_v3",
    UserMePlatform_ByPlatformId_v3 = "Iam.Users.UserMePlatform_ByPlatformId_v3",
    Link_ByUserId_ByPlatformId = "Iam.Users.Link_ByUserId_ByPlatformId",
    PlatformsJustice_ByUserId_v2 = "Iam.Users.PlatformsJustice_ByUserId_v2",
    DistinctPlatforms_ByUserId_v3 = "Iam.Users.DistinctPlatforms_ByUserId_v3",
    PlatformsJustice_ByUserId_v3 = "Iam.Users.PlatformsJustice_ByUserId_v3",
    AsyncStatus_ByRequestId_v3 = "Iam.Users.AsyncStatus_ByRequestId_v3",
    Unlink_ByUserId_ByPlatformId = "Iam.Users.Unlink_ByUserId_ByPlatformId",
    AllMeUser_ByPlatformId_v3 = "Iam.Users.AllMeUser_ByPlatformId_v3",
    Permission_ByUserId_ByResource_ByAction = "Iam.Users.Permission_ByUserId_ByResource_ByAction",
    ForceMeUser_ByPlatformId_v3 = "Iam.Users.ForceMeUser_ByPlatformId_v3",
    Agerestrictions_ByCountryCode_v2 = "Iam.Users.Agerestrictions_ByCountryCode_v2",
    AgerestrictionCountry_ByCountryCode_v3 = "Iam.Users.AgerestrictionCountry_ByCountryCode_v3",
    PlatformJustice_ByUserId_ByTargetNamespace = "Iam.Users.PlatformJustice_ByUserId_ByTargetNamespace",
    WebLinkMeUsers_ByPlatformId_v3 = "Iam.Users.WebLinkMeUsers_ByPlatformId_v3",
    Link_ByUserId_ByPlatformId_v2 = "Iam.Users.Link_ByUserId_ByPlatformId_v2",
    PlatformLinkWithProgression_ByUserId_v3 = "Iam.Users.PlatformLinkWithProgression_ByUserId_v3",
    UserMePlatformJustice_ByTargetNamespace_v3 = "Iam.Users.UserMePlatformJustice_ByTargetNamespace_v3",
    User_ByPlatformId_ByPlatformUserId_v3 = "Iam.Users.User_ByPlatformId_ByPlatformUserId_v3",
    UpgradeHeadlessAccountWithVerificationCode_ByUserId = "Iam.Users.UpgradeHeadlessAccountWithVerificationCode_ByUserId",
    WebLinkProcesMeUser_ByPlatformId_v3 = "Iam.Users.WebLinkProcesMeUser_ByPlatformId_v3",
    WebLinkEstablishMeUsers_ByPlatformId_v3 = "Iam.Users.WebLinkEstablishMeUsers_ByPlatformId_v3"
}
/**
 * Get my user data __Supported 3rd platforms:__ * __PSN(ps4web, ps4, ps5)__ * account id * display name * avatar * __Xbox(live, xblweb)__ * xuid or pxuid * display name * __Steam(steam, steamopenid)__ * steam id * display name * avatar * __EpicGames(epicgames)__ * epic account id * display name action code : 10147
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UsersMe_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetUsersMe_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        includeAllPlatforms?: boolean | null;
    };
}, options?: Omit<UseQueryOptions<UserResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserResponseV3>) => void) => UseQueryResult<UserResponseV3, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users [POST]_** - **Substitute endpoint: _/iam/v4/public/namespaces/{namespace}/users [POST]_** - **Note:** 1. v3 &amp; v4 introduce optional verification code 2. format difference（Pascal case =&gt; Camel case) Available Authentication Types: 1. **EMAILPASSWD**: an authentication type used for new user registration through email. 2. **PHONEPASSWD**: an authentication type used for new user registration through phone number. Country use ISO3166-1 alpha-2 two letter, e.g. US.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.User, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserCreateResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserCreateRequest;
}>, "mutationKey">, callback?: (data: UserCreateResponse) => void) => UseMutationResult<UserCreateResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserCreateRequest;
}>;
/**
 * This API is for user to get self profile update allow status. Note: If the config is not found, this API will return a config with unlimited.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UsersMeProfileStatus_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetUsersMeProfileStatus_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<UserProfileUpdateAllowStatus, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserProfileUpdateAllowStatus>) => void) => UseQueryResult<UserProfileUpdateAllowStatus, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint(Public): _/iam/v3/admin/namespaces/{namespace}/roles/{roleId}/users [GET]_** - **Note:** difference in V3 response, format difference: Pascal case =&gt; Camel case This endpoint search admin users which have the roleId Notes : this endpoint only accept admin role. Admin Role is role which have admin status and members. Use endpoint [GET] /roles/{roleId}/admin to check the role status
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UsersAdmin, input]
 * }
 * ```
 */
declare const useUsersApi_GetUsersAdmin: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        after?: number;
        before?: number;
        limit?: number;
        roleId?: string | null;
    };
}, options?: Omit<UseQueryOptions<GetAdminUsersResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetAdminUsersResponse>) => void) => UseQueryResult<GetAdminUsersResponse, AxiosError<ApiError>>;
declare const useUsersApi_GetUsersVerifyLinkVerify_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        code?: string | null;
    };
}, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/search [GET]_** Search all users that match the query on these fields: all login IDs (email address, phone number, and platform user id), userID, display name, and on the specified namespace. If the query is not defined, then it searches all users on the specified namespace.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UsersSearch, input]
 * }
 * ```
 */
declare const useUsersApi_GetUsersSearch: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        query?: string | null;
    };
}, options?: Omit<UseQueryOptions<SearchUsersResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<SearchUsersResponse>) => void) => UseQueryResult<SearchUsersResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/information [DELETE]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.User_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_DeleteUser_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint(Public): _/iam/v3/public/namespaces/{namespace}/users/{userId} [GET]_** - **Substitute endpoint(Admin): _/iam/v3/admin/namespaces/{namespace}/users/{userId} [GET]_** - **Note:** format difference in response: Pascal case =&gt; Camel case
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.User_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_GetUser_ByUserId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<UserResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserResponse>) => void) => UseQueryResult<UserResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint([PUT]): _/iam/v3/public/namespaces/{namespace}/users/me [PUT]_** - **Substitute endpoint([PATCH]): _/iam/v3/public/namespaces/{namespace}/users/me [PATCH]_** - **Substitute endpoint([PATCH]): _/iam/v4/public/namespaces/{namespace}/users/me [PATCH]_** - **Note:** 1. Prefer [PATCH] if client support PATCH method 2. Difference in V3/v4 request body, format difference: Pascal case =&gt; Camel case This Endpoint support update user based on given data. **Single request can update single field or multi fields.** Supported field {Country, DisplayName, LanguageTag} Country use ISO3166-1 alpha-2 two letter, e.g. US. **Several case of updating email address** - User want to update email address of which have been verified, NewEmailAddress response field will be filled with new email address - User want to update email address of which have not been verified, {LoginId, OldEmailAddress, EmailAddress} response field will be filled with new email address. - User want to update email address of which have been verified and updated before, {LoginId, OldEmailAddress, EmailAddress} response field will be filled with verified email before. NewEmailAddress response field will be filled with newest email address.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.User_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_UpdateUser_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserUpdateRequest;
}>, "mutationKey">, callback?: (data: UserResponse) => void) => UseMutationResult<UserResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserUpdateRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UsersByLoginId, input]
 * }
 * ```
 */
declare const useUsersApi_GetUsersByLoginId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        loginId?: string | null;
    };
}, options?: Omit<UseQueryOptions<PublicUserResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<PublicUserResponse>) => void) => UseQueryResult<PublicUserResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users [POST]_** - **Substitute endpoint: _/iam/v4/public/namespaces/{namespace}/users [POST]_** - **Note:** 1. v3 &amp; v4 introduce optional verification code 2. format difference（Pascal case =&gt; Camel case) Available Authentication Types: 1. *EMAILPASSWD*: an authentication type used for new user registration through email. Country use ISO3166-1 alpha-2 two letter, e.g. US.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.User_v2, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserCreateResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserCreateRequest;
}>, "mutationKey">, callback?: (data: UserCreateResponse) => void) => UseMutationResult<UserCreateResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserCreateRequest;
}>;
/**
 * This endpoint search all users on the specified namespace that match the query on these fields: display name, unique display name, username or by 3rd party display name. The query length should between 3-20, otherwise will not query the database. The default limit value is 20. ## Searching by 3rd party platform **Note: searching by 3rd party platform display name will use exact query, not fuzzy query.** Step when searching by 3rd party platform display name: 1. set __by__ to __thirdPartyPlatform__ 2. set __platformId__ to the _supported platform id_ 3. set __platformBy__ to __platformDisplayName__ **Supported Platforms:** - Steam group (steamnetwork): - steam - steamopenid - PSN group (psn): - ps4web - ps4 - ps5 - XBOX group(xbox): - live - xblweb - Oculus group (oculusgroup): - oculus - oculusweb - Google group (google): - google - googleplaygames: - epicgames - facebook - twitch - discord - android - ios - apple - device - nintendo - awscognito - amazon - netflix - snapchat - _oidc platform id_ Note: - You can use either platform id or platform group as **platformId** parameter. - **Nintendo platform user id**: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Users_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetUsers_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        by?: string | null;
        limit?: number;
        offset?: number;
        platformBy?: string | null;
        platformId?: string | null;
        query?: string | null;
    };
}, options?: Omit<UseQueryOptions<PublicUserInformationResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<PublicUserInformationResponseV3>) => void) => UseQueryResult<PublicUserInformationResponseV3, AxiosError<ApiError>>;
/**
 * Available Authentication Types: 1. **EMAILPASSWD**: an authentication type used for new user registration through email. **Note**: * **uniqueDisplayName**: this is required when uniqueDisplayNameEnabled/UNIQUE_DISPLAY_NAME_ENABLED is true. * **code**: this is required when mandatoryEmailVerificationEnabled config is true. please refer to the config from /iam/v3/public/namespaces/{namespace}/config/{configKey} [GET] API. Country use ISO3166-1 alpha-2 two letter, e.g. US. Date of Birth format : YYYY-MM-DD, e.g. 2019-04-29. This endpoint support accepting agreements for the created user. Supply the accepted agreements in acceptedPolicies attribute.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.User_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserCreateResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserCreateRequestV3;
}>, "mutationKey">, callback?: (data: UserCreateResponseV3) => void) => UseMutationResult<UserCreateResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserCreateRequestV3;
}>;
/**
 * The verification link is sent to email address It will not send request if user email is already verified
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserMeVerifyLinkRequest_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserMeVerifyLinkRequestMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: SendVerificationLinkRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: SendVerificationLinkRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/bans [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Ban_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_CreateBan_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserBanResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: BanCreateRequest;
}>, "mutationKey">, callback?: (data: UserBanResponse) => void) => UseMutationResult<UserBanResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: BanCreateRequest;
}>;
/**
 * This Endpoint support update user based on given data. **Single request can update single field or multi fields.** Supported field {country, displayName, languageTag, dateOfBirth, avatarUrl, userName} Country use ISO3166-1 alpha-2 two letter, e.g. US. Date of Birth format : YYYY-MM-DD, e.g. 2019-04-29. **Response body logic when user updating email address:** - User want to update email address of which have been verified, newEmailAddress response field will be filled with new email address. - User want to update email address of which have not been verified, { oldEmailAddress, emailAddress} response field will be filled with new email address. - User want to update email address of which have been verified and updated before, { oldEmailAddress, emailAddress} response field will be filled with verified email before. newEmailAddress response field will be filled with newest email address. action code : 10103
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserMe_v3, input]
 * }
 * ```
 */
declare const useUsersApi_PatchUserMeMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: PublicUserUpdateRequestV3;
}>, "mutationKey">, callback?: (data: UserResponseV3) => void) => UseMutationResult<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: PublicUserUpdateRequestV3;
}>;
/**
 * This Endpoint support update user based on given data. **Single request can update single field or multi fields.** Supported field {country, displayName, languageTag, dateOfBirth, avatarUrl, userName} Country use ISO3166-1 alpha-2 two letter, e.g. US. Date of Birth format : YYYY-MM-DD, e.g. 2019-04-29. **Response body logic when user updating email address:** - User want to update email address of which have been verified, newEmailAddress response field will be filled with new email address. - User want to update email address of which have not been verified, { oldEmailAddress, emailAddress} response field will be filled with new email address. - User want to update email address of which have been verified and updated before, { oldEmailAddress, emailAddress} response field will be filled with verified email before. newEmailAddress response field will be filled with newest email address. **Important notes:** This endpoint provides support for client that doesn&#39;t have PATCH support, i.e. UE4 before v4.23 released. If the client support PATCH method, use [PATCH] /iam/v3/public/namespaces/{namespace}/users/me instead action code : 10103
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserMe_v3, input]
 * }
 * ```
 */
declare const useUsersApi_UpdateUserMeMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: PublicUserUpdateRequestV3;
}>, "mutationKey">, callback?: (data: UserResponseV3) => void) => UseMutationResult<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: PublicUserUpdateRequestV3;
}>;
/**
 * Note: 1. My account should be full account 2. My account not linked to request headless account&#39;s third platform. After client resolving the conflict, it will call endpoint &lt;code&gt;/iam/v3/public/users/me/headless/linkWithProgression [POST]&lt;/code&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UsersMeHeadlessLinkConflict_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetUsersMeHeadlessLinkConflict_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams: {
        oneTimeLinkCode: string | null;
    };
}, options?: Omit<UseQueryOptions<GetLinkHeadlessAccountConflictResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetLinkHeadlessAccountConflictResponse>) => void) => UseQueryResult<GetLinkHeadlessAccountConflictResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/bans [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Bans_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_GetBans_ByUserId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<UserBanResponseArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserBanResponseArray>) => void) => UseQueryResult<UserBanResponseArray, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/reset [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserResetPassword, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserResetPasswordMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ResetPasswordRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ResetPasswordRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/roles [PATCH]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Role_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_UpdateRole_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: string[];
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: string[];
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/forgot [POST]_** **Special note for publisher-game scenario:** Game Client should provide game namespace path parameter and Publisher Client should provide publisher namespace path parameter. The password reset code will be sent to the publisher account&#39;s email address.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserForgotPassword, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserForgotPasswordMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: SendVerificationCodeRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: SendVerificationCodeRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint(query by email list): _/iam/v3/public/namespaces/{namespace}/users/bulk/basic [POST]_** - **Substitute endpoint(query by user id list): _/iam/v3/admin/namespaces/{namespace}/users/search/bulk [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UsersListByLoginIds, input]
 * }
 * ```
 */
declare const useUsersApi_GetUsersListByLoginIds: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        loginIds?: string | null;
    };
}, options?: Omit<UseQueryOptions<PublicUsersResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<PublicUsersResponse>) => void) => UseQueryResult<PublicUsersResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/status [PATCH]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Enable_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_UpdateEnable_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>;
/**
 * action code: 10105
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserReset_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserResetMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ResetPasswordRequestV3;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ResetPasswordRequestV3;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/status [PATCH]_** For **Deletion Account** purpose fill the reason with: - **DeactivateAccount** : if your deletion request comes from user - **AdminDeactivateAccount** : if your deletion request comes from admin
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Disable_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_UpdateDisable_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: DisableUserRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: DisableUserRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint(Public): _/iam/v3/public/namespaces/{namespace}/platforms/{platformId}/users/{platformUserId} [GET]_** - **Substitute endpoint(Admin): _/iam/v3/admin/namespaces/{namespace}/platforms/{platformId}/users/{platformUserId} [GET]_** - **Note:** 1. difference in V3 response, format difference: Pascal case =&gt; Camel case
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UsersByPlatformUserId, input]
 * }
 * ```
 */
declare const useUsersApi_GetUsersByPlatformUserId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams: {
        platformID: string | null;
        platformUserID: string | null;
    };
}, options?: Omit<UseQueryOptions<PublicUserResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<PublicUserResponse>) => void) => UseQueryResult<PublicUserResponse, AxiosError<ApiError>>;
/**
 * **Special note for publisher-game scenario:** Game Client should provide game namespace path parameter and Publisher Client should provide publisher namespace path parameter. The password reset code will be sent to the publisher account&#39;s email address. action code : 10104
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserForgot_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserForgotMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ForgotPasswordRequestV3;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ForgotPasswordRequestV3;
}>;
/**
 * @deprecated
 *  ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/me/password [PUT]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Password_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_UpdatePassword_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserPasswordUpdateRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserPasswordUpdateRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/me/platforms/{platformId} [POST]_** Access token from original namespace is needed as authorization header. Access token from designated account needed as form parameter to verify the ownership of that account. When platformID (device platfom ID) is specified, platform login method for that specific platform ID is removed. This means to protect account from second hand device usage.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Crosslink_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_PostCrosslink_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: {
        linkingToken: string | null;
        platformId?: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: {
        linkingToken: string | null;
        platformId?: string | null;
    };
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/{userId}/platforms [GET]_** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/platforms [GET]_** ## Justice Platform Account The permission ’ADMIN:NAMESPACE:{namespace}:JUSTICE:USER:{userId}’ [READ] is required in order to read the UserID who linked with the user.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Platforms_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_GetPlatforms_ByUserId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<UserLinkedPlatformArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserLinkedPlatformArray>) => void) => UseQueryResult<UserLinkedPlatformArray, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/{userId}/publisher [GET]_** **Restriction:** Path Parameter *namespace* can be provided only with game namespace
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Publisher_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_GetPublisher_ByUserId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<GetPublisherUserResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetPublisherUserResponse>) => void) => UseQueryResult<GetPublisherUserResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint(Public): _/iam/v3/public/namespaces/{namespace}/users/{userId} [GET]_** - **Substitute endpoint(Admin): _/iam/v3/admin/namespaces/{namespace}/users/{userId} [GET]_** - **Note:** format difference in response: Pascal case =&gt; Camel case
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.User_ByUserId_v2, input]
 * }
 * ```
 */
declare const useUsersApi_GetUser_ByUserId_v2: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<UserResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserResponse>) => void) => UseQueryResult<UserResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint([PUT]): _/iam/v3/public/namespaces/{namespace}/users/me [PUT]_** - **Substitute endpoint([PATCH]): _/iam/v3/public/namespaces/{namespace}/users/me [PATCH]_** - **Substitute endpoint([PATCH]): _/iam/v4/public/namespaces/{namespace}/users/me [PATCH]_** - **Note:** 1. Prefer [PATCH] if client support PATCH method 2. Difference in V3/v4 request body, format difference: Pascal case =&gt; Camel case This Endpoint support update user based on given data. **Single request can update single field or multi fields.** Supported field {Country, DisplayName, LanguageTag}
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.User_ByUserId_v2, input]
 * }
 * ```
 */
declare const useUsersApi_PatchUser_ByUserIdMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserResponseArray, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserUpdateRequest;
}>, "mutationKey">, callback?: (data: UserResponseArray) => void) => UseMutationResult<UserResponseArray, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserUpdateRequest;
}>;
/**
 * @deprecated
 * This endpoint retrieve user attributes. action code: 10129 **Substitute endpoint:** /v4/public/namespaces/{namespace}/users/{userId} [READ]
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.User_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetUser_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<PublicUserResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<PublicUserResponseV3>) => void) => UseQueryResult<PublicUserResponseV3, AxiosError<ApiError>>;
/**
 * Note: 1. My account should be full account 2. My account not linked to headless account&#39;s third platform.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserMeHeadlesLinkWithProgression_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserMeHeadlesLinkWithProgressionMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: LinkHeadlessAccountRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: LinkHeadlessAccountRequest;
}>;
/**
 * Note: 1. the max count of user ids in the request is 100 2. if platform id is not empty, the result will only contain the corresponding platform infos 3. if platform id is empty, the result will contain all the supported platform infos __Supported 3rd platforms:__ * __PSN(ps4web, ps4, ps5)__ * account id * display name * avatar * __Xbox(live, xblweb)__ * xuid or pxuid * display name * __Steam(steam, steamopenid)__ * steam id * display name * avatar * __EpicGames(epicgames)__ * epic account id * display name
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserPlatform_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserPlatformMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UsersPlatformInfosResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UsersPlatformInfosRequestV3;
}>, "mutationKey">, callback?: (data: UsersPlatformInfosResponse) => void) => UseMutationResult<UsersPlatformInfosResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UsersPlatformInfosRequestV3;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/information [DELETE]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Information_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_DeleteInformation_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/{userId}/information [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Information_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_GetInformation_ByUserId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<UserInformation, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserInformation>) => void) => UseQueryResult<UserInformation, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/permissions [POST]_** This endpoint will REPLACE user&#39;s permissions with the ones defined in body Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect. Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *. In ranged schedule, first element will be start date, and second one will be end date If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive Syntax reference Fields: 1. Seconds: 0-59 * / , - 2. Minutes: 0-59 * / , - 3. Hours: 0-23 * / , - 4. Day of month: 1-31 * / , - L W 5. Month: 1-12 JAN-DEC * / , - 6. Day of week: 0-6 SUN-SAT * / , - L # 7. Year: 1970-2099 * / , - Special characters: 1. *: all values in the fields, e.g. * in seconds fields indicates every second 2. /: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter 3. ,: separate items of a list, e.g. MON,WED,FRI in day of week 4. -: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive 5. L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month. 6. W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34; 7. #: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Permission_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_UpdatePermission_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: Permissions;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: Permissions;
}>;
/**
 * Notes: - This endpoint bulk get users&#39; basic info by userId, max allowed 100 at a time - If namespace is game, will search by game user Id, other wise will search by publisher namespace - **Result will include displayName(if it exists)**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserBulkBasic_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserBulkBasicMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<ListBulkUserResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserIDsRequest;
}>, "mutationKey">, callback?: (data: ListBulkUserResponse) => void) => UseMutationResult<ListBulkUserResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserIDsRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/me/code/verify [POST]_** Redeems a verification code sent to a user to verify the user&#39;s contact address is correct Available ContactType : *email* or *phone*
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Verification_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_UpdateVerification_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserVerificationRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserVerificationRequest;
}>;
/**
 * Verify the registration code
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserCodeVerify_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserCodeVerifyMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: VerifyRegistrationCode;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: VerifyRegistrationCode;
}>;
/**
 * action code: 10107
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserMePassword_v3, input]
 * }
 * ```
 */
declare const useUsersApi_UpdateUserMePasswordMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserPasswordUpdateV3Request;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserPasswordUpdateV3Request;
}>;
/**
 * Check user&#39;s account availability. Available field : - displayName - uniqueDisplayName - username If request include access token with user ID data, that user ID will be excluded from availability check. For example, in case user update his emailAddress, he can use his own emailAddress to update his account. Response Code : - Account Available : 404 (not found) - Account Not Available : 204 (no content)
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UsersAvailability_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetUsersAvailability_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams: {
        field: string | null;
        query: string | null;
    };
}, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * This endpoint will validate the request&#39;s email address. If it already been used, will response 409. If it is available, we will send a verification code to this email address. This code can be verified by this [endpoint](#operations-Users-PublicVerifyRegistrationCode).
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserCodeRequest_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserCodeRequestMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: SendRegisterVerificationCodeRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: SendRegisterVerificationCodeRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/roles/{roleId} [DELETE]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Role_ByUserId_ByRoleId, input]
 * }
 * ```
 */
declare const useUsersApi_DeleteRole_ByUserId_ByRoleIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    roleId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    roleId: string;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/roles/{roleId} [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Role_ByUserId_ByRoleId, input]
 * }
 * ```
 */
declare const useUsersApi_UpdateRole_ByUserId_ByRoleIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    roleId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    roleId: string;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/{userId}/bans [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Bans_ByUserId_v2, input]
 * }
 * ```
 */
declare const useUsersApi_GetBans_ByUserId_v2: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
    queryParams?: {
        activeOnly?: boolean | null;
    };
}, options?: Omit<UseQueryOptions<UserBanResponseArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserBanResponseArray>) => void) => UseQueryResult<UserBanResponseArray, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/reset [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserResetPassword_v2, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserResetPasswordMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ResetPasswordRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ResetPasswordRequest;
}>;
/**
 * Notes: - This endpoint retrieve the first page of the data if after and before parameters is empty - **The pagination is not working yet** **Authentication:** The _**userId**_ parameter should match the one in the access token.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Bans_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetBans_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
    queryParams?: {
        activeOnly?: boolean | null;
        after?: string | null;
        before?: string | null;
        limit?: number;
    };
}, options?: Omit<UseQueryOptions<GetUserBanV3Response, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetUserBanV3Response>) => void) => UseQueryResult<GetUserBanV3Response, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/forgot [POST]_** **Special note for publisher-game scenario:** Game Client should provide game namespace path parameter and Publisher Client should provide publisher namespace path parameter. The password reset code will be sent to the publisher account&#39;s email address.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserForgotPassword_v2, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserForgotPasswordMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: SendVerificationCodeRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: SendVerificationCodeRequest;
}>;
/**
 * Will consume code if validateOnly is set false Redeems a verification code sent to a user to verify the user&#39;s contact address is correct Available ContactType : **email** action code: 10107
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserMeCodeVerify_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserMeCodeVerifyMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserVerificationRequestV3;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserVerificationRequestV3;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/{userId}/logins/histories [GET]_** - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/logins/histories [GET]_** Notes for this endpoint: - This endpoint retrieve the first page of the data if &#39;after&#39; and &#39;before&#39; parameters is empty. - The maximum value of the limit is 100 and the minimum value of the limit is 1. - This endpoint retrieve the next page of the data if we provide &#39;after&#39; parameters with valid Unix timestamp. - This endpoint retrieve the previous page of the data if we provide &#39;before&#39; parameter with valid data Unix timestamp.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.LoginsHistories_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_GetLoginsHistories_ByUserId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
    queryParams?: {
        after?: number;
        before?: number;
        limit?: number;
    };
}, options?: Omit<UseQueryOptions<LoginHistoriesResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<LoginHistoriesResponse>) => void) => UseQueryResult<LoginHistoriesResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/me/code/request [POST]_** The verification code is sent to either the phone number or email address. It depends on the LoginID&#39;s value. Available contexts for use : 1. **UserAccountRegistration** a context type used for verifying email address in user account registration. It returns 409 if the email address already verified. **_It is the default context if the Context field is empty_** 2. **UpdateEmailAddress** a context type used for verify user before updating email address.(Without email address verified checking) 3. **upgradeHeadlessAccount** The context is intended to be used whenever the email address wanted to be automatically verified on upgrading a headless account. If this context used, IAM rejects the request if the loginId field&#39;s value is already used by others by returning HTTP Status Code 409.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Verificationcode_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_UpdateVerificationcode_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: SendVerificationCodeRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: SendVerificationCodeRequest;
}>;
/**
 * The verification code is sent to email address Available contexts for use : 1. **UserAccountRegistration** a context type used for verifying email address in user account registration. It returns 409 if the email address already verified. **_It is the default context if the Context field is empty_** 2. **UpdateEmailAddress** a context type used for verify user before updating email address.(Without email address verified checking) 3. **upgradeHeadlessAccount** The context is intended to be used whenever the email address wanted to be automatically verified on upgrading a headless account. If this context used, IAM rejects the request if the email address is already used by others by returning HTTP Status Code 409. action code: 10116
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserMeCodeRequest_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserMeCodeRequestMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: SendVerificationCodeRequestV3;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: SendVerificationCodeRequestV3;
}>;
/**
 * Validate user&#39;s input. -------- **note:** - this endpoint will check the input validation and profanity filter service(if this is enabled) - the namespace should be publisher namespace
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserInputValidation_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserInputValidationMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserInputValidationResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserInputValidationRequest;
}>, "mutationKey">, callback?: (data: UserInputValidationResponse) => void) => UseMutationResult<UserInputValidationResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserInputValidationRequest;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/me/password [PUT]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Password_ByUserId_v2, input]
 * }
 * ```
 */
declare const useUsersApi_UpdatePassword_ByUserIdMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserPasswordUpdateRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserPasswordUpdateRequest;
}>;
/**
 * This endpoint is used to validate the user password. This endpoint validate the user password by specifying the userId and password. **Authentication:** The _**userId**_ parameter should match the one in the access token.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Validate_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_PostValidate_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: {
        password: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: {
        password: string | null;
    };
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/bans/{banId} [PATCH]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Enable_ByUserId_ByBanId, input]
 * }
 * ```
 */
declare const useUsersApi_UpdateEnable_ByUserId_ByBanIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserBanResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    banId: string;
}>, "mutationKey">, callback?: (data: UserBanResponse) => void) => UseMutationResult<UserBanResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    banId: string;
}>;
/**
 * This endpoint retrieves platform accounts linked to user. **Supported Platforms:** - Steam group (steamnetwork): - steam - steamopenid - PSN group (psn): - ps4web - ps4 - ps5 - XBOX group(xbox): - live - xblweb - Oculus group (oculusgroup): - oculus - oculusweb - Google group (google): - google - googleplaygames: - epicgames - facebook - twitch - discord - android - ios - apple - device - nintendo - awscognito - amazon - netflix - snapchat - _oidc platform id_ Note: - You can use either platform id or platform group as **platformId** parameter. - **Nintendo platform user id**: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1 **Authentication:** The _**userId**_ parameter should match the one in the access token. action code: 10128
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Platforms_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetPlatforms_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
    queryParams?: {
        after?: string | null;
        before?: string | null;
        limit?: number;
        platformId?: string | null;
    };
}, options?: Omit<UseQueryOptions<UserLinkedPlatformsResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserLinkedPlatformsResponseV3>) => void) => UseQueryResult<UserLinkedPlatformsResponseV3, AxiosError<ApiError>>;
/**
 * **Restriction:** Path Parameter **namespace** can be provided only with game namespace
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Publisher_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetPublisher_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<GetPublisherUserResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetPublisherUserResponse>) => void) => UseQueryResult<GetPublisherUserResponse, AxiosError<ApiError>>;
/**
 * action code : 10124 if set NeedVerificationCode = true, IAM will send verification code into email user can use that verification code to verify user through /iam/v3/public/namespaces/{namespace}/users/me/code/verify
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserMeHeadlesVerify_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserMeHeadlesVerifyMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UpgradeHeadlessAccountV3Request;
    queryParams?: {
        needVerificationCode?: boolean | null;
    };
}>, "mutationKey">, callback?: (data: UserResponseV3) => void) => UseMutationResult<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UpgradeHeadlessAccountV3Request;
    queryParams?: {
        needVerificationCode?: boolean | null;
    };
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/bans/{banId} [PATCH]_** **Notes for using IAM in publisher - game studio scenarios** The endpoint allows: - The admin user in publisher namespace disables user’s ban in publisher namespace. - The admin user in game namespace disables user’s ban in game namespace. - The admin user in publisher namespace disables user’s ban in publisher namespace. Other scenarios are not supported and will return 403: Forbidden.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Disable_ByUserId_ByBanId, input]
 * }
 * ```
 */
declare const useUsersApi_UpdateDisable_ByUserId_ByBanIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserBanResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    banId: string;
}>, "mutationKey">, callback?: (data: UserBanResponse) => void) => UseMutationResult<UserBanResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    banId: string;
}>;
/**
 * This endpoint retrieves user info and linked platform accounts. **Authentication:** The _**userId**_ parameter should match the one in the access token.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Information_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetInformation_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<UserInformationV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserInformationV3>) => void) => UseQueryResult<UserInformationV3, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/me/headless/verify [POST]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UpgradeHeadlessAccount_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_UpdateUpgradeHeadlessAccount_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UpgradeHeadlessAccountRequest;
}>, "mutationKey">, callback?: (data: UserResponse) => void) => UseMutationResult<UserResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UpgradeHeadlessAccountRequest;
}>;
/**
 * Endpoint to validate user invitation. When not found, it could also means the invitation has expired.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserInvite_ByInvitationId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetUserInvite_ByInvitationId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    invitationId: string;
}, options?: Omit<UseQueryOptions<UserInvitationV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserInvitationV3>) => void) => UseQueryResult<UserInvitationV3, AxiosError<ApiError>>;
/**
 * This endpoint create user from saved roles when creating invitation and submitted data. User will be able to login after completing submitting the data through this endpoint. Available Authentication Types: EMAILPASSWD: an authentication type used for new user registration through email. **Note**: * **uniqueDisplayName**: this is required when uniqueDisplayNameEnabled/UNIQUE_DISPLAY_NAME_ENABLED is true. Country use ISO3166-1 alpha-2 two letter, e.g. US. Date of Birth format : YYYY-MM-DD, e.g. 2019-04-29.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserInvite_ByInvitationId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserInvite_ByInvitationIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserCreateResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    invitationId: string;
    data: UserCreateRequestV3;
}>, "mutationKey">, callback?: (data: UserCreateResponseV3) => void) => UseMutationResult<UserCreateResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    invitationId: string;
    data: UserCreateRequestV3;
}>;
/**
 * @deprecated
 * List User ID By Platform User ID This endpoint intended to list game user ID from the given namespace This endpoint return list of user ID by given platform ID and list of platform user ID Supported platform: - steam - steamopenid - ps4web - ps4 - ps5 - live - xblweb - oculus - oculusweb - facebook - google - googleplaygames - twitch - discord - apple - device - justice - epicgames - nintendo - awscognito - netflix - snapchat - oidc platform id Note: **nintendo platform user ID**: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.User_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUser_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserPlatforms, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: PlatformUserIdRequest;
    queryParams?: {
        rawPID?: boolean | null;
        rawPUID?: boolean | null;
    };
}>, "mutationKey">, callback?: (data: UserPlatforms) => void) => UseMutationResult<UserPlatforms, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: PlatformUserIdRequest;
    queryParams?: {
        rawPID?: boolean | null;
        rawPUID?: boolean | null;
    };
}>;
/**
 * It is going to be **DEPRECATED**. Update Platform Account relation to current User Account. Note: Game progression data (statistics, reward, etc) associated with previous User Account will not be transferred. If the data is tight to game user ID, the user will have the game progression data. **Authentication:** The _**userId**_ parameter should match the one in the access token.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.PlatformLink_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreatePlatformLink_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: LinkPlatformAccountRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: LinkPlatformAccountRequest;
}>;
/**
 * If validateOnly is set false, consume code and upgrade headless account and automatically verified the email address if it is succeeded The endpoint upgrades a headless account by linking the headless account with the email address and the password. By upgrading the headless account into a full account, the user could use the email address and password for using Justice IAM. The endpoint is a shortcut for upgrading a headless account and verifying the email address in one call. In order to get a verification code for the endpoint, please check the send verification code endpoint. This endpoint also have an ability to update user data (if the user data field is specified) right after the upgrade account process is done. Supported user data fields : - displayName - dateOfBirth : format YYYY-MM-DD, e.g. 2019-04-29 - country : format ISO3166-1 alpha-2 two letter, e.g. US action code : 10124
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserMeHeadlesCodeVerify_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserMeHeadlesCodeVerifyMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UpgradeHeadlessAccountWithVerificationCodeRequestV3;
}>, "mutationKey">, callback?: (data: UserResponseV3) => void) => UseMutationResult<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UpgradeHeadlessAccountWithVerificationCodeRequestV3;
}>;
/**
 * Notes for this endpoint: - This endpoint retrieve the first page of the data if &lt;code&gt;after&lt;/code&gt; and &lt;code&gt;before&lt;/code&gt; parameters is empty. - The maximum value of the limit is 100 and the minimum value of the limit is 1. - This endpoint retrieve the next page of the data if we provide &lt;code&gt;after&lt;/code&gt; parameters with valid Unix timestamp. - This endpoint retrieve the previous page of the data if we provide &lt;code&gt;before&lt;/code&gt; parameter with valid data Unix timestamp. **Authentication:** The _**userId**_ parameter should match the one in the access token.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.LoginsHistories_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetLoginsHistories_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
    queryParams?: {
        after?: number;
        before?: number;
        limit?: number;
    };
}, options?: Omit<UseQueryOptions<LoginHistoriesResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<LoginHistoriesResponse>) => void) => UseQueryResult<LoginHistoriesResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## Supported platforms: - **steam** - **steamopenid** - **facebook** - **google** - **googleplaygames** - **oculus** - **twitch** - **android** - **ios** - **apple** - **device** - **discord** - **awscognito** - **epicgames** - **nintendo** Unlink user&#39;s account from a specific platform. &#39;justice&#39; platform might have multiple accounts from different namespaces linked. _platformNamespace_ need to be specified when the platform ID is &#39;justice&#39;. Unlink user&#39;s account from justice platform will enable password token grant and password update. If you want to unlink user&#39;s account in a game namespace, you have to specify _platformNamespace_ to that game namespace. action code : 10121
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserMePlatform_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_DeleteUserMePlatform_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: UnlinkUserPlatformRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: UnlinkUserPlatformRequest;
}>;
/**
 * **Prerequisite:** Platform client configuration need to be added to database for specific platformId. Namespace service URL need to be specified (refer to required environment variables). ## Supported platforms: - **steam**: The ticket’s value is the binary ticket returned by Steam. - **steamopenid**: Steam&#39;s user authentication method using OpenID 2.0. The ticket&#39;s value is URL generated by Steam on web authentication - **facebook**: The ticket’s value is the authorization code returned by Facebook OAuth - **google**: The ticket’s value is the authorization code returned by Google OAuth - **googleplaygames**: The ticket’s value is the authorization code returned by Google play games OAuth - **oculus**: The ticket’s value is a string composed of Oculus&#39;s user ID and the nonce separated by a colon (:). - **twitch**: The ticket’s value is the authorization code returned by Twitch OAuth. - **android**: The ticket&#39;s value is the Android’s device ID - **ios**: The ticket&#39;s value is the iOS’s device ID. - **apple**: The ticket’s value is the authorization code returned by Apple OAuth. - **device**: Every device that doesn&#39;t run Android and iOS is categorized as a device platform. The ticket&#39;s value is the device’s ID. - **discord**: The ticket’s value is the authorization code returned by Discord OAuth. - **ps4web**: The ticket’s value is the authorization code returned by PSN OAuth. - **ps4**: The ticket’s value is the authorization code returned by PSN OAuth. - **ps5**: The ticket’s value is the authorization code returned by PSN OAuth. - **xblweb**: The ticket’s value is the authorization code returned by XBox Live OAuth. - **live**: The ticket’s value is the XSTS token. - **awscognito**: The ticket’s value is the aws cognito access token (JWT). - **epicgames**: The ticket’s value is an access-token or authorization code obtained from Epicgames EOS Account Service. - **nintendo**: The ticket’s value is the id_token returned by Nintendo OAuth. - **netflix**: The ticket’s value is GAT (Gamer Access Token) returned by Netflix backend. - **snapchat**: The ticket’s value is authorization code returned by Snapchat OAuth. - **for specific generic oauth (OIDC)**: The platform_token’s value should be the same type as created OIDC auth type whether it is auth code, idToken or bearerToken. action code : 10144
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserMePlatform_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_PostUserMePlatform_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: {
        ticket: string | null;
        redirectUri?: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: {
        ticket: string | null;
        redirectUri?: string | null;
    };
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/me/platforms/{platformId} [POST]_** **Prerequisite:** Platform client configuration need to be added to database for specific platformId. Namespace service URL need to be specified (refer to required environment variables). ## Supported platforms: - **steam**: The ticket’s value is the authentication code returned by Steam. - **steamopenid**: Steam&#39;s user authentication method using OpenID 2.0. The ticket&#39;s value is URL generated by Steam on web authentication - **facebook**: The ticket’s value is the authorization code returned by Facebook OAuth - **google**: The ticket’s value is the authorization code returned by Google OAuth - **oculus**: The ticket’s value is a string composed of Oculus&#39;s user ID and the nonce separated by a colon (:). - **twitch**: The ticket’s value is the authorization code returned by Twitch OAuth. - **android**: The ticket&#39;s value is the Android’s device ID - **ios**: The ticket&#39;s value is the iOS’s device ID. - **apple**: The ticket’s value is the authorization code returned by Apple OAuth. - **device**: Every device that does’nt run Android and iOS is categorized as a device platform. The ticket&#39;s value is the device’s ID. - **discord**: The ticket’s value is the authorization code returned by Discord OAuth.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Link_ByUserId_ByPlatformId, input]
 * }
 * ```
 */
declare const useUsersApi_PostLink_ByUserId_ByPlatformIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
    data: {
        ticket: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
    data: {
        ticket: string | null;
    };
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/{userId}/platforms/justice [GET]_** This endpoint gets list justice platform account by providing publisher namespace and publisher userID.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.PlatformsJustice_ByUserId_v2, input]
 * }
 * ```
 */
declare const useUsersApi_GetPlatformsJustice_ByUserId_v2: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<GetUserMappingArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetUserMappingArray>) => void) => UseQueryResult<GetUserMappingArray, AxiosError<ApiError>>;
/**
 * This endpoint retrieves platform accounts linked to user. It will query all linked platform accounts. The results will be distinct and grouped by platform, and for each platform, we will select the oldest linked one. **Authentication:** The _**userId**_ parameter should match the one in the access token.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.DistinctPlatforms_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetDistinctPlatforms_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<DistinctPlatformResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<DistinctPlatformResponseV3>) => void) => UseQueryResult<DistinctPlatformResponseV3, AxiosError<ApiError>>;
/**
 * This endpoint gets list justice platform account by providing publisher namespace and publisher userID. **Authentication:** The _**userId**_ parameter should match the one in the access token.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.PlatformsJustice_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetPlatformsJustice_ByUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<GetUserMappingV3Array, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetUserMappingV3Array>) => void) => UseQueryResult<GetUserMappingV3Array, AxiosError<ApiError>>;
/**
 * This endpoint is used to get linking status. This API need logged user and user can only request its own linking status.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.AsyncStatus_ByRequestId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetAsyncStatus_ByRequestId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    requestId: string;
}, options?: Omit<UseQueryOptions<LinkRequest, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<LinkRequest>) => void) => UseQueryResult<LinkRequest, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/me/platforms/{platformId} [DELETE]_** - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/me/platforms/{platformId}/all [DELETE]_** ## Supported platforms: - **steam** - **steamopenid** - **facebook** - **google** - **oculus** - **twitch** - **android** - **ios** - **device** - **justice**: A user might have several &#39;justice’ platform on different namespaces. That’s why the platform_namespace need to be specified when the platform ID is ‘justice’. The platform_namespace is the designated user’s namespace. Unlink user&#39;s account with platform. &#39;justice&#39; platform might have multiple accounts from different namespaces linked. platform_namespace need to be specified when the platform ID is &#39;justice&#39;. Unlinking justice platform will enable password token grant and password update.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Unlink_ByUserId_ByPlatformId, input]
 * }
 * ```
 */
declare const useUsersApi_PostUnlink_ByUserId_ByPlatformIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
    data: {
        platform_namespace?: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
    data: {
        platform_namespace?: string | null;
    };
}>;
/**
 * Unlink user&#39;s account from third platform in all namespaces. Several platforms are grouped under account groups, you can use either platform ID or platform group as platformId path parameter. example: to unlink steam third party account, you can use steamnetwork / steam / steamopenid as platformId path parameter. **Supported Platforms:** - Steam group (steamnetwork): - steam - steamopenid - PSN group (psn): - ps4web - ps4 - ps5 - XBOX group(xbox): - live - xblweb - Oculus group (oculusgroup): - oculus - oculusweb - Google group (google): - google - googleplaygames: - epicgames - facebook - twitch - discord - android - ios - apple - device - nintendo - awscognito - amazon - netflix - snapchat - _oidc platform id_ Note: - You can use either platform id or platform group as **platformId** parameter. - **Nintendo platform user id**: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1 Unlink platform account associated with a group: If user unlink platform account associated with a group, the API logic will unlink all of platform account under that group as well. example: if user unlink from ps4, the API logic will unlink ps5 and ps4web as well
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.AllMeUser_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_DeleteAllMeUser_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/permissions/{resource}/{action} [DELETE]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Permission_ByUserId_ByResource_ByAction, input]
 * }
 * ```
 */
declare const useUsersApi_DeletePermission_ByUserId_ByResource_ByActionMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    resource: string;
    action: number;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    resource: string;
    action: number;
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/permissions [POST]_** This endpoint will update existing permission (bitwise OR the action) if found one with same resource, otherwise it will append a new permission Schedule contains cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect. Both schedule types accepts quartz compatible cron syntax e.g. * * * * * * *. In ranged schedule, first element will be start date, and second one will be end date If schedule is set, the scheduled action must be valid too, that is between 1 to 15, inclusive Syntax reference Fields: 1. Seconds: 0-59 * / , - 2. Minutes: 0-59 * / , - 3. Hours: 0-23 * / , - 4. Day of month: 1-31 * / , - L W 5. Month: 1-12 JAN-DEC * / , - 6. Day of week: 0-6 SUN-SAT * / , - L # 7. Year: 1970-2099 * / , - Special characters: 1. *: all values in the fields, e.g. * in seconds fields indicates every second 2. /: increments of ranges, e.g. 3-59/15 in the minute field indicate the third minute of the hour and every 15 minutes thereafter 3. ,: separate items of a list, e.g. MON,WED,FRI in day of week 4. -: range, e.g. 2010-2018 indicates every year between 2010 and 2018, inclusive 5. L: last, e.g. When used in the day-of-week field, it allows you to specify constructs such as &#34;the last Friday&#34; (5L) of a given month. In the day-of-month field, it specifies the last day of the month. 6. W: business day, e.g. if you were to specify 15W as the value for the day-of-month field, the meaning is: &#34;the nearest business day to the 15th of the month.&#34; 7. #: must be followed by a number between one and five. It allows you to specify constructs such as &#34;the second Friday&#34; of a given month.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Permission_ByUserId_ByResource_ByAction, input]
 * }
 * ```
 */
declare const useUsersApi_UpdatePermission_ByUserId_ByResource_ByActionMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    resource: string;
    action: number;
    data: UpdatePermissionScheduleRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    resource: string;
    action: number;
    data: UpdatePermissionScheduleRequest;
}>;
/**
 * Force linking user account with platform. If this platform account was already linked to another user account, this endpoint will perform force linking and remove platform from that conflict user, not only from the current request namespace but also include all the enrolled namespaces. If current user have linked to this platform with another platform account (include once linked but it is unlinked now), it will not allow user to perform linking. ## Supported platforms: - **steam**: The platform_token’s value is the binary ticket returned by Steam. - **steamopenid**: Steam&#39;s user authentication method using OpenID 2.0. The platform_token&#39;s value is URL generated by Steam on web authentication - **facebook**: The platform_token’s value is the authorization code returned by Facebook OAuth - **google**: The platform_token’s value is the authorization code returned by Google OAuth - **googleplaygames**: The platform_token’s value is the authorization code returned by Google play games OAuth - **oculus**: The platform_token’s value is a string composed of Oculus&#39;s user ID and the nonce separated by a colon (:). - **twitch**: The platform_token’s value is the authorization code returned by Twitch OAuth. - **discord**: The platform_token’s value is the authorization code returned by Discord OAuth - **android**: The device_id is the Android’s device ID - **ios**: The device_id is the iOS’s device ID. - **apple**: The platform_token’s value is the authorization code returned by Apple OAuth.(We will use this code to generate APP token) - **device**: Every device that does’nt run Android and iOS is categorized as a device. The device_id is the device’s ID. - **justice**: The platform_token’s value is the designated user’s access token. - **epicgames**: The platform_token’s value is an access-token obtained from Epicgames EOS Account Service. - **ps4**: The platform_token’s value is the authorization code returned by Sony OAuth. - **ps5**: The platform_token’s value is the authorization code returned by Sony OAuth. - **nintendo**: The platform_token’s value is the id_token returned by Nintendo OAuth. - **awscognito**: The platform_token’s value is the aws cognito access token or id token (JWT). - **live**: The platform_token’s value is xbox XSTS token - **xblweb**: The platform_token’s value is code returned by xbox after login - **netflix**: The platform_token’s value is GAT (Gamer Access Token) returned by Netflix backend - **snapchat**: The platform_token’s value is the authorization code returned by Snapchat OAuth. - **for specific generic oauth (OIDC)**: The platform_token’s value should be the same type as created OIDC auth type whether it is auth code, idToken or bearerToken.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.ForceMeUser_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_PostForceMeUser_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: {
        ticket: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: {
        ticket: string | null;
    };
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/agerestrictions/countries/{countryCode} [GET]_**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Agerestrictions_ByCountryCode_v2, input]
 * }
 * ```
 */
declare const useUsersApi_GetAgerestrictions_ByCountryCode_v2: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    countryCode: string;
}, options?: Omit<UseQueryOptions<Country, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<Country>) => void) => UseQueryResult<Country, AxiosError<ApiError>>;
/**
 * Get age restriction by country code. It will always get by publisher namespace
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.AgerestrictionCountry_ByCountryCode_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetAgerestrictionCountry_ByCountryCode_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    countryCode: string;
}, options?: Omit<UseQueryOptions<CountryV3Response, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<CountryV3Response>) => void) => UseQueryResult<CountryV3Response, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/platforms/justice/{targetNamespace} [GET]_** This endpoint requires the client access token as the bearer token This endpoint will support publisher access to game and game access to publisher If targetNamespace filled with publisher namespace then this endpoint will return its publisher user id and publisher namespace. If targetNamespace filled with game namespace then this endpoint will return its game user id and game namespace. **Will create game user id if not exists.**
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.PlatformJustice_ByUserId_ByTargetNamespace, input]
 * }
 * ```
 */
declare const useUsersApi_GetPlatformJustice_ByUserId_ByTargetNamespace: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
    targetNamespace: string;
}, options?: Omit<UseQueryOptions<GetUserMapping, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<GetUserMapping>) => void) => UseQueryResult<GetUserMapping, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/admin/namespaces/{namespace}/users/{userId}/platforms/justice/{targetNamespace} [GET]_** This endpoint requires the client access token as the bearer token The endpoint returns user Justice platform account linked with the given user. If the user Justice platform account doesn&#39;t exist in the designated namespace, the endpoint is going to *create and return the new Justice platform account.* The newly user Justice platform account is going to be forced to perform token grant through the given user and can&#39;t perform password update ### Read Justice Platform Account UserID Without permission the UserID is going to be censored and replaced with “Redacted” text.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.PlatformJustice_ByUserId_ByTargetNamespace, input]
 * }
 * ```
 */
declare const useUsersApi_UpdatePlatformJustice_ByUserId_ByTargetNamespaceMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<GetUserJusticePlatformAccountResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    targetNamespace: string;
}>, "mutationKey">, callback?: (data: GetUserJusticePlatformAccountResponse) => void) => UseMutationResult<GetUserJusticePlatformAccountResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    targetNamespace: string;
}>;
/**
 * This endpoint is used to generate third party login page which will redirected to establish endpoint. Supported platforms: - ps4web - xblweb - steamopenid - epicgames - facebook - twitch - google - apple - snapchat - discord - amazon - oculusweb
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.WebLinkMeUsers_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetWebLinkMeUsers_ByPlatformId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    platformId: string;
    queryParams?: {
        clientId?: string | null;
        redirectUri?: string | null;
    };
}, options?: Omit<UseQueryOptions<WebLinkingResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<WebLinkingResponse>) => void) => UseQueryResult<WebLinkingResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/me/platforms/{platformId} [DELETE]_** - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/me/platforms/{platformId}/all [DELETE]_** ## Supported platforms: - **steam** - **steamopenid** - **facebook** - **google** - **oculus** - **twitch** - **android** - **ios** - **device** - **discord** Delete link of user&#39;s account with platform. &#39;justice&#39; platform might have multiple accounts from different namespaces linked. platform_namespace need to be specified when the platform ID is &#39;justice&#39;. Delete link of justice platform will enable password token grant and password update.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Link_ByUserId_ByPlatformId_v2, input]
 * }
 * ```
 */
declare const useUsersApi_DeleteLink_ByUserId_ByPlatformIdMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
    data: {
        platform_namespace?: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
    data: {
        platform_namespace?: string | null;
    };
}>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated **Endpoint migration guide** - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/me/platforms/{platformId} [POST]_** **Prerequisite:** Platform client configuration need to be added to database for specific platformId. Namespace service URL need to be specified (refer to required environment variables). ## Supported platforms: - **steam**: The ticket’s value is the authentication code returned by Steam. - **steamopenid**: Steam&#39;s user authentication method using OpenID 2.0. The ticket&#39;s value is URL generated by Steam on web authentication - **facebook**: The ticket’s value is the authorization code returned by Facebook OAuth - **google**: The ticket’s value is the authorization code returned by Google OAuth - **oculus**: The ticket’s value is a string composed of Oculus&#39;s user ID and the nonce separated by a colon (:). - **twitch**: The ticket’s value is the authorization code returned by Twitch OAuth. - **android**: The ticket&#39;s value is the Android’s device ID - **ios**: The ticket&#39;s value is the iOS’s device ID. - **device**: Every device that doesn&#39;t run Android and iOS is categorized as a device platform. The ticket&#39;s value is the device’s ID. - **discord**: The ticket’s value is the authorization code returned by Discord OAuth.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.Link_ByUserId_ByPlatformId_v2, input]
 * }
 * ```
 */
declare const useUsersApi_PostLink_ByUserId_ByPlatformIdMutation_v2: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
    data: {
        ticket: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    platformId: string;
    data: {
        ticket: string | null;
    };
}>;
/**
 * Force update other account&#39;s Platform Account relation to current User Account. This endpoint can transfer progression from 3rd platform binding account&#39;s to current account. This endpoint need the same requestID which also used in [Get link status](#operations-Users-PublicGetAsyncStatus). **Authentication:** The _**userId**_ parameter should match the one in the access token.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.PlatformLinkWithProgression_ByUserId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreatePlatformLinkWithProgression_ByUserIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: LinkPlatformAccountWithProgressionRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: LinkPlatformAccountWithProgressionRequest;
}>;
/**
 * Create Justice User from Publisher User information. It will check first if Justice User on target namespace already exist.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UserMePlatformJustice_ByTargetNamespace_v3, input]
 * }
 * ```
 */
declare const useUsersApi_CreateUserMePlatformJustice_ByTargetNamespaceMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<CreateJusticeUserResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    targetNamespace: string;
}>, "mutationKey">, callback?: (data: CreateJusticeUserResponse) => void) => UseMutationResult<CreateJusticeUserResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    targetNamespace: string;
}>;
/**
 * Get User By Platform User ID. This endpoint return user information by given platform ID and platform user ID. Several platforms are grouped under account groups, you can use either platform ID or platform group as platformId path parameter. example: for steam network platform, you can use steamnetwork / steam / steamopenid as platformId path parameter. **Supported Platforms:** - Steam group (steamnetwork): - steam - steamopenid - PSN group (psn): - ps4web - ps4 - ps5 - XBOX group(xbox): - live - xblweb - Oculus group (oculusgroup): - oculus - oculusweb - Google group (google): - google - googleplaygames: - epicgames - facebook - twitch - discord - android - ios - apple - device - nintendo - awscognito - amazon - netflix - snapchat - _oidc platform id_ Note: - You can use either platform id or platform group as **platformId** parameter. - **Nintendo platform user id**: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.User_ByPlatformId_ByPlatformUserId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetUser_ByPlatformId_ByPlatformUserId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    platformId: string;
    platformUserId: string;
}, options?: Omit<UseQueryOptions<UserResponseV3, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserResponseV3>) => void) => UseQueryResult<UserResponseV3, AxiosError<ApiError>>;
/**
 * @deprecated
 * ## The endpoint is going to be deprecated ### Endpoint migration guide - **Substitute endpoint: _/iam/v3/public/namespaces/{namespace}/users/me/headless/code/verify [POST]_** The endpoint upgrades a headless account by linking the headless account with the email address and the password. By upgrading the headless account into a full account, the user could use the email address and password for using Justice IAM. The endpoint is a shortcut for upgrading a headless account and verifying the email address in one call. In order to get a verification code for the endpoint, please check the send verification code endpoint.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.UpgradeHeadlessAccountWithVerificationCode_ByUserId, input]
 * }
 * ```
 */
declare const useUsersApi_UpdateUpgradeHeadlessAccountWithVerificationCode_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UpgradeHeadlessAccountWithVerificationCodeRequest;
}>, "mutationKey">, callback?: (data: UserResponse) => void) => UseMutationResult<UserResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UpgradeHeadlessAccountWithVerificationCodeRequest;
}>;
/**
 * This endpoint is used to process third party account link, this endpoint will return the link status directly instead of redirecting to the original page. The param **state** comes from the response of &lt;code&gt;/users/me/platforms/{platformId}/web/link&lt;/code&gt; Supported platforms: - ps4web - xblweb - steamopenid - epicgames - facebook - twitch - google - apple - snapchat - discord - amazon - oculusweb
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.WebLinkProcesMeUser_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_PostWebLinkProcesMeUser_ByPlatformIdMutation_v3: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<LinkRequest, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: {
        state: string | null;
        code?: string | null;
    };
}>, "mutationKey">, callback?: (data: LinkRequest) => void) => UseMutationResult<LinkRequest, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: {
        state: string | null;
        code?: string | null;
    };
}>;
/**
 * This endpoint is used by third party to redirect the code for the purpose of linking the account third party to IAM account. Supported platforms: - ps4web - xblweb - steamopenid - epicgames - facebook - twitch - google - apple - snapchat - discord - amazon - oculusweb
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Users.WebLinkEstablishMeUsers_ByPlatformId_v3, input]
 * }
 * ```
 */
declare const useUsersApi_GetWebLinkEstablishMeUsers_ByPlatformId_v3: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    platformId: string;
    queryParams: {
        state: string | null;
        code?: string | null;
    };
}, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;

/**
 * AUTO GENERATED
 */

declare enum Key_UsersV4 {
    UserInvite_v4 = "Iam.UsersV4.UserInvite_v4",
    User_v4 = "Iam.UsersV4.User_v4",
    UserMe_v4 = "Iam.UsersV4.UserMe_v4",
    TestUser_v4 = "Iam.UsersV4.TestUser_v4",
    User_ByUserId_v4 = "Iam.UsersV4.User_ByUserId_v4",
    UserMeEmail_v4 = "Iam.UsersV4.UserMeEmail_v4",
    UserMeMfaDevice_v4 = "Iam.UsersV4.UserMeMfaDevice_v4",
    UsersMeMfaFactor_v4 = "Iam.UsersV4.UsersMeMfaFactor_v4",
    UserMeMfaFactor_v4 = "Iam.UsersV4.UserMeMfaFactor_v4",
    UsersMeMfaStatus_v4 = "Iam.UsersV4.UsersMeMfaStatus_v4",
    UserMeMfaStatus_v4 = "Iam.UsersV4.UserMeMfaStatus_v4",
    UsersMeMfaBackupCode_v4 = "Iam.UsersV4.UsersMeMfaBackupCode_v4",
    UserMeMfaBackupCode_v4 = "Iam.UsersV4.UserMeMfaBackupCode_v4",
    UserMeMfaEmailCode_v4 = "Iam.UsersV4.UserMeMfaEmailCode_v4",
    UserMeHeadlesVerify_v4 = "Iam.UsersV4.UserMeHeadlesVerify_v4",
    UsersMeMfaBackupCodes_v4 = "Iam.UsersV4.UsersMeMfaBackupCodes_v4",
    UserMeMfaBackupCode_ByNS_v4 = "Iam.UsersV4.UserMeMfaBackupCode_ByNS_v4",
    UserMeMfaEmailEnable_v4 = "Iam.UsersV4.UserMeMfaEmailEnable_v4",
    UserMeMfaEmailDisable_v4 = "Iam.UsersV4.UserMeMfaEmailDisable_v4",
    UserInvite_ByInvitationId_v4 = "Iam.UsersV4.UserInvite_ByInvitationId_v4",
    User_ByPlatformId_v4 = "Iam.UsersV4.User_ByPlatformId_v4",
    UserMeHeadlesCodeVerify_v4 = "Iam.UsersV4.UserMeHeadlesCodeVerify_v4",
    UserMeMfaChallengeVerify_v4 = "Iam.UsersV4.UserMeMfaChallengeVerify_v4",
    UserMeMfaAuthenticatorKey_v4 = "Iam.UsersV4.UserMeMfaAuthenticatorKey_v4",
    UserMeMfaBackupCodeEnable_v4 = "Iam.UsersV4.UserMeMfaBackupCodeEnable_v4",
    UserMeMfaBackupCodeDisable_v4 = "Iam.UsersV4.UserMeMfaBackupCodeDisable_v4",
    UserMeMfaBackupCodeEnable_ByNS_v4 = "Iam.UsersV4.UserMeMfaBackupCodeEnable_ByNS_v4",
    UsersMeMfaBackupCodeDownload_v4 = "Iam.UsersV4.UsersMeMfaBackupCodeDownload_v4",
    UserMeMfaAuthenticatorEnable_v4 = "Iam.UsersV4.UserMeMfaAuthenticatorEnable_v4",
    UserMeMfaAuthenticatorDisable_v4 = "Iam.UsersV4.UserMeMfaAuthenticatorDisable_v4"
}
/**
 * This endpoint is used to invite a game studio admin user with new namespace in multi tenant mode. It will return error if the service multi tenant mode is set to false. Request body details: - emailAddress: email address of the user to be invited - namespace: new namespace of the user to be created - namespaceDisplayName: display name of the new namespace - additionalData(optional): for utm parameter data The invited users will also be assigned with &#34;User&#34; role by default.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserInvite_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_CreateUserInviteMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<InviteUserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: PublicInviteUserRequestV4;
}>, "mutationKey">, callback?: (data: InviteUserResponseV3) => void) => UseMutationResult<InviteUserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: PublicInviteUserRequestV4;
}>;
/**
 * Create a new user with unique email address and username. **Required attributes:** - authType: possible value is EMAILPASSWD - emailAddress: Please refer to the rule from /v3/public/inputValidations API. - username: Please refer to the rule from /v3/public/inputValidations API. - password: Please refer to the rule from /v3/public/inputValidations API. - country: ISO3166-1 alpha-2 two letter, e.g. US. - dateOfBirth: YYYY-MM-DD, e.g. 1990-01-01. valid values are between 1905-01-01 until current date. - uniqueDisplayName: required when uniqueDisplayNameEnabled/UNIQUE_DISPLAY_NAME_ENABLED is true, please refer to the rule from /v3/public/inputValidations API. - code: required when mandatoryEmailVerificationEnabled config is true, please refer to the config from /iam/v3/public/namespaces/{namespace}/config/{configKey} [GET] API. **Not required attributes:** - displayName: Please refer to the rule from /v3/public/inputValidations API. This endpoint support accepting agreements for the created user. Supply the accepted agreements in acceptedPolicies attribute.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.User_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_CreateUserMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<CreateUserResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    data: CreateUserRequestV4;
}>, "mutationKey">, callback?: (data: CreateUserResponseV4) => void) => UseMutationResult<CreateUserResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    data: CreateUserRequestV4;
}>;
/**
 * This Endpoint support update user based on given data. **Single request can update single field or multi fields.** Supported field {country, displayName, languageTag, dateOfBirth, avatarUrl, userName} Country use ISO3166-1 alpha-2 two letter, e.g. US. Date of Birth format : YYYY-MM-DD, e.g. 2019-04-29. **Response body logic when user updating email address:** - User want to update email address of which have been verified, newEmailAddress response field will be filled with new email address. - User want to update email address of which have not been verified, { oldEmailAddress, emailAddress} response field will be filled with new email address. - User want to update email address of which have been verified and updated before, { oldEmailAddress, emailAddress} response field will be filled with verified email before. newEmailAddress response field will be filled with newest email address. action code : 10103
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMe_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_PatchUserMeMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: PublicUserUpdateRequestV3;
}>, "mutationKey">, callback?: (data: UserResponseV3) => void) => UseMutationResult<UserResponseV3, AxiosError<ApiError>, SdkSetConfigParam & {
    data: PublicUserUpdateRequestV3;
}>;
/**
 * Create a test user and not send verification code email **Required attributes:** - verified: this new user is verified or not - authType: possible value is EMAILPASSWD - emailAddress: Please refer to the rule from /v3/public/inputValidations API. - username: Please refer to the rule from /v3/public/inputValidations API. - password: Please refer to the rule from /v3/public/inputValidations API. - country: ISO3166-1 alpha-2 two letter, e.g. US. - dateOfBirth: YYYY-MM-DD, e.g. 1990-01-01. valid values are between 1905-01-01 until current date. **Not required attributes:** - displayName: Please refer to the rule from /v3/public/inputValidations API. This endpoint support accepting agreements for the created user. Supply the accepted agreements in acceptedPolicies attribute.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.TestUser_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_CreateTestUserMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<CreateUserResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    data: CreateTestUserRequestV4;
}>, "mutationKey">, callback?: (data: CreateUserResponseV4) => void) => UseMutationResult<CreateUserResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    data: CreateTestUserRequestV4;
}>;
/**
 * This endpoint only returns user&#39;s public information. action code: 10129
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.User_ByUserId_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_GetUser_ByUserId_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<UserPublicInfoResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserPublicInfoResponseV4>) => void) => UseQueryResult<UserPublicInfoResponseV4, AxiosError<ApiError>>;
/**
 * The endpoint to update my email address. It requires a verification code from &lt;code&gt;/users/me/code/request&lt;/code&gt; with **UpdateEmailAddress** context.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeEmail_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_UpdateUserMeEmailMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: EmailUpdateRequestV4;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: EmailUpdateRequestV4;
}>;
/**
 * (Only for test)This endpoint is used to remove trusted device. This endpoint Requires device_token in cookie
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeMfaDevice_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_DeleteUserMeMfaDeviceMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam>;
/**
 * This endpoint is used to get user enabled factors.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UsersMeMfaFactor_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_GetUsersMeMfaFactor_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<EnabledFactorsResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<EnabledFactorsResponseV4>) => void) => UseQueryResult<EnabledFactorsResponseV4, AxiosError<ApiError>>;
/**
 * This endpoint is used to make 2FA factor default.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeMfaFactor_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_PostUserMeMfaFactorMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        factor: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        factor: string | null;
    };
}>;
/**
 * This endpoint will get user&#39;s&#39; MFA status.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UsersMeMfaStatus_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_GetUsersMeMfaStatus_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<UserMfaStatusResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserMfaStatusResponseV4>) => void) => UseQueryResult<UserMfaStatusResponseV4, AxiosError<ApiError>>;
/**
 * @deprecated
 * This endpoint will get user&#39;s&#39; MFA status. --------- **Substitute endpoint**: /iam/v4/public/namespaces/{namespace}/users/me/mfa/status [GET]
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeMfaStatus_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_CreateUserMeMfaStatusMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserMfaStatusResponseV4, AxiosError<ApiError>, SdkSetConfigParam>, "mutationKey">, callback?: (data: UserMfaStatusResponseV4) => void) => UseMutationResult<UserMfaStatusResponseV4, AxiosError<ApiError>, SdkSetConfigParam>;
/**
 * @deprecated
 * This endpoint is used to get 8-digits backup codes. Each code is a one-time code and will be deleted once used.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UsersMeMfaBackupCode_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_GetUsersMeMfaBackupCode_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<BackupCodesResponseV4, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<BackupCodesResponseV4>) => void) => UseQueryResult<BackupCodesResponseV4, AxiosError<ApiError>>;
/**
 * @deprecated
 * This endpoint is used to generate 8-digits backup codes. Each code is a one-time code and will be deleted once used.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeMfaBackupCode_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_CreateUserMeMfaBackupCodeMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<BackupCodesResponseV4, AxiosError<ApiError>, SdkSetConfigParam>, "mutationKey">, callback?: (data: BackupCodesResponseV4) => void) => UseMutationResult<BackupCodesResponseV4, AxiosError<ApiError>, SdkSetConfigParam>;
/**
 * This endpoint is used to send email code. ---------------- Supported values of action: * ChangePassword * DisableMFAEmail
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeMfaEmailCode_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_PostUserMeMfaEmailCodeMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        action?: string | null;
        languageTag?: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        action?: string | null;
        languageTag?: string | null;
    };
}>;
/**
 * Upgrade headless account to full account without verifying email address. Client does not need to provide verification code which sent to email address. action code : 10124
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeHeadlesVerify_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_CreateUserMeHeadlesVerifyMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UpgradeHeadlessAccountRequestV4;
}>, "mutationKey">, callback?: (data: UserResponseV4) => void) => UseMutationResult<UserResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UpgradeHeadlessAccountRequestV4;
}>;
/**
 * This endpoint is used to get existing 8-digits backup codes. Each codes is a one-time code and will be deleted once used. The codes will be sent through linked email.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UsersMeMfaBackupCodes_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_GetUsersMeMfaBackupCodes_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        languageTag?: string | null;
    };
}, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * This endpoint is used to generate 8-digits backup codes. Each codes is a one-time code and will be deleted once used. The codes will be sent through linked email.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeMfaBackupCode_ByNS_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_CreateUserMeMfaBackupCode_ByNSMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    queryParams?: {
        languageTag?: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    queryParams?: {
        languageTag?: string | null;
    };
}>;
/**
 * This endpoint is used to enable 2FA email.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeMfaEmailEnable_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_PostUserMeMfaEmailEnableMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code: string | null;
    };
}>;
/**
 * This endpoint is used to disable 2FA email. ------ **Note**: **mfaToken** is required when all the following are enabled: - The environment variable **SENSITIVE_MFA_AUTH_ENABLED** is true - The **Two-Factor Authentication** is enabled in the IAM client where user logs in - Users already enabled the MFA
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeMfaEmailDisable_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_CreateUserMeMfaEmailDisableMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: DisableMfaRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: DisableMfaRequest;
}>;
/**
 * This endpoint create user from saved roles when creating invitation and submitted data. User will be able to login after completing submitting the data through this endpoint. Available Authentication Types: EMAILPASSWD: an authentication type used for new user registration through email. **Note**: * **uniqueDisplayName**: this is required when uniqueDisplayNameEnabled/UNIQUE_DISPLAY_NAME_ENABLED is true. Country use ISO3166-1 alpha-2 two letter, e.g. US. Date of Birth format : YYYY-MM-DD, e.g. 2019-04-29. Required attributes: - authType: possible value is EMAILPASSWD (see above) - country: ISO3166-1 alpha-2 two letter, e.g. US. - dateOfBirth: YYYY-MM-DD, e.g. 1990-01-01. valid values are between 1905-01-01 until current date. - displayName: Please refer to the rule from /v3/public/inputValidations API. - password: Please refer to the rule from /v3/public/inputValidations API. - username: Please refer to the rule from /v3/public/inputValidations API.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserInvite_ByInvitationId_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_CreateUserInvite_ByInvitationIdMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<CreateUserResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    invitationId: string;
    data: CreateUserRequestV4;
}>, "mutationKey">, callback?: (data: CreateUserResponseV4) => void) => UseMutationResult<CreateUserResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    invitationId: string;
    data: CreateUserRequestV4;
}>;
/**
 * List User ID By Platform User ID This endpoint intended to list game user ID from the given namespace This endpoint return list of user ID by given platform ID and list of platform user ID, the max count is 100. Supported platform: - steam - steamopenid - ps4web - ps4 - ps5 - live - xblweb - oculus - oculusweb - facebook - google - googleplaygames - twitch - discord - apple - device - justice - epicgames - nintendo - awscognito - netflix - snapchat - oidc platform id Note: **nintendo platform user ID**: NSA ID need to be appended with Environment ID using colon as separator. e.g kmzwa8awaa:dd1 &lt;br&gt; If the request body exceed the max limitation, the max count will be in response body&#39;s messageVariables: &#34;messageVariables&#34;: {&#34;maxCount&#34;: &#34;100&#34;}
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.User_ByPlatformId_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_CreateUser_ByPlatformIdMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserPlatforms, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: PlatformUserIdRequestV4;
    queryParams?: {
        rawPUID?: boolean | null;
    };
}>, "mutationKey">, callback?: (data: UserPlatforms) => void) => UseMutationResult<UserPlatforms, AxiosError<ApiError>, SdkSetConfigParam & {
    platformId: string;
    data: PlatformUserIdRequestV4;
    queryParams?: {
        rawPUID?: boolean | null;
    };
}>;
/**
 *  The endpoint upgrades a headless account by linking the headless account with the email address, username, and password. By upgrading the headless account into a full account, the user could use the email address, username, and password for using Justice IAM. The endpoint is a shortcut for upgrading a headless account and verifying the email address in one call. In order to get a verification code for the endpoint, please check the [send verification code endpoint](#operations-Users-PublicSendVerificationCodeV3). This endpoint also have an ability to update user data (if the user data field is specified) right after the upgrade account process is done. Supported user data fields: - displayName - dateOfBirth : format YYYY-MM-DD, e.g. 2019-04-29 - country : format ISO3166-1 alpha-2 two letter, e.g. US action code : 10124
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeHeadlesCodeVerify_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_CreateUserMeHeadlesCodeVerifyMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UpgradeHeadlessAccountWithVerificationCodeRequestV4;
}>, "mutationKey">, callback?: (data: UserResponseV4) => void) => UseMutationResult<UserResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UpgradeHeadlessAccountWithVerificationCodeRequestV4;
}>;
/**
 * This endpoint will verify user&#39;s&#39; MFA code and generate a MFA token for the action.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeMfaChallengeVerify_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_PostUserMeMfaChallengeVerifyMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserMfaTokenResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code?: string | null;
        factor?: string | null;
    };
}>, "mutationKey">, callback?: (data: UserMfaTokenResponseV4) => void) => UseMutationResult<UserMfaTokenResponseV4, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code?: string | null;
        factor?: string | null;
    };
}>;
/**
 * This endpoint is used to generate a secret key for 3rd-party authenticator app. A QR code URI is also returned so that frontend can generate QR code image.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeMfaAuthenticatorKey_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_CreateUserMeMfaAuthenticatorKeyMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<AuthenticatorKeyResponseV4, AxiosError<ApiError>, SdkSetConfigParam>, "mutationKey">, callback?: (data: AuthenticatorKeyResponseV4) => void) => UseMutationResult<AuthenticatorKeyResponseV4, AxiosError<ApiError>, SdkSetConfigParam>;
/**
 * @deprecated
 * This endpoint is used to enable 2FA backup codes.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeMfaBackupCodeEnable_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_CreateUserMeMfaBackupCodeEnableMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<BackupCodesResponseV4, AxiosError<ApiError>, SdkSetConfigParam>, "mutationKey">, callback?: (data: BackupCodesResponseV4) => void) => UseMutationResult<BackupCodesResponseV4, AxiosError<ApiError>, SdkSetConfigParam>;
/**
 * This endpoint is used to disable 2FA backup codes. ------ **Note**: **mfaToken** is required when all the following are enabled: - The environment variable **SENSITIVE_MFA_AUTH_ENABLED** is true - The **Two-Factor Authentication** is enabled in the IAM client where user logs in - Users already enabled the MFA
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeMfaBackupCodeDisable_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_DeleteUserMeMfaBackupCodeDisableMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: DisableMfaRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: DisableMfaRequest;
}>;
/**
 * This endpoint is used to enable 2FA backup codes.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeMfaBackupCodeEnable_ByNS_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_CreateUserMeMfaBackupCodeEnable_ByNSMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    queryParams?: {
        languageTag?: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    queryParams?: {
        languageTag?: string | null;
    };
}>;
/**
 * @deprecated
 * This endpoint is used to download backup codes.
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UsersMeMfaBackupCodeDownload_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_GetUsersMeMfaBackupCodeDownload_v4: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * This endpoint is used to enable 2FA authenticator. ---------- Prerequisites: - Generate the secret key/QR code uri by **_/iam/v4/public/namespaces/{namespace}/users/me/mfa/authenticator/key_** - Consume the secret key/QR code by an authenticator app - Get the code from the authenticator app
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeMfaAuthenticatorEnable_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_PostUserMeMfaAuthenticatorEnableMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code: string | null;
    };
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: {
        code: string | null;
    };
}>;
/**
 * This endpoint is used to disable 2FA authenticator. ------ **Note**: **mfaToken** is required when all the following are enabled: - The environment variable **SENSITIVE_MFA_AUTH_ENABLED** is true - The **Two-Factor Authentication** is enabled in the IAM client where user logs in - Users already enabled the MFA
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UsersV4.UserMeMfaAuthenticatorDisable_v4, input]
 * }
 * ```
 */
declare const useUsersV4Api_DeleteUserMeMfaAuthenticatorDisableMutation_v4: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: DisableMfaRequest;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: DisableMfaRequest;
}>;

export { Key_Bans, Key_BansAdmin, Key_Clients, Key_ClientsAdmin, Key_ClientsConfigV3Admin, Key_Config, Key_ConfigAdmin, Key_Country, Key_CountryAdmin, Key_DevicesV4Admin, Key_InputValidations, Key_InputValidationsAdmin, Key_LoginAllowlistAdmin, Key_OAuth, Key_OAuth20, Key_OAuth20Admin, Key_OAuth20Extension, Key_OAuth20V4, Key_OverrideRoleConfigV3Admin, Key_ProfileUpdateStrategy, Key_ProfileUpdateStrategyAdmin, Key_Roles, Key_RolesAdmin, Key_Sso, Key_SsoCredentialAdmin, Key_SsoSaml20, Key_ThirdPartyCredential, Key_ThirdPartyCredentialAdmin, Key_Users, Key_UsersAdmin, Key_UsersV4, Key_UsersV4Admin, useBansAdminApi_CreateBanUserMutation_v3, useBansAdminApi_GetBansReasons_v3, useBansAdminApi_GetBansUsers_v3, useBansAdminApi_GetBans_v3, useBansAdminApi_GetBantypes_v3, useBansAdminApi_PatchBanUserDisabledMutation_v3, useBansApi_GetBans, useBansApi_GetBansReasons, useClientsAdminApi_CreateClientMutation_v3, useClientsAdminApi_DeleteClient_ByClientIdMutation_v3, useClientsAdminApi_DeletePermission_ByClientId_ByResource_ByActionMutation_v3, useClientsAdminApi_GetClient_ByClientId_v3, useClientsAdminApi_GetClients_v3, useClientsAdminApi_PatchClient_ByClientIdMutation_v3, useClientsAdminApi_UpdateClientMutation_v3, useClientsAdminApi_UpdatePermission_ByClientIdMutation_v3, useClientsAdminApi_UpdatePermission_ByClientId_ByNSMutation_v3, useClientsAdminApi_UpdateSecret_ByClientIdMutation_v3, useClientsApi_CreateClientMutation, useClientsApi_CreateClient_ByNSMutation, useClientsApi_DeleteClient_ByClientIdMutation, useClientsApi_DeleteClient_ByClientId_ByNSMutation, useClientsApi_DeleteClientpermission_ByClientId_ByResource_ByActionMutation, useClientsApi_GetClient_ByClientId, useClientsApi_GetClients, useClientsApi_GetClients_ByNS, useClientsApi_UpdateClient_ByClientIdMutation, useClientsApi_UpdateClientpermission_ByClientIdMutation, useClientsApi_UpdateClientpermission_ByClientId_ByResource_ByActionMutation, useClientsApi_UpdateSecret_ByClientIdMutation, useClientsConfigV3AdminApi_DeleteClientConfigPermissionMutation_v3, useClientsConfigV3AdminApi_GetClientConfigPermissions_v3, useClientsConfigV3AdminApi_GetClientConfigTemplates_v3, useClientsConfigV3AdminApi_UpdateClientConfigPermissionMutation_v3, useConfigAdminApi_GetConfig_ByConfigKey_v3, useConfigApi_GetConfig_ByConfigKey_v3, useCountryAdminApi_GetCountriesBlacklist_v3, useCountryAdminApi_GetCountries_v3, useCountryAdminApi_UpdateCountryBlacklistMutation_v3, useCountryApi_GetCountries_v3, useDevicesV4AdminApi_CreateDeviceBanMutation_v4, useDevicesV4AdminApi_GetBans_ByDeviceId_v4, useDevicesV4AdminApi_GetDecrypt_ByDeviceId_v4, useDevicesV4AdminApi_GetDeviceBan_ByBanId_v4, useDevicesV4AdminApi_GetDevicesBanned_v4, useDevicesV4AdminApi_GetDevicesBans_v4, useDevicesV4AdminApi_GetDevicesReport_v4, useDevicesV4AdminApi_GetDevicesTypes_v4, useDevicesV4AdminApi_GetDevices_v4, useDevicesV4AdminApi_GetUsers_ByDeviceId_v4, useDevicesV4AdminApi_UpdateDeviceBan_ByBanIdMutation_v4, useDevicesV4AdminApi_UpdateUnban_ByDeviceIdMutation_v4, useInputValidationsAdminApi_DeleteInputValidation_ByFieldMutation_v3, useInputValidationsAdminApi_GetInputValidations_v3, useInputValidationsAdminApi_UpdateInputValidationMutation_v3, useInputValidationsApi_GetInputValidation_ByField_v3, useInputValidationsApi_GetInputValidations_v3, useLoginAllowlistAdminApi_GetLoginAllowlist_v3, useLoginAllowlistAdminApi_UpdateLoginAllowlistMutation_v3, useOAuth20AdminApi_GetPlatformTokenOauth_ByUserId_ByPlatformId_v3, useOAuth20AdminApi_UpdateRevokeOauth_ByUserIdMutation_v3, useOAuth20Api_GetAuthorizeOauth_ByPlatformId_v3, useOAuth20Api_GetOauthAuthorize_v3, useOAuth20Api_GetOauthJwks_v3, useOAuth20Api_GetOauthRevocationlist_v3, useOAuth20Api_GetPlatformTokenOauth_ByUserId_ByPlatformId_v3, useOAuth20Api_PostOauthIntrospectMutation_v3, useOAuth20Api_PostOauthMfaCodeMutation_v3, useOAuth20Api_PostOauthMfaFactorChangeMutation_v3, useOAuth20Api_PostOauthMfaVerifyMutation_v3, useOAuth20Api_PostOauthRevokeMutation_v3, useOAuth20Api_PostOauthSimultaneousLoginMutation_v3, useOAuth20Api_PostOauthTokenMutation_v3, useOAuth20Api_PostOauthVerifyMutation_v3, useOAuth20Api_PostTokenOauth_ByPlatformIdMutation_v3, useOAuth20ExtensionApi_CreateLogoutMutation_v3, useOAuth20ExtensionApi_GetAuthenticate_ByPlatformId_v3, useOAuth20ExtensionApi_GetLocationCountry_v3, useOAuth20ExtensionApi_PostAuthenticateMutation_v3, useOAuth20ExtensionApi_PostAuthenticateWithLinkMutation_v3, useOAuth20ExtensionApi_PostHeadlesTokenMutation_v3, useOAuth20ExtensionApi_PostLinkCodeRequestMutation_v3, useOAuth20ExtensionApi_PostLinkCodeValidateMutation_v3, useOAuth20ExtensionApi_PostLinkTokenExchangeMutation_v3, useOAuth20ExtensionApi_PostTokenExchangeMutation_v3, useOAuth20ExtensionApi_PostTokenRequestMutation_v3, useOAuth20ExtensionApi_PostTokenVerify_ByPlatformIdMutation_v3, useOAuth20V4Api_PostOauthAuthenticateWithLinkMutation_v4, useOAuth20V4Api_PostOauthHeadlesTokenMutation_v4, useOAuth20V4Api_PostOauthMfaVerifyMutation_v4, useOAuth20V4Api_PostOauthSimultaneousLoginMutation_v4, useOAuth20V4Api_PostOauthTokenExchangeMutation_v4, useOAuth20V4Api_PostOauthTokenMutation_v4, useOAuth20V4Api_PostTokenOauth_ByPlatformIdMutation_v4, useOAuthApi_GetOauthJwks, useOAuthApi_GetOauthRevocationlist, useOAuthApi_PostOauthAuthorizeMutation, useOAuthApi_PostOauthRevokeTokenMutation, useOAuthApi_PostOauthRevokeUserMutation, useOAuthApi_PostOauthTokenMutation, useOAuthApi_PostOauthVerifyMutation, useOAuthApi_PostTokenOauth_ByPlatformIdMutation, useOAuthApi_UpdateRevokeOauth_ByUserIdMutation, useOverrideRoleConfigV3AdminApi_GetPermissions_ByRoleId_v3, useOverrideRoleConfigV3AdminApi_GetRoleoverrideSource_v3, useOverrideRoleConfigV3AdminApi_GetRoleoverride_v3, useOverrideRoleConfigV3AdminApi_PatchRoleoverrideMutation_v3, useOverrideRoleConfigV3AdminApi_PatchRoleoverrideStatusMutation_v3, useProfileUpdateStrategyAdminApi_GetProfileUpdateStrategies_v3, useProfileUpdateStrategyAdminApi_UpdateProfileUpdateStrategyMutation_v3, useProfileUpdateStrategyApi_GetProfileUpdateStrategies_v3, useRolesAdminApi_CreateRoleMutation_v3, useRolesAdminApi_CreateRoleMutation_v4, useRolesAdminApi_DeleteAdmin_ByRoleIdMutation_v3, useRolesAdminApi_DeleteManager_ByRoleIdMutation_v3, useRolesAdminApi_DeleteMember_ByRoleIdMutation_v3, useRolesAdminApi_DeletePermission_ByRoleIdMutation_v3, useRolesAdminApi_DeletePermission_ByRoleIdMutation_v4, useRolesAdminApi_DeletePermission_ByRoleId_ByResource_ByActionMutation_v3, useRolesAdminApi_DeleteRole_ByRoleIdMutation_v3, useRolesAdminApi_DeleteRole_ByRoleIdMutation_v4, useRolesAdminApi_DeleteUser_ByRoleIdMutation_v4, useRolesAdminApi_GetAdmin_ByRoleId_v3, useRolesAdminApi_GetManagers_ByRoleId_v3, useRolesAdminApi_GetMembers_ByRoleId_v3, useRolesAdminApi_GetRole_ByRoleId_v3, useRolesAdminApi_GetRole_ByRoleId_v4, useRolesAdminApi_GetRoles_v3, useRolesAdminApi_GetRoles_v4, useRolesAdminApi_GetUsers_ByRoleId_v4, useRolesAdminApi_PatchRole_ByRoleIdMutation_v3, useRolesAdminApi_PatchRole_ByRoleIdMutation_v4, useRolesAdminApi_UpdateAdmin_ByRoleIdMutation_v3, useRolesAdminApi_UpdateManager_ByRoleIdMutation_v3, useRolesAdminApi_UpdateMember_ByRoleIdMutation_v3, useRolesAdminApi_UpdatePermission_ByRoleIdMutation_v3, useRolesAdminApi_UpdatePermission_ByRoleIdMutation_v4, useRolesAdminApi_UpdatePermission_ByRoleId_adminMutation_v3, useRolesAdminApi_UpdatePermission_ByRoleId_adminMutation_v4, useRolesAdminApi_UpdateUser_ByRoleIdMutation_v4, useRolesApi_CreateRoleMutation, useRolesApi_DeleteAdmin_ByRoleIdMutation, useRolesApi_DeleteManager_ByRoleIdMutation, useRolesApi_DeleteMember_ByRoleIdMutation, useRolesApi_DeletePermission_ByRoleId_ByResource_ByActionMutation, useRolesApi_DeleteRole_ByRoleIdMutation, useRolesApi_GetAdmin_ByRoleId, useRolesApi_GetManagers_ByRoleId, useRolesApi_GetMembers_ByRoleId, useRolesApi_GetRole_ByRoleId, useRolesApi_GetRole_ByRoleId_v3, useRolesApi_GetRoles, useRolesApi_GetRoles_v3, useRolesApi_UpdateAdmin_ByRoleIdMutation, useRolesApi_UpdateManager_ByRoleIdMutation, useRolesApi_UpdateMember_ByRoleIdMutation, useRolesApi_UpdatePermission_ByRoleIdMutation, useRolesApi_UpdatePermission_ByRoleId_ByResource_ByActionMutation, useRolesApi_UpdateRole_ByRoleIdMutation, useSsoApi_CreateLogout_ByPlatformIdMutation_v3, useSsoApi_GetSso_ByPlatformId_v3, useSsoCredentialAdminApi_CreateSso_ByPlatformIdMutation_v3, useSsoCredentialAdminApi_DeleteSso_ByPlatformIdMutation_v3, useSsoCredentialAdminApi_GetPlatformsSso_v3, useSsoCredentialAdminApi_GetSso_ByPlatformId_v3, useSsoCredentialAdminApi_PatchSso_ByPlatformIdMutation_v3, useSsoSaml20Api_PostAuthenticateSamlSso_ByPlatformIdMutation_v3, useThirdPartyCredentialAdminApi_CreateClient_ByPlatformIdMutation_v3, useThirdPartyCredentialAdminApi_DeleteClientDomain_ByPlatformIdMutation_v3, useThirdPartyCredentialAdminApi_DeleteClient_ByPlatformIdMutation_v3, useThirdPartyCredentialAdminApi_GetAvailability_ByPlatformId_v3, useThirdPartyCredentialAdminApi_GetClients_ByPlatformId_v3, useThirdPartyCredentialAdminApi_GetPlatformsAllClientsActive_v3, useThirdPartyCredentialAdminApi_GetPlatformsAllClients_v3, useThirdPartyCredentialAdminApi_PatchClient_ByPlatformIdMutation_v3, useThirdPartyCredentialAdminApi_UpdateClientDomain_ByPlatformIdMutation_v3, useThirdPartyCredentialApi_GetPlatformsClientsActive_v3, useThirdPartyCredentialApi_GetPlatformsClientsOidc_v3, useUsersAdminApi_CreateBan_ByUserIdMutation_v2, useUsersAdminApi_CreateBan_ByUserIdMutation_v3, useUsersAdminApi_CreatePermission_ByUserIdMutation_v3, useUsersAdminApi_CreatePlatformJustice_ByUserId_ByTargetNamespaceMutation_v3, useUsersAdminApi_CreateUserBulkMutation_v3, useUsersAdminApi_CreateUserInviteMutation_v3, useUsersAdminApi_DeleteAll_ByUserId_ByPlatformIdMutation_v3, useUsersAdminApi_DeleteInformation_ByUserIdMutation_v3, useUsersAdminApi_DeleteLinkHistory_ByUserId_ByPlatformIdMutation_v3, useUsersAdminApi_DeleteLinkRestriction_ByUserId_ByPlatformIdMutation_v3, useUsersAdminApi_DeleteLink_ByUserId_ByPlatformIdMutation_v2, useUsersAdminApi_DeletePermission_ByUserIdMutation_v3, useUsersAdminApi_DeletePermission_ByUserId_ByResource_ByActionMutation_v3, useUsersAdminApi_DeletePlatform_ByUserId_ByPlatformIdMutation_v3, useUsersAdminApi_DeleteRole_ByUserIdMutation_v3, useUsersAdminApi_DeleteRole_ByUserId_ByRoleIdMutation_v3, useUsersAdminApi_FetchUserBan_v3, useUsersAdminApi_FetchUserBulkPlatform_v3, useUsersAdminApi_FetchUserSearchBulk_v3, useUsersAdminApi_FetchUser_ByPlatformId_v3, useUsersAdminApi_GetAdmins_v3, useUsersAdminApi_GetAgerestrictionsCountries_v3, useUsersAdminApi_GetAgerestrictions_v2, useUsersAdminApi_GetAgerestrictions_v3, useUsersAdminApi_GetBansSummary_ByUserId_v3, useUsersAdminApi_GetBans_ByUserId_v2, useUsersAdminApi_GetBans_ByUserId_v3, useUsersAdminApi_GetCodes_ByUserId_v3, useUsersAdminApi_GetCountriesAgerestrictions_v2, useUsersAdminApi_GetDeletionStatus_ByUserId_v3, useUsersAdminApi_GetDistinctPlatforms_ByUserId_v3, useUsersAdminApi_GetLoginsHistories_ByUserId_v3, useUsersAdminApi_GetMetadata_ByUserId_ByPlatformId_v3, useUsersAdminApi_GetPlatformJustice_ByUserId_ByTargetNamespace_v3, useUsersAdminApi_GetPlatformsDistinct_ByUserId_v3, useUsersAdminApi_GetPlatformsJustice_ByUserId_v3, useUsersAdminApi_GetPlatformsLinkHistories_ByUserId_v3, useUsersAdminApi_GetPlatforms_ByUserId_v3, useUsersAdminApi_GetUser_ByPlatformId_ByPlatformUserId_v3, useUsersAdminApi_GetUser_ByUserId_v2, useUsersAdminApi_GetUser_ByUserId_v3, useUsersAdminApi_GetUsersLinkhistories_v3, useUsersAdminApi_GetUsersMe_v3, useUsersAdminApi_GetUsersPlatformsJustice_v3, useUsersAdminApi_GetUsersSearch_v3, useUsersAdminApi_GetUsers_ByRoleId_v3, useUsersAdminApi_GetUsers_v2, useUsersAdminApi_GetUsers_v3, useUsersAdminApi_PatchAgerestrictionCountry_ByCountryCodeMutation_v3, useUsersAdminApi_PatchAgerestrictionMutation_v2, useUsersAdminApi_PatchAgerestrictionMutation_v3, useUsersAdminApi_PatchBan_ByUserId_ByBanIdMutation_v3, useUsersAdminApi_PatchCountry_ByCountryCodeMutation_v2, useUsersAdminApi_PatchDeletionStatus_ByUserIdMutation_v3, useUsersAdminApi_PatchRole_ByUserIdMutation_v3, useUsersAdminApi_PatchStatus_ByUserIdMutation_v3, useUsersAdminApi_PatchTrustlyIdentity_ByUserIdMutation_v3, useUsersAdminApi_PatchUser_ByUserIdMutation_v2, useUsersAdminApi_PatchUser_ByUserIdMutation_v3, useUsersAdminApi_PostLinkStatu_ByUserId_ByPlatformIdMutation_v3, useUsersAdminApi_PostLink_ByUserId_ByPlatformIdMutation_v3, useUsersAdminApi_UpdateCodeRequest_ByUserIdMutation_v3, useUsersAdminApi_UpdateCodeVerify_ByUserIdMutation_v3, useUsersAdminApi_UpdateDisable_ByUserIdMutation_v2, useUsersAdminApi_UpdateEnable_ByUserIdMutation_v2, useUsersAdminApi_UpdateHeadlesCodeVerify_ByUserIdMutation_v3, useUsersAdminApi_UpdatePassword_ByUserIdMutation_v2, useUsersAdminApi_UpdatePassword_ByUserIdMutation_v3, useUsersAdminApi_UpdatePermission_ByUserIdMutation_v3, useUsersAdminApi_UpdatePlatformLink_ByUserIdMutation_v3, useUsersAdminApi_UpdateRole_ByUserIdMutation_v2, useUsersAdminApi_UpdateRole_ByUserId_ByNSMutation_v2, useUsersAdminApi_UpdateRole_ByUserId_ByRoleIdMutation_v3, useUsersAdminApi_UpdateUserMutation_v3, useUsersAdminApi_UpdateVerify_ByUserIdMutation_v3, useUsersApi_CreateBan_ByUserIdMutation, useUsersApi_CreatePlatformLinkWithProgression_ByUserIdMutation_v3, useUsersApi_CreatePlatformLink_ByUserIdMutation_v3, useUsersApi_CreateUserBulkBasicMutation_v3, useUsersApi_CreateUserCodeRequestMutation_v3, useUsersApi_CreateUserCodeVerifyMutation_v3, useUsersApi_CreateUserForgotMutation_v3, useUsersApi_CreateUserForgotPasswordMutation, useUsersApi_CreateUserForgotPasswordMutation_v2, useUsersApi_CreateUserInputValidationMutation_v3, useUsersApi_CreateUserInvite_ByInvitationIdMutation_v3, useUsersApi_CreateUserMeCodeRequestMutation_v3, useUsersApi_CreateUserMeCodeVerifyMutation_v3, useUsersApi_CreateUserMeHeadlesCodeVerifyMutation_v3, useUsersApi_CreateUserMeHeadlesLinkWithProgressionMutation_v3, useUsersApi_CreateUserMeHeadlesVerifyMutation_v3, useUsersApi_CreateUserMePlatformJustice_ByTargetNamespaceMutation_v3, useUsersApi_CreateUserMeVerifyLinkRequestMutation_v3, useUsersApi_CreateUserMutation, useUsersApi_CreateUserMutation_v2, useUsersApi_CreateUserMutation_v3, useUsersApi_CreateUserPlatformMutation_v3, useUsersApi_CreateUserResetMutation_v3, useUsersApi_CreateUserResetPasswordMutation, useUsersApi_CreateUserResetPasswordMutation_v2, useUsersApi_CreateUser_ByPlatformIdMutation_v3, useUsersApi_DeleteAllMeUser_ByPlatformIdMutation_v3, useUsersApi_DeleteInformation_ByUserIdMutation, useUsersApi_DeleteLink_ByUserId_ByPlatformIdMutation_v2, useUsersApi_DeletePermission_ByUserId_ByResource_ByActionMutation, useUsersApi_DeleteRole_ByUserId_ByRoleIdMutation, useUsersApi_DeleteUserMePlatform_ByPlatformIdMutation_v3, useUsersApi_DeleteUser_ByUserIdMutation, useUsersApi_GetAgerestrictionCountry_ByCountryCode_v3, useUsersApi_GetAgerestrictions_ByCountryCode_v2, useUsersApi_GetAsyncStatus_ByRequestId_v3, useUsersApi_GetBans_ByUserId, useUsersApi_GetBans_ByUserId_v2, useUsersApi_GetBans_ByUserId_v3, useUsersApi_GetDistinctPlatforms_ByUserId_v3, useUsersApi_GetInformation_ByUserId, useUsersApi_GetInformation_ByUserId_v3, useUsersApi_GetLoginsHistories_ByUserId, useUsersApi_GetLoginsHistories_ByUserId_v3, useUsersApi_GetPlatformJustice_ByUserId_ByTargetNamespace, useUsersApi_GetPlatformsJustice_ByUserId_v2, useUsersApi_GetPlatformsJustice_ByUserId_v3, useUsersApi_GetPlatforms_ByUserId, useUsersApi_GetPlatforms_ByUserId_v3, useUsersApi_GetPublisher_ByUserId, useUsersApi_GetPublisher_ByUserId_v3, useUsersApi_GetUserInvite_ByInvitationId_v3, useUsersApi_GetUser_ByPlatformId_ByPlatformUserId_v3, useUsersApi_GetUser_ByUserId, useUsersApi_GetUser_ByUserId_v2, useUsersApi_GetUser_ByUserId_v3, useUsersApi_GetUsersAdmin, useUsersApi_GetUsersAvailability_v3, useUsersApi_GetUsersByLoginId, useUsersApi_GetUsersByPlatformUserId, useUsersApi_GetUsersListByLoginIds, useUsersApi_GetUsersMeHeadlessLinkConflict_v3, useUsersApi_GetUsersMeProfileStatus_v3, useUsersApi_GetUsersMe_v3, useUsersApi_GetUsersSearch, useUsersApi_GetUsersVerifyLinkVerify_v3, useUsersApi_GetUsers_v3, useUsersApi_GetWebLinkEstablishMeUsers_ByPlatformId_v3, useUsersApi_GetWebLinkMeUsers_ByPlatformId_v3, useUsersApi_PatchUserMeMutation_v3, useUsersApi_PatchUser_ByUserIdMutation_v2, useUsersApi_PostCrosslink_ByUserIdMutation, useUsersApi_PostForceMeUser_ByPlatformIdMutation_v3, useUsersApi_PostLink_ByUserId_ByPlatformIdMutation, useUsersApi_PostLink_ByUserId_ByPlatformIdMutation_v2, useUsersApi_PostUnlink_ByUserId_ByPlatformIdMutation, useUsersApi_PostUserMePlatform_ByPlatformIdMutation_v3, useUsersApi_PostValidate_ByUserIdMutation_v3, useUsersApi_PostWebLinkProcesMeUser_ByPlatformIdMutation_v3, useUsersApi_UpdateDisable_ByUserIdMutation, useUsersApi_UpdateDisable_ByUserId_ByBanIdMutation, useUsersApi_UpdateEnable_ByUserIdMutation, useUsersApi_UpdateEnable_ByUserId_ByBanIdMutation, useUsersApi_UpdatePassword_ByUserIdMutation, useUsersApi_UpdatePassword_ByUserIdMutation_v2, useUsersApi_UpdatePermission_ByUserIdMutation, useUsersApi_UpdatePermission_ByUserId_ByResource_ByActionMutation, useUsersApi_UpdatePlatformJustice_ByUserId_ByTargetNamespaceMutation, useUsersApi_UpdateRole_ByUserIdMutation, useUsersApi_UpdateRole_ByUserId_ByRoleIdMutation, useUsersApi_UpdateUpgradeHeadlessAccountWithVerificationCode_ByUserIdMutation, useUsersApi_UpdateUpgradeHeadlessAccount_ByUserIdMutation, useUsersApi_UpdateUserMeMutation_v3, useUsersApi_UpdateUserMePasswordMutation_v3, useUsersApi_UpdateUser_ByUserIdMutation, useUsersApi_UpdateVerification_ByUserIdMutation, useUsersApi_UpdateVerificationcode_ByUserIdMutation, useUsersV4AdminApi_CreateTestUserMutation_v4, useUsersV4AdminApi_CreateUserInviteMutation_v4, useUsersV4AdminApi_CreateUserMeMfaAuthenticatorKeyMutation_v4, useUsersV4AdminApi_CreateUserMeMfaBackupCodeEnableMutation_v4, useUsersV4AdminApi_CreateUserMeMfaBackupCodeEnable_adminMutation_v4, useUsersV4AdminApi_CreateUserMeMfaBackupCodeMutation_v4, useUsersV4AdminApi_CreateUserMeMfaBackupCode_adminMutation_v4, useUsersV4AdminApi_CreateUserMeMfaEmailDisableMutation_v4, useUsersV4AdminApi_CreateUserMeMfaStatusMutation_v4, useUsersV4AdminApi_CreateUserMutation_v4, useUsersV4AdminApi_CreateUserUserInviteMutation_v4, useUsersV4AdminApi_DeleteMfaDisable_ByUserIdMutation_v4, useUsersV4AdminApi_DeleteRole_ByUserIdMutation_v4, useUsersV4AdminApi_DeleteUserMeMfaAuthenticatorDisableMutation_v4, useUsersV4AdminApi_DeleteUserMeMfaBackupCodeDisableMutation_v4, useUsersV4AdminApi_FetchUserBulkValidate_v4, useUsersV4AdminApi_GetInvitationHistoriesUsers_v4, useUsersV4AdminApi_GetInvitationHistories_ByNS_v4, useUsersV4AdminApi_GetInvitationHistories_v4, useUsersV4AdminApi_GetMfaStatus_ByUserId_v4, useUsersV4AdminApi_GetRoles_ByUserId_v4, useUsersV4AdminApi_GetUsersMeMfaBackupCodeDownload_v4, useUsersV4AdminApi_GetUsersMeMfaBackupCode_v4, useUsersV4AdminApi_GetUsersMeMfaBackupCodes_v4, useUsersV4AdminApi_GetUsersMeMfaFactor_v4, useUsersV4AdminApi_GetUsersMeMfaStatus_v4, useUsersV4AdminApi_PatchUserBulkAccountTypeMutation_v4, useUsersV4AdminApi_PatchUserMeMutation_v4, useUsersV4AdminApi_PostUserMeMfaAuthenticatorEnableMutation_v4, useUsersV4AdminApi_PostUserMeMfaChallengeVerifyMutation_v4, useUsersV4AdminApi_PostUserMeMfaEmailCodeMutation_v4, useUsersV4AdminApi_PostUserMeMfaEmailEnableMutation_v4, useUsersV4AdminApi_PostUserMeMfaFactorMutation_v4, useUsersV4AdminApi_UpdateEmail_ByUserIdMutation_v4, useUsersV4AdminApi_UpdateRole_ByUserIdMutation_v4, useUsersV4AdminApi_UpdateRole_ByUserId_ByNSMutation_v4, useUsersV4AdminApi_UpdateUser_ByUserIdMutation_v4, useUsersV4Api_CreateTestUserMutation_v4, useUsersV4Api_CreateUserInviteMutation_v4, useUsersV4Api_CreateUserInvite_ByInvitationIdMutation_v4, useUsersV4Api_CreateUserMeHeadlesCodeVerifyMutation_v4, useUsersV4Api_CreateUserMeHeadlesVerifyMutation_v4, useUsersV4Api_CreateUserMeMfaAuthenticatorKeyMutation_v4, useUsersV4Api_CreateUserMeMfaBackupCodeEnableMutation_v4, useUsersV4Api_CreateUserMeMfaBackupCodeEnable_ByNSMutation_v4, useUsersV4Api_CreateUserMeMfaBackupCodeMutation_v4, useUsersV4Api_CreateUserMeMfaBackupCode_ByNSMutation_v4, useUsersV4Api_CreateUserMeMfaEmailDisableMutation_v4, useUsersV4Api_CreateUserMeMfaStatusMutation_v4, useUsersV4Api_CreateUserMutation_v4, useUsersV4Api_CreateUser_ByPlatformIdMutation_v4, useUsersV4Api_DeleteUserMeMfaAuthenticatorDisableMutation_v4, useUsersV4Api_DeleteUserMeMfaBackupCodeDisableMutation_v4, useUsersV4Api_DeleteUserMeMfaDeviceMutation_v4, useUsersV4Api_GetUser_ByUserId_v4, useUsersV4Api_GetUsersMeMfaBackupCodeDownload_v4, useUsersV4Api_GetUsersMeMfaBackupCode_v4, useUsersV4Api_GetUsersMeMfaBackupCodes_v4, useUsersV4Api_GetUsersMeMfaFactor_v4, useUsersV4Api_GetUsersMeMfaStatus_v4, useUsersV4Api_PatchUserMeMutation_v4, useUsersV4Api_PostUserMeMfaAuthenticatorEnableMutation_v4, useUsersV4Api_PostUserMeMfaChallengeVerifyMutation_v4, useUsersV4Api_PostUserMeMfaEmailCodeMutation_v4, useUsersV4Api_PostUserMeMfaEmailEnableMutation_v4, useUsersV4Api_PostUserMeMfaFactorMutation_v4, useUsersV4Api_UpdateUserMeEmailMutation_v4 };
