class Validation {
  constructor() {
    this.validationMap = /* @__PURE__ */ new Map();
    this.subscriber = /* @__PURE__ */ new Set();
  }
  set(key, value) {
    this.validationMap.set(key, value);
    this.notifySubscribers();
  }
  get(key) {
    return this.validationMap.get(key) || null;
  }
  delete(key) {
    return this.validationMap.delete(key);
  }
  clear() {
    this.validationMap = /* @__PURE__ */ new Map();
    this.notifySubscribers();
  }
  listen(listener) {
    this.subscriber.add(listener);
  }
  unlisten(listener) {
    this.subscriber.delete(listener);
  }
  clearSubscriber() {
    this.subscriber = /* @__PURE__ */ new Set();
  }
  isValid(key) {
    return !this.validationMap.get(key);
  }
  isAllValid() {
    if (this.validationMap.size === 0) {
      return true;
    }
    const mapArray = Array.from(this.validationMap.values());
    return mapArray.every((value) => {
      return value === null;
    });
  }
  notifySubscribers() {
    Array.from(this.subscriber).forEach((a) => a());
  }
}

export { Validation };
//# sourceMappingURL=Validation.js.map
//# sourceMappingURL=Validation.js.map