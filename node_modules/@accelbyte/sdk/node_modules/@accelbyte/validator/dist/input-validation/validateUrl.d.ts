import { z } from 'zod';

declare const ValidateUrlErrorType: z.ZodEnum<["empty", "lessThanLengthLimit", "exceedLengthLimit", "invalidFormat"]>;
type ValidateUrlErrorType = z.infer<typeof ValidateUrlErrorType>;
interface ValidateUrlOptions {
    /**
     * When set to `false`, URL with 0 length will return `null`.
     *
     * @default true
     */
    isRequired?: boolean;
    /**
     * When set to `true`, it will allow custom protocol. It is discouraged to set this to `true` as it exposes room for XSS attack,
     * as `javascript:` and `vbscript:` are both valid protocols.
     *
     * @default false
     */
    allowCustomProtocol?: boolean;
}
declare const validateUrl: (value: string, { isRequired, allowCustomProtocol }?: ValidateUrlOptions) => "empty" | "lessThanLengthLimit" | "exceedLengthLimit" | "invalidFormat" | null;

export { ValidateUrlErrorType, type ValidateUrlOptions, validateUrl };
