import { z } from 'zod';

declare const PlatformCredentials: z.ZodObject<{
    psn: z.ZodObject<{
        clientId: z.ZodString;
        clientSecret: z.ZodString;
        scope: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        clientId: string;
        scope: string;
        clientSecret: string;
    }, {
        clientId: string;
        scope: string;
        clientSecret: string;
    }>;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    psn: {
        clientId: string;
        scope: string;
        clientSecret: string;
    };
    updatedAt: string;
}, {
    psn: {
        clientId: string;
        scope: string;
        clientSecret: string;
    };
    updatedAt: string;
}>;
interface PlatformCredentials extends z.TypeOf<typeof PlatformCredentials> {
}

declare const Configuration: z.ZodObject<{
    logLevel: z.ZodOptional<z.ZodNullable<z.ZodEnum<["debug", "error", "fatal", "info", "panic", "trace", "warning"]>>>;
}, "strip", z.ZodTypeAny, {
    logLevel?: "error" | "debug" | "fatal" | "info" | "panic" | "trace" | "warning" | null | undefined;
}, {
    logLevel?: "error" | "debug" | "fatal" | "info" | "panic" | "trace" | "warning" | null | undefined;
}>;
interface Configuration extends z.TypeOf<typeof Configuration> {
}

declare const ConfigAlertRequestCreate: z.ZodObject<{
    durationDays: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    durationDays: number;
}, {
    durationDays: number;
}>;
interface ConfigAlertRequestCreate extends z.TypeOf<typeof ConfigAlertRequestCreate> {
}

declare const ConfigAlertResponse: z.ZodObject<{
    createdAt: z.ZodString;
    durationDays: z.ZodNumber;
    namespace: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    updatedAt: string;
    durationDays: number;
    createdAt: string;
}, {
    namespace: string;
    updatedAt: string;
    durationDays: number;
    createdAt: string;
}>;
interface ConfigAlertResponse extends z.TypeOf<typeof ConfigAlertResponse> {
}

declare const ConfigurationTemplateResponse: z.ZodObject<{
    PSNBaseUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    autoJoin: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    autoLeaveSession: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    clientVersion: z.ZodString;
    createdAt: z.ZodString;
    customURLGRPC: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    deployment: z.ZodString;
    disableCodeGeneration: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    disableResendInvite: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    dsManualSetReady: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    dsSource: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    enableSecret: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    fallbackClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    grpcSessionConfig: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        customURL: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        functionFlag: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        appName?: string | null | undefined;
        customURL?: string | null | undefined;
        functionFlag?: number | null | undefined;
    }, {
        appName?: string | null | undefined;
        customURL?: string | null | undefined;
        functionFlag?: number | null | undefined;
    }>>>;
    immutableStorage: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    inactiveTimeout: z.ZodNumber;
    inviteTimeout: z.ZodNumber;
    joinability: z.ZodString;
    last: z.ZodString;
    leaderElectionGracePeriod: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    manualRejoin: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    maxActiveSessions: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    maxPlayers: z.ZodNumber;
    minPlayers: z.ZodNumber;
    name: z.ZodString;
    namespace: z.ZodString;
    nativeSessionSetting: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        PSNServiceLabel: z.ZodNumber;
        PSNSupportedPlatforms: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        SessionTitle: z.ZodString;
        ShouldSync: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        XboxAllowCrossPlatform: z.ZodBoolean;
        XboxSandboxID: z.ZodString;
        XboxServiceConfigID: z.ZodString;
        XboxSessionTemplateName: z.ZodString;
        XboxTitleID: z.ZodString;
        localizedSessionName: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    }, "strip", z.ZodTypeAny, {
        PSNServiceLabel: number;
        SessionTitle: string;
        XboxAllowCrossPlatform: boolean;
        XboxSandboxID: string;
        XboxServiceConfigID: string;
        XboxSessionTemplateName: string;
        XboxTitleID: string;
        PSNSupportedPlatforms?: string[] | null | undefined;
        ShouldSync?: boolean | null | undefined;
        localizedSessionName?: Record<string, any> | null | undefined;
    }, {
        PSNServiceLabel: number;
        SessionTitle: string;
        XboxAllowCrossPlatform: boolean;
        XboxSandboxID: string;
        XboxServiceConfigID: string;
        XboxSessionTemplateName: string;
        XboxTitleID: string;
        PSNSupportedPlatforms?: string[] | null | undefined;
        ShouldSync?: boolean | null | undefined;
        localizedSessionName?: Record<string, any> | null | undefined;
    }>>>;
    persistent: z.ZodBoolean;
    preferredClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    requestedRegions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    textChat: z.ZodBoolean;
    tieTeamsSessionLifetime: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    type: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    type: string;
    updatedAt: string;
    createdAt: string;
    clientVersion: string;
    deployment: string;
    inactiveTimeout: number;
    inviteTimeout: number;
    joinability: string;
    last: string;
    maxPlayers: number;
    minPlayers: number;
    name: string;
    persistent: boolean;
    textChat: boolean;
    appName?: string | null | undefined;
    PSNBaseUrl?: string | null | undefined;
    attributes?: Record<string, any> | null | undefined;
    autoJoin?: boolean | null | undefined;
    autoLeaveSession?: boolean | null | undefined;
    customURLGRPC?: string | null | undefined;
    disableCodeGeneration?: boolean | null | undefined;
    disableResendInvite?: boolean | null | undefined;
    dsManualSetReady?: boolean | null | undefined;
    dsSource?: string | null | undefined;
    enableSecret?: boolean | null | undefined;
    fallbackClaimKeys?: string[] | null | undefined;
    grpcSessionConfig?: {
        appName?: string | null | undefined;
        customURL?: string | null | undefined;
        functionFlag?: number | null | undefined;
    } | null | undefined;
    immutableStorage?: boolean | null | undefined;
    leaderElectionGracePeriod?: number | null | undefined;
    manualRejoin?: boolean | null | undefined;
    maxActiveSessions?: number | null | undefined;
    nativeSessionSetting?: {
        PSNServiceLabel: number;
        SessionTitle: string;
        XboxAllowCrossPlatform: boolean;
        XboxSandboxID: string;
        XboxServiceConfigID: string;
        XboxSessionTemplateName: string;
        XboxTitleID: string;
        PSNSupportedPlatforms?: string[] | null | undefined;
        ShouldSync?: boolean | null | undefined;
        localizedSessionName?: Record<string, any> | null | undefined;
    } | null | undefined;
    preferredClaimKeys?: string[] | null | undefined;
    requestedRegions?: string[] | null | undefined;
    tieTeamsSessionLifetime?: boolean | null | undefined;
}, {
    namespace: string;
    type: string;
    updatedAt: string;
    createdAt: string;
    clientVersion: string;
    deployment: string;
    inactiveTimeout: number;
    inviteTimeout: number;
    joinability: string;
    last: string;
    maxPlayers: number;
    minPlayers: number;
    name: string;
    persistent: boolean;
    textChat: boolean;
    appName?: string | null | undefined;
    PSNBaseUrl?: string | null | undefined;
    attributes?: Record<string, any> | null | undefined;
    autoJoin?: boolean | null | undefined;
    autoLeaveSession?: boolean | null | undefined;
    customURLGRPC?: string | null | undefined;
    disableCodeGeneration?: boolean | null | undefined;
    disableResendInvite?: boolean | null | undefined;
    dsManualSetReady?: boolean | null | undefined;
    dsSource?: string | null | undefined;
    enableSecret?: boolean | null | undefined;
    fallbackClaimKeys?: string[] | null | undefined;
    grpcSessionConfig?: {
        appName?: string | null | undefined;
        customURL?: string | null | undefined;
        functionFlag?: number | null | undefined;
    } | null | undefined;
    immutableStorage?: boolean | null | undefined;
    leaderElectionGracePeriod?: number | null | undefined;
    manualRejoin?: boolean | null | undefined;
    maxActiveSessions?: number | null | undefined;
    nativeSessionSetting?: {
        PSNServiceLabel: number;
        SessionTitle: string;
        XboxAllowCrossPlatform: boolean;
        XboxSandboxID: string;
        XboxServiceConfigID: string;
        XboxSessionTemplateName: string;
        XboxTitleID: string;
        PSNSupportedPlatforms?: string[] | null | undefined;
        ShouldSync?: boolean | null | undefined;
        localizedSessionName?: Record<string, any> | null | undefined;
    } | null | undefined;
    preferredClaimKeys?: string[] | null | undefined;
    requestedRegions?: string[] | null | undefined;
    tieTeamsSessionLifetime?: boolean | null | undefined;
}>;
interface ConfigurationTemplateResponse extends z.TypeOf<typeof ConfigurationTemplateResponse> {
}

declare const ConfigurationTemplatesResponse: z.ZodObject<{
    data: z.ZodArray<z.ZodObject<{
        PSNBaseUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        autoJoin: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        autoLeaveSession: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        clientVersion: z.ZodString;
        createdAt: z.ZodString;
        customURLGRPC: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        deployment: z.ZodString;
        disableCodeGeneration: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        disableResendInvite: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        dsManualSetReady: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        dsSource: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        enableSecret: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        fallbackClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        grpcSessionConfig: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            customURL: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            functionFlag: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        }, {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        }>>>;
        immutableStorage: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        inactiveTimeout: z.ZodNumber;
        inviteTimeout: z.ZodNumber;
        joinability: z.ZodString;
        last: z.ZodString;
        leaderElectionGracePeriod: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        manualRejoin: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        maxActiveSessions: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        maxPlayers: z.ZodNumber;
        minPlayers: z.ZodNumber;
        name: z.ZodString;
        namespace: z.ZodString;
        nativeSessionSetting: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            PSNServiceLabel: z.ZodNumber;
            PSNSupportedPlatforms: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            SessionTitle: z.ZodString;
            ShouldSync: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            XboxAllowCrossPlatform: z.ZodBoolean;
            XboxSandboxID: z.ZodString;
            XboxServiceConfigID: z.ZodString;
            XboxSessionTemplateName: z.ZodString;
            XboxTitleID: z.ZodString;
            localizedSessionName: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        }, "strip", z.ZodTypeAny, {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        }, {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        }>>>;
        persistent: z.ZodBoolean;
        preferredClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        requestedRegions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        textChat: z.ZodBoolean;
        tieTeamsSessionLifetime: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        type: z.ZodString;
        updatedAt: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        namespace: string;
        type: string;
        updatedAt: string;
        createdAt: string;
        clientVersion: string;
        deployment: string;
        inactiveTimeout: number;
        inviteTimeout: number;
        joinability: string;
        last: string;
        maxPlayers: number;
        minPlayers: number;
        name: string;
        persistent: boolean;
        textChat: boolean;
        appName?: string | null | undefined;
        PSNBaseUrl?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        autoJoin?: boolean | null | undefined;
        autoLeaveSession?: boolean | null | undefined;
        customURLGRPC?: string | null | undefined;
        disableCodeGeneration?: boolean | null | undefined;
        disableResendInvite?: boolean | null | undefined;
        dsManualSetReady?: boolean | null | undefined;
        dsSource?: string | null | undefined;
        enableSecret?: boolean | null | undefined;
        fallbackClaimKeys?: string[] | null | undefined;
        grpcSessionConfig?: {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        } | null | undefined;
        immutableStorage?: boolean | null | undefined;
        leaderElectionGracePeriod?: number | null | undefined;
        manualRejoin?: boolean | null | undefined;
        maxActiveSessions?: number | null | undefined;
        nativeSessionSetting?: {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        } | null | undefined;
        preferredClaimKeys?: string[] | null | undefined;
        requestedRegions?: string[] | null | undefined;
        tieTeamsSessionLifetime?: boolean | null | undefined;
    }, {
        namespace: string;
        type: string;
        updatedAt: string;
        createdAt: string;
        clientVersion: string;
        deployment: string;
        inactiveTimeout: number;
        inviteTimeout: number;
        joinability: string;
        last: string;
        maxPlayers: number;
        minPlayers: number;
        name: string;
        persistent: boolean;
        textChat: boolean;
        appName?: string | null | undefined;
        PSNBaseUrl?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        autoJoin?: boolean | null | undefined;
        autoLeaveSession?: boolean | null | undefined;
        customURLGRPC?: string | null | undefined;
        disableCodeGeneration?: boolean | null | undefined;
        disableResendInvite?: boolean | null | undefined;
        dsManualSetReady?: boolean | null | undefined;
        dsSource?: string | null | undefined;
        enableSecret?: boolean | null | undefined;
        fallbackClaimKeys?: string[] | null | undefined;
        grpcSessionConfig?: {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        } | null | undefined;
        immutableStorage?: boolean | null | undefined;
        leaderElectionGracePeriod?: number | null | undefined;
        manualRejoin?: boolean | null | undefined;
        maxActiveSessions?: number | null | undefined;
        nativeSessionSetting?: {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        } | null | undefined;
        preferredClaimKeys?: string[] | null | undefined;
        requestedRegions?: string[] | null | undefined;
        tieTeamsSessionLifetime?: boolean | null | undefined;
    }>, "many">;
    paging: z.ZodObject<{
        first: z.ZodString;
        last: z.ZodString;
        next: z.ZodString;
        previous: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        last: string;
        first: string;
        next: string;
        previous: string;
    }, {
        last: string;
        first: string;
        next: string;
        previous: string;
    }>;
}, "strip", z.ZodTypeAny, {
    data: {
        namespace: string;
        type: string;
        updatedAt: string;
        createdAt: string;
        clientVersion: string;
        deployment: string;
        inactiveTimeout: number;
        inviteTimeout: number;
        joinability: string;
        last: string;
        maxPlayers: number;
        minPlayers: number;
        name: string;
        persistent: boolean;
        textChat: boolean;
        appName?: string | null | undefined;
        PSNBaseUrl?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        autoJoin?: boolean | null | undefined;
        autoLeaveSession?: boolean | null | undefined;
        customURLGRPC?: string | null | undefined;
        disableCodeGeneration?: boolean | null | undefined;
        disableResendInvite?: boolean | null | undefined;
        dsManualSetReady?: boolean | null | undefined;
        dsSource?: string | null | undefined;
        enableSecret?: boolean | null | undefined;
        fallbackClaimKeys?: string[] | null | undefined;
        grpcSessionConfig?: {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        } | null | undefined;
        immutableStorage?: boolean | null | undefined;
        leaderElectionGracePeriod?: number | null | undefined;
        manualRejoin?: boolean | null | undefined;
        maxActiveSessions?: number | null | undefined;
        nativeSessionSetting?: {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        } | null | undefined;
        preferredClaimKeys?: string[] | null | undefined;
        requestedRegions?: string[] | null | undefined;
        tieTeamsSessionLifetime?: boolean | null | undefined;
    }[];
    paging: {
        last: string;
        first: string;
        next: string;
        previous: string;
    };
}, {
    data: {
        namespace: string;
        type: string;
        updatedAt: string;
        createdAt: string;
        clientVersion: string;
        deployment: string;
        inactiveTimeout: number;
        inviteTimeout: number;
        joinability: string;
        last: string;
        maxPlayers: number;
        minPlayers: number;
        name: string;
        persistent: boolean;
        textChat: boolean;
        appName?: string | null | undefined;
        PSNBaseUrl?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        autoJoin?: boolean | null | undefined;
        autoLeaveSession?: boolean | null | undefined;
        customURLGRPC?: string | null | undefined;
        disableCodeGeneration?: boolean | null | undefined;
        disableResendInvite?: boolean | null | undefined;
        dsManualSetReady?: boolean | null | undefined;
        dsSource?: string | null | undefined;
        enableSecret?: boolean | null | undefined;
        fallbackClaimKeys?: string[] | null | undefined;
        grpcSessionConfig?: {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        } | null | undefined;
        immutableStorage?: boolean | null | undefined;
        leaderElectionGracePeriod?: number | null | undefined;
        manualRejoin?: boolean | null | undefined;
        maxActiveSessions?: number | null | undefined;
        nativeSessionSetting?: {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        } | null | undefined;
        preferredClaimKeys?: string[] | null | undefined;
        requestedRegions?: string[] | null | undefined;
        tieTeamsSessionLifetime?: boolean | null | undefined;
    }[];
    paging: {
        last: string;
        first: string;
        next: string;
        previous: string;
    };
}>;
interface ConfigurationTemplatesResponse extends z.TypeOf<typeof ConfigurationTemplatesResponse> {
}

declare const CreateConfigurationTemplateRequest: z.ZodObject<{
    NativeSessionSetting: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        PSNServiceLabel: z.ZodNumber;
        PSNSupportedPlatforms: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        SessionTitle: z.ZodString;
        ShouldSync: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        XboxAllowCrossPlatform: z.ZodBoolean;
        XboxSandboxID: z.ZodString;
        XboxServiceConfigID: z.ZodString;
        XboxSessionTemplateName: z.ZodString;
        XboxTitleID: z.ZodString;
        localizedSessionName: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    }, "strip", z.ZodTypeAny, {
        PSNServiceLabel: number;
        SessionTitle: string;
        XboxAllowCrossPlatform: boolean;
        XboxSandboxID: string;
        XboxServiceConfigID: string;
        XboxSessionTemplateName: string;
        XboxTitleID: string;
        PSNSupportedPlatforms?: string[] | null | undefined;
        ShouldSync?: boolean | null | undefined;
        localizedSessionName?: Record<string, any> | null | undefined;
    }, {
        PSNServiceLabel: number;
        SessionTitle: string;
        XboxAllowCrossPlatform: boolean;
        XboxSandboxID: string;
        XboxServiceConfigID: string;
        XboxSessionTemplateName: string;
        XboxTitleID: string;
        PSNSupportedPlatforms?: string[] | null | undefined;
        ShouldSync?: boolean | null | undefined;
        localizedSessionName?: Record<string, any> | null | undefined;
    }>>>;
    PSNBaseUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    autoJoin: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    autoLeaveSession: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    clientVersion: z.ZodString;
    customURLGRPC: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    deployment: z.ZodString;
    disableCodeGeneration: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    disableResendInvite: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    dsManualSetReady: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    dsSource: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    enableSecret: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    fallbackClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    grpcSessionConfig: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        customURL: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        functionFlag: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        appName?: string | null | undefined;
        customURL?: string | null | undefined;
        functionFlag?: number | null | undefined;
    }, {
        appName?: string | null | undefined;
        customURL?: string | null | undefined;
        functionFlag?: number | null | undefined;
    }>>>;
    immutableStorage: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    inactiveTimeout: z.ZodNumber;
    inviteTimeout: z.ZodNumber;
    joinability: z.ZodString;
    leaderElectionGracePeriod: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    manualRejoin: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    maxActiveSessions: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    maxPlayers: z.ZodNumber;
    minPlayers: z.ZodNumber;
    name: z.ZodString;
    persistent: z.ZodBoolean;
    preferredClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    requestedRegions: z.ZodArray<z.ZodString, "many">;
    textChat: z.ZodBoolean;
    tieTeamsSessionLifetime: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    type: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: string;
    clientVersion: string;
    deployment: string;
    inactiveTimeout: number;
    inviteTimeout: number;
    joinability: string;
    maxPlayers: number;
    minPlayers: number;
    name: string;
    persistent: boolean;
    requestedRegions: string[];
    textChat: boolean;
    appName?: string | null | undefined;
    PSNBaseUrl?: string | null | undefined;
    attributes?: Record<string, any> | null | undefined;
    autoJoin?: boolean | null | undefined;
    autoLeaveSession?: boolean | null | undefined;
    customURLGRPC?: string | null | undefined;
    disableCodeGeneration?: boolean | null | undefined;
    disableResendInvite?: boolean | null | undefined;
    dsManualSetReady?: boolean | null | undefined;
    dsSource?: string | null | undefined;
    enableSecret?: boolean | null | undefined;
    fallbackClaimKeys?: string[] | null | undefined;
    grpcSessionConfig?: {
        appName?: string | null | undefined;
        customURL?: string | null | undefined;
        functionFlag?: number | null | undefined;
    } | null | undefined;
    immutableStorage?: boolean | null | undefined;
    leaderElectionGracePeriod?: number | null | undefined;
    manualRejoin?: boolean | null | undefined;
    maxActiveSessions?: number | null | undefined;
    preferredClaimKeys?: string[] | null | undefined;
    tieTeamsSessionLifetime?: boolean | null | undefined;
    NativeSessionSetting?: {
        PSNServiceLabel: number;
        SessionTitle: string;
        XboxAllowCrossPlatform: boolean;
        XboxSandboxID: string;
        XboxServiceConfigID: string;
        XboxSessionTemplateName: string;
        XboxTitleID: string;
        PSNSupportedPlatforms?: string[] | null | undefined;
        ShouldSync?: boolean | null | undefined;
        localizedSessionName?: Record<string, any> | null | undefined;
    } | null | undefined;
}, {
    type: string;
    clientVersion: string;
    deployment: string;
    inactiveTimeout: number;
    inviteTimeout: number;
    joinability: string;
    maxPlayers: number;
    minPlayers: number;
    name: string;
    persistent: boolean;
    requestedRegions: string[];
    textChat: boolean;
    appName?: string | null | undefined;
    PSNBaseUrl?: string | null | undefined;
    attributes?: Record<string, any> | null | undefined;
    autoJoin?: boolean | null | undefined;
    autoLeaveSession?: boolean | null | undefined;
    customURLGRPC?: string | null | undefined;
    disableCodeGeneration?: boolean | null | undefined;
    disableResendInvite?: boolean | null | undefined;
    dsManualSetReady?: boolean | null | undefined;
    dsSource?: string | null | undefined;
    enableSecret?: boolean | null | undefined;
    fallbackClaimKeys?: string[] | null | undefined;
    grpcSessionConfig?: {
        appName?: string | null | undefined;
        customURL?: string | null | undefined;
        functionFlag?: number | null | undefined;
    } | null | undefined;
    immutableStorage?: boolean | null | undefined;
    leaderElectionGracePeriod?: number | null | undefined;
    manualRejoin?: boolean | null | undefined;
    maxActiveSessions?: number | null | undefined;
    preferredClaimKeys?: string[] | null | undefined;
    tieTeamsSessionLifetime?: boolean | null | undefined;
    NativeSessionSetting?: {
        PSNServiceLabel: number;
        SessionTitle: string;
        XboxAllowCrossPlatform: boolean;
        XboxSandboxID: string;
        XboxServiceConfigID: string;
        XboxSessionTemplateName: string;
        XboxTitleID: string;
        PSNSupportedPlatforms?: string[] | null | undefined;
        ShouldSync?: boolean | null | undefined;
        localizedSessionName?: Record<string, any> | null | undefined;
    } | null | undefined;
}>;
interface CreateConfigurationTemplateRequest extends z.TypeOf<typeof CreateConfigurationTemplateRequest> {
}

declare const DsmConfigRecord: z.ZodObject<{
    claim_timeout: z.ZodNumber;
    createdAt: z.ZodString;
    creation_timeout: z.ZodNumber;
    namespace: z.ZodString;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    updatedAt: string;
    createdAt: string;
    claim_timeout: number;
    creation_timeout: number;
}, {
    namespace: string;
    updatedAt: string;
    createdAt: string;
    claim_timeout: number;
    creation_timeout: number;
}>;
interface DsmConfigRecord extends z.TypeOf<typeof DsmConfigRecord> {
}

declare const UpdateConfigurationTemplateRequest: z.ZodObject<{
    NativeSessionSetting: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        PSNServiceLabel: z.ZodNumber;
        PSNSupportedPlatforms: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        SessionTitle: z.ZodString;
        ShouldSync: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        XboxAllowCrossPlatform: z.ZodBoolean;
        XboxSandboxID: z.ZodString;
        XboxServiceConfigID: z.ZodString;
        XboxSessionTemplateName: z.ZodString;
        XboxTitleID: z.ZodString;
        localizedSessionName: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    }, "strip", z.ZodTypeAny, {
        PSNServiceLabel: number;
        SessionTitle: string;
        XboxAllowCrossPlatform: boolean;
        XboxSandboxID: string;
        XboxServiceConfigID: string;
        XboxSessionTemplateName: string;
        XboxTitleID: string;
        PSNSupportedPlatforms?: string[] | null | undefined;
        ShouldSync?: boolean | null | undefined;
        localizedSessionName?: Record<string, any> | null | undefined;
    }, {
        PSNServiceLabel: number;
        SessionTitle: string;
        XboxAllowCrossPlatform: boolean;
        XboxSandboxID: string;
        XboxServiceConfigID: string;
        XboxSessionTemplateName: string;
        XboxTitleID: string;
        PSNSupportedPlatforms?: string[] | null | undefined;
        ShouldSync?: boolean | null | undefined;
        localizedSessionName?: Record<string, any> | null | undefined;
    }>>>;
    PSNBaseUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    autoJoin: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    autoLeaveSession: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    clientVersion: z.ZodString;
    customURLGRPC: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    deployment: z.ZodString;
    disableCodeGeneration: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    disableResendInvite: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    dsManualSetReady: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    dsSource: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    enableSecret: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    fallbackClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    grpcSessionConfig: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        customURL: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        functionFlag: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        appName?: string | null | undefined;
        customURL?: string | null | undefined;
        functionFlag?: number | null | undefined;
    }, {
        appName?: string | null | undefined;
        customURL?: string | null | undefined;
        functionFlag?: number | null | undefined;
    }>>>;
    immutableStorage: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    inactiveTimeout: z.ZodNumber;
    inviteTimeout: z.ZodNumber;
    joinability: z.ZodString;
    leaderElectionGracePeriod: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    manualRejoin: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    maxActiveSessions: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    maxPlayers: z.ZodNumber;
    minPlayers: z.ZodNumber;
    name: z.ZodString;
    persistent: z.ZodBoolean;
    preferredClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    requestedRegions: z.ZodArray<z.ZodString, "many">;
    textChat: z.ZodBoolean;
    tieTeamsSessionLifetime: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    type: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: string;
    clientVersion: string;
    deployment: string;
    inactiveTimeout: number;
    inviteTimeout: number;
    joinability: string;
    maxPlayers: number;
    minPlayers: number;
    name: string;
    persistent: boolean;
    requestedRegions: string[];
    textChat: boolean;
    appName?: string | null | undefined;
    PSNBaseUrl?: string | null | undefined;
    attributes?: Record<string, any> | null | undefined;
    autoJoin?: boolean | null | undefined;
    autoLeaveSession?: boolean | null | undefined;
    customURLGRPC?: string | null | undefined;
    disableCodeGeneration?: boolean | null | undefined;
    disableResendInvite?: boolean | null | undefined;
    dsManualSetReady?: boolean | null | undefined;
    dsSource?: string | null | undefined;
    enableSecret?: boolean | null | undefined;
    fallbackClaimKeys?: string[] | null | undefined;
    grpcSessionConfig?: {
        appName?: string | null | undefined;
        customURL?: string | null | undefined;
        functionFlag?: number | null | undefined;
    } | null | undefined;
    immutableStorage?: boolean | null | undefined;
    leaderElectionGracePeriod?: number | null | undefined;
    manualRejoin?: boolean | null | undefined;
    maxActiveSessions?: number | null | undefined;
    preferredClaimKeys?: string[] | null | undefined;
    tieTeamsSessionLifetime?: boolean | null | undefined;
    NativeSessionSetting?: {
        PSNServiceLabel: number;
        SessionTitle: string;
        XboxAllowCrossPlatform: boolean;
        XboxSandboxID: string;
        XboxServiceConfigID: string;
        XboxSessionTemplateName: string;
        XboxTitleID: string;
        PSNSupportedPlatforms?: string[] | null | undefined;
        ShouldSync?: boolean | null | undefined;
        localizedSessionName?: Record<string, any> | null | undefined;
    } | null | undefined;
}, {
    type: string;
    clientVersion: string;
    deployment: string;
    inactiveTimeout: number;
    inviteTimeout: number;
    joinability: string;
    maxPlayers: number;
    minPlayers: number;
    name: string;
    persistent: boolean;
    requestedRegions: string[];
    textChat: boolean;
    appName?: string | null | undefined;
    PSNBaseUrl?: string | null | undefined;
    attributes?: Record<string, any> | null | undefined;
    autoJoin?: boolean | null | undefined;
    autoLeaveSession?: boolean | null | undefined;
    customURLGRPC?: string | null | undefined;
    disableCodeGeneration?: boolean | null | undefined;
    disableResendInvite?: boolean | null | undefined;
    dsManualSetReady?: boolean | null | undefined;
    dsSource?: string | null | undefined;
    enableSecret?: boolean | null | undefined;
    fallbackClaimKeys?: string[] | null | undefined;
    grpcSessionConfig?: {
        appName?: string | null | undefined;
        customURL?: string | null | undefined;
        functionFlag?: number | null | undefined;
    } | null | undefined;
    immutableStorage?: boolean | null | undefined;
    leaderElectionGracePeriod?: number | null | undefined;
    manualRejoin?: boolean | null | undefined;
    maxActiveSessions?: number | null | undefined;
    preferredClaimKeys?: string[] | null | undefined;
    tieTeamsSessionLifetime?: boolean | null | undefined;
    NativeSessionSetting?: {
        PSNServiceLabel: number;
        SessionTitle: string;
        XboxAllowCrossPlatform: boolean;
        XboxSandboxID: string;
        XboxServiceConfigID: string;
        XboxSessionTemplateName: string;
        XboxTitleID: string;
        PSNSupportedPlatforms?: string[] | null | undefined;
        ShouldSync?: boolean | null | undefined;
        localizedSessionName?: Record<string, any> | null | undefined;
    } | null | undefined;
}>;
interface UpdateConfigurationTemplateRequest extends z.TypeOf<typeof UpdateConfigurationTemplateRequest> {
}

declare const DefaultDsmcConfig: z.ZodObject<{
    claim_timeout: z.ZodNumber;
    creation_timeout: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    claim_timeout: number;
    creation_timeout: number;
}, {
    claim_timeout: number;
    creation_timeout: number;
}>;
interface DefaultDsmcConfig extends z.TypeOf<typeof DefaultDsmcConfig> {
}

declare const EnvironmentVariableListResponse: z.ZodObject<{
    data: z.ZodArray<z.ZodObject<{
        actualValue: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        defaultValue: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        name: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        name: string;
        actualValue?: string | null | undefined;
        defaultValue?: string | null | undefined;
        description?: string | null | undefined;
    }, {
        name: string;
        actualValue?: string | null | undefined;
        defaultValue?: string | null | undefined;
        description?: string | null | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    data: {
        name: string;
        actualValue?: string | null | undefined;
        defaultValue?: string | null | undefined;
        description?: string | null | undefined;
    }[];
}, {
    data: {
        name: string;
        actualValue?: string | null | undefined;
        defaultValue?: string | null | undefined;
        description?: string | null | undefined;
    }[];
}>;
interface EnvironmentVariableListResponse extends z.TypeOf<typeof EnvironmentVariableListResponse> {
}

declare const DeleteBulkGameSessionRequest: z.ZodObject<{
    ids: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    ids: string[];
}, {
    ids: string[];
}>;
interface DeleteBulkGameSessionRequest extends z.TypeOf<typeof DeleteBulkGameSessionRequest> {
}

declare const DeleteBulkGameSessionsApiResponse: z.ZodObject<{
    failed: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        error: z.ZodString;
        id: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        error: string;
        id: string;
    }, {
        error: string;
        id: string;
    }>, "many">>>;
    success: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
}, "strip", z.ZodTypeAny, {
    failed?: {
        error: string;
        id: string;
    }[] | null | undefined;
    success?: string[] | null | undefined;
}, {
    failed?: {
        error: string;
        id: string;
    }[] | null | undefined;
    success?: string[] | null | undefined;
}>;
interface DeleteBulkGameSessionsApiResponse extends z.TypeOf<typeof DeleteBulkGameSessionsApiResponse> {
}

declare const GameSessionQueryResponse: z.ZodObject<{
    data: z.ZodArray<z.ZodObject<{
        DSInformation: z.ZodObject<{
            CreatedAt: z.ZodString;
            RequestedAt: z.ZodString;
            Server: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                alternate_ips: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
                ams_protocol: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                    name: z.ZodString;
                    protocol: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    name: string;
                    protocol: string;
                }, {
                    name: string;
                    protocol: string;
                }>, "many">>>;
                custom_attribute: z.ZodString;
                deployment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                extend_region: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                game_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                image_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                ip: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                is_override_game_version: z.ZodBoolean;
                last_update: z.ZodString;
                namespace: z.ZodString;
                pod_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                port: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                ports: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
                protocol: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                provider: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                region: z.ZodString;
                session_id: z.ZodString;
                source: z.ZodString;
                status: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                namespace: string;
                status: string;
                custom_attribute: string;
                is_override_game_version: boolean;
                last_update: string;
                region: string;
                session_id: string;
                source: string;
                deployment?: string | null | undefined;
                protocol?: string | null | undefined;
                alternate_ips?: string[] | null | undefined;
                ams_protocol?: {
                    name: string;
                    protocol: string;
                }[] | null | undefined;
                extend_region?: string | null | undefined;
                game_version?: string | null | undefined;
                image_version?: string | null | undefined;
                ip?: string | null | undefined;
                pod_name?: string | null | undefined;
                port?: number | null | undefined;
                ports?: Record<string, number> | null | undefined;
                provider?: string | null | undefined;
            }, {
                namespace: string;
                status: string;
                custom_attribute: string;
                is_override_game_version: boolean;
                last_update: string;
                region: string;
                session_id: string;
                source: string;
                deployment?: string | null | undefined;
                protocol?: string | null | undefined;
                alternate_ips?: string[] | null | undefined;
                ams_protocol?: {
                    name: string;
                    protocol: string;
                }[] | null | undefined;
                extend_region?: string | null | undefined;
                game_version?: string | null | undefined;
                image_version?: string | null | undefined;
                ip?: string | null | undefined;
                pod_name?: string | null | undefined;
                port?: number | null | undefined;
                ports?: Record<string, number> | null | undefined;
                provider?: string | null | undefined;
            }>>>;
            Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            StatusV2: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            CreatedAt: string;
            RequestedAt: string;
            Server?: {
                namespace: string;
                status: string;
                custom_attribute: string;
                is_override_game_version: boolean;
                last_update: string;
                region: string;
                session_id: string;
                source: string;
                deployment?: string | null | undefined;
                protocol?: string | null | undefined;
                alternate_ips?: string[] | null | undefined;
                ams_protocol?: {
                    name: string;
                    protocol: string;
                }[] | null | undefined;
                extend_region?: string | null | undefined;
                game_version?: string | null | undefined;
                image_version?: string | null | undefined;
                ip?: string | null | undefined;
                pod_name?: string | null | undefined;
                port?: number | null | undefined;
                ports?: Record<string, number> | null | undefined;
                provider?: string | null | undefined;
            } | null | undefined;
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
        }, {
            CreatedAt: string;
            RequestedAt: string;
            Server?: {
                namespace: string;
                status: string;
                custom_attribute: string;
                is_override_game_version: boolean;
                last_update: string;
                region: string;
                session_id: string;
                source: string;
                deployment?: string | null | undefined;
                protocol?: string | null | undefined;
                alternate_ips?: string[] | null | undefined;
                ams_protocol?: {
                    name: string;
                    protocol: string;
                }[] | null | undefined;
                extend_region?: string | null | undefined;
                game_version?: string | null | undefined;
                image_version?: string | null | undefined;
                ip?: string | null | undefined;
                pod_name?: string | null | undefined;
                port?: number | null | undefined;
                ports?: Record<string, number> | null | undefined;
                provider?: string | null | undefined;
            } | null | undefined;
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
        }>;
        attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        backfillTicketID: z.ZodString;
        code: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        configuration: z.ZodObject<{
            PSNBaseURL: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            autoJoin: z.ZodBoolean;
            clientVersion: z.ZodString;
            customURLGRPC: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            deployment: z.ZodString;
            disableCodeGeneration: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            disableResendInvite: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            dsManualSetReady: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            dsSource: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            enableSecret: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            fallbackClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            grpcSessionConfig: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                customURL: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                functionFlag: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                appName?: string | null | undefined;
                customURL?: string | null | undefined;
                functionFlag?: number | null | undefined;
            }, {
                appName?: string | null | undefined;
                customURL?: string | null | undefined;
                functionFlag?: number | null | undefined;
            }>>>;
            immutableStorage: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            inactiveTimeout: z.ZodNumber;
            inviteTimeout: z.ZodNumber;
            joinability: z.ZodString;
            leaderElectionGracePeriod: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            manualRejoin: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            maxActiveSession: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            maxPlayers: z.ZodNumber;
            minPlayers: z.ZodNumber;
            name: z.ZodString;
            nativeSessionSetting: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                PSNServiceLabel: z.ZodNumber;
                PSNSupportedPlatforms: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
                SessionTitle: z.ZodString;
                ShouldSync: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
                XboxAllowCrossPlatform: z.ZodBoolean;
                XboxSandboxID: z.ZodString;
                XboxServiceConfigID: z.ZodString;
                XboxSessionTemplateName: z.ZodString;
                XboxTitleID: z.ZodString;
                localizedSessionName: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            }, "strip", z.ZodTypeAny, {
                PSNServiceLabel: number;
                SessionTitle: string;
                XboxAllowCrossPlatform: boolean;
                XboxSandboxID: string;
                XboxServiceConfigID: string;
                XboxSessionTemplateName: string;
                XboxTitleID: string;
                PSNSupportedPlatforms?: string[] | null | undefined;
                ShouldSync?: boolean | null | undefined;
                localizedSessionName?: Record<string, any> | null | undefined;
            }, {
                PSNServiceLabel: number;
                SessionTitle: string;
                XboxAllowCrossPlatform: boolean;
                XboxSandboxID: string;
                XboxServiceConfigID: string;
                XboxSessionTemplateName: string;
                XboxTitleID: string;
                PSNSupportedPlatforms?: string[] | null | undefined;
                ShouldSync?: boolean | null | undefined;
                localizedSessionName?: Record<string, any> | null | undefined;
            }>>>;
            persistent: z.ZodBoolean;
            preferredClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            requestedRegions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            textChat: z.ZodBoolean;
            tieTeamsSessionLifetime: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            type: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            type: string;
            autoJoin: boolean;
            clientVersion: string;
            deployment: string;
            inactiveTimeout: number;
            inviteTimeout: number;
            joinability: string;
            maxPlayers: number;
            minPlayers: number;
            name: string;
            persistent: boolean;
            textChat: boolean;
            appName?: string | null | undefined;
            attributes?: Record<string, any> | null | undefined;
            customURLGRPC?: string | null | undefined;
            disableCodeGeneration?: boolean | null | undefined;
            disableResendInvite?: boolean | null | undefined;
            dsManualSetReady?: boolean | null | undefined;
            dsSource?: string | null | undefined;
            enableSecret?: boolean | null | undefined;
            fallbackClaimKeys?: string[] | null | undefined;
            grpcSessionConfig?: {
                appName?: string | null | undefined;
                customURL?: string | null | undefined;
                functionFlag?: number | null | undefined;
            } | null | undefined;
            immutableStorage?: boolean | null | undefined;
            leaderElectionGracePeriod?: number | null | undefined;
            manualRejoin?: boolean | null | undefined;
            nativeSessionSetting?: {
                PSNServiceLabel: number;
                SessionTitle: string;
                XboxAllowCrossPlatform: boolean;
                XboxSandboxID: string;
                XboxServiceConfigID: string;
                XboxSessionTemplateName: string;
                XboxTitleID: string;
                PSNSupportedPlatforms?: string[] | null | undefined;
                ShouldSync?: boolean | null | undefined;
                localizedSessionName?: Record<string, any> | null | undefined;
            } | null | undefined;
            preferredClaimKeys?: string[] | null | undefined;
            requestedRegions?: string[] | null | undefined;
            tieTeamsSessionLifetime?: boolean | null | undefined;
            PSNBaseURL?: string | null | undefined;
            maxActiveSession?: number | null | undefined;
        }, {
            type: string;
            autoJoin: boolean;
            clientVersion: string;
            deployment: string;
            inactiveTimeout: number;
            inviteTimeout: number;
            joinability: string;
            maxPlayers: number;
            minPlayers: number;
            name: string;
            persistent: boolean;
            textChat: boolean;
            appName?: string | null | undefined;
            attributes?: Record<string, any> | null | undefined;
            customURLGRPC?: string | null | undefined;
            disableCodeGeneration?: boolean | null | undefined;
            disableResendInvite?: boolean | null | undefined;
            dsManualSetReady?: boolean | null | undefined;
            dsSource?: string | null | undefined;
            enableSecret?: boolean | null | undefined;
            fallbackClaimKeys?: string[] | null | undefined;
            grpcSessionConfig?: {
                appName?: string | null | undefined;
                customURL?: string | null | undefined;
                functionFlag?: number | null | undefined;
            } | null | undefined;
            immutableStorage?: boolean | null | undefined;
            leaderElectionGracePeriod?: number | null | undefined;
            manualRejoin?: boolean | null | undefined;
            nativeSessionSetting?: {
                PSNServiceLabel: number;
                SessionTitle: string;
                XboxAllowCrossPlatform: boolean;
                XboxSandboxID: string;
                XboxServiceConfigID: string;
                XboxSessionTemplateName: string;
                XboxTitleID: string;
                PSNSupportedPlatforms?: string[] | null | undefined;
                ShouldSync?: boolean | null | undefined;
                localizedSessionName?: Record<string, any> | null | undefined;
            } | null | undefined;
            preferredClaimKeys?: string[] | null | undefined;
            requestedRegions?: string[] | null | undefined;
            tieTeamsSessionLifetime?: boolean | null | undefined;
            PSNBaseURL?: string | null | undefined;
            maxActiveSession?: number | null | undefined;
        }>;
        createdAt: z.ZodString;
        createdBy: z.ZodString;
        expiredAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        id: z.ZodString;
        isActive: z.ZodBoolean;
        isFull: z.ZodBoolean;
        leaderID: z.ZodString;
        matchPool: z.ZodString;
        members: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            platformID: z.ZodString;
            platformUserID: z.ZodString;
            previousStatus: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            status: z.ZodString;
            statusV2: z.ZodString;
            updatedAt: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            status: string;
            updatedAt: string;
            id: string;
            platformID: string;
            platformUserID: string;
            statusV2: string;
            previousStatus?: string | null | undefined;
        }, {
            status: string;
            updatedAt: string;
            id: string;
            platformID: string;
            platformUserID: string;
            statusV2: string;
            previousStatus?: string | null | undefined;
        }>, "many">;
        namespace: z.ZodString;
        storage: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        teams: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                partyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            }, "strip", z.ZodTypeAny, {
                partyID?: string | null | undefined;
                userIDs?: string[] | null | undefined;
            }, {
                partyID?: string | null | undefined;
                userIDs?: string[] | null | undefined;
            }>, "many">>>;
            userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strip", z.ZodTypeAny, {
            userIDs?: string[] | null | undefined;
            parties?: {
                partyID?: string | null | undefined;
                userIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }, {
            userIDs?: string[] | null | undefined;
            parties?: {
                partyID?: string | null | undefined;
                userIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }>, "many">>>;
        ticketIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        updatedAt: z.ZodString;
        version: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        namespace: string;
        updatedAt: string;
        createdAt: string;
        id: string;
        DSInformation: {
            CreatedAt: string;
            RequestedAt: string;
            Server?: {
                namespace: string;
                status: string;
                custom_attribute: string;
                is_override_game_version: boolean;
                last_update: string;
                region: string;
                session_id: string;
                source: string;
                deployment?: string | null | undefined;
                protocol?: string | null | undefined;
                alternate_ips?: string[] | null | undefined;
                ams_protocol?: {
                    name: string;
                    protocol: string;
                }[] | null | undefined;
                extend_region?: string | null | undefined;
                game_version?: string | null | undefined;
                image_version?: string | null | undefined;
                ip?: string | null | undefined;
                pod_name?: string | null | undefined;
                port?: number | null | undefined;
                ports?: Record<string, number> | null | undefined;
                provider?: string | null | undefined;
            } | null | undefined;
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
        };
        backfillTicketID: string;
        configuration: {
            type: string;
            autoJoin: boolean;
            clientVersion: string;
            deployment: string;
            inactiveTimeout: number;
            inviteTimeout: number;
            joinability: string;
            maxPlayers: number;
            minPlayers: number;
            name: string;
            persistent: boolean;
            textChat: boolean;
            appName?: string | null | undefined;
            attributes?: Record<string, any> | null | undefined;
            customURLGRPC?: string | null | undefined;
            disableCodeGeneration?: boolean | null | undefined;
            disableResendInvite?: boolean | null | undefined;
            dsManualSetReady?: boolean | null | undefined;
            dsSource?: string | null | undefined;
            enableSecret?: boolean | null | undefined;
            fallbackClaimKeys?: string[] | null | undefined;
            grpcSessionConfig?: {
                appName?: string | null | undefined;
                customURL?: string | null | undefined;
                functionFlag?: number | null | undefined;
            } | null | undefined;
            immutableStorage?: boolean | null | undefined;
            leaderElectionGracePeriod?: number | null | undefined;
            manualRejoin?: boolean | null | undefined;
            nativeSessionSetting?: {
                PSNServiceLabel: number;
                SessionTitle: string;
                XboxAllowCrossPlatform: boolean;
                XboxSandboxID: string;
                XboxServiceConfigID: string;
                XboxSessionTemplateName: string;
                XboxTitleID: string;
                PSNSupportedPlatforms?: string[] | null | undefined;
                ShouldSync?: boolean | null | undefined;
                localizedSessionName?: Record<string, any> | null | undefined;
            } | null | undefined;
            preferredClaimKeys?: string[] | null | undefined;
            requestedRegions?: string[] | null | undefined;
            tieTeamsSessionLifetime?: boolean | null | undefined;
            PSNBaseURL?: string | null | undefined;
            maxActiveSession?: number | null | undefined;
        };
        createdBy: string;
        isActive: boolean;
        isFull: boolean;
        leaderID: string;
        matchPool: string;
        members: {
            status: string;
            updatedAt: string;
            id: string;
            platformID: string;
            platformUserID: string;
            statusV2: string;
            previousStatus?: string | null | undefined;
        }[];
        version: number;
        code?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        expiredAt?: string | null | undefined;
        storage?: Record<string, any> | null | undefined;
        teams?: {
            userIDs?: string[] | null | undefined;
            parties?: {
                partyID?: string | null | undefined;
                userIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        ticketIDs?: string[] | null | undefined;
    }, {
        namespace: string;
        updatedAt: string;
        createdAt: string;
        id: string;
        DSInformation: {
            CreatedAt: string;
            RequestedAt: string;
            Server?: {
                namespace: string;
                status: string;
                custom_attribute: string;
                is_override_game_version: boolean;
                last_update: string;
                region: string;
                session_id: string;
                source: string;
                deployment?: string | null | undefined;
                protocol?: string | null | undefined;
                alternate_ips?: string[] | null | undefined;
                ams_protocol?: {
                    name: string;
                    protocol: string;
                }[] | null | undefined;
                extend_region?: string | null | undefined;
                game_version?: string | null | undefined;
                image_version?: string | null | undefined;
                ip?: string | null | undefined;
                pod_name?: string | null | undefined;
                port?: number | null | undefined;
                ports?: Record<string, number> | null | undefined;
                provider?: string | null | undefined;
            } | null | undefined;
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
        };
        backfillTicketID: string;
        configuration: {
            type: string;
            autoJoin: boolean;
            clientVersion: string;
            deployment: string;
            inactiveTimeout: number;
            inviteTimeout: number;
            joinability: string;
            maxPlayers: number;
            minPlayers: number;
            name: string;
            persistent: boolean;
            textChat: boolean;
            appName?: string | null | undefined;
            attributes?: Record<string, any> | null | undefined;
            customURLGRPC?: string | null | undefined;
            disableCodeGeneration?: boolean | null | undefined;
            disableResendInvite?: boolean | null | undefined;
            dsManualSetReady?: boolean | null | undefined;
            dsSource?: string | null | undefined;
            enableSecret?: boolean | null | undefined;
            fallbackClaimKeys?: string[] | null | undefined;
            grpcSessionConfig?: {
                appName?: string | null | undefined;
                customURL?: string | null | undefined;
                functionFlag?: number | null | undefined;
            } | null | undefined;
            immutableStorage?: boolean | null | undefined;
            leaderElectionGracePeriod?: number | null | undefined;
            manualRejoin?: boolean | null | undefined;
            nativeSessionSetting?: {
                PSNServiceLabel: number;
                SessionTitle: string;
                XboxAllowCrossPlatform: boolean;
                XboxSandboxID: string;
                XboxServiceConfigID: string;
                XboxSessionTemplateName: string;
                XboxTitleID: string;
                PSNSupportedPlatforms?: string[] | null | undefined;
                ShouldSync?: boolean | null | undefined;
                localizedSessionName?: Record<string, any> | null | undefined;
            } | null | undefined;
            preferredClaimKeys?: string[] | null | undefined;
            requestedRegions?: string[] | null | undefined;
            tieTeamsSessionLifetime?: boolean | null | undefined;
            PSNBaseURL?: string | null | undefined;
            maxActiveSession?: number | null | undefined;
        };
        createdBy: string;
        isActive: boolean;
        isFull: boolean;
        leaderID: string;
        matchPool: string;
        members: {
            status: string;
            updatedAt: string;
            id: string;
            platformID: string;
            platformUserID: string;
            statusV2: string;
            previousStatus?: string | null | undefined;
        }[];
        version: number;
        code?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        expiredAt?: string | null | undefined;
        storage?: Record<string, any> | null | undefined;
        teams?: {
            userIDs?: string[] | null | undefined;
            parties?: {
                partyID?: string | null | undefined;
                userIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        ticketIDs?: string[] | null | undefined;
    }>, "many">;
    paging: z.ZodObject<{
        first: z.ZodString;
        last: z.ZodString;
        next: z.ZodString;
        previous: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        last: string;
        first: string;
        next: string;
        previous: string;
    }, {
        last: string;
        first: string;
        next: string;
        previous: string;
    }>;
}, "strip", z.ZodTypeAny, {
    data: {
        namespace: string;
        updatedAt: string;
        createdAt: string;
        id: string;
        DSInformation: {
            CreatedAt: string;
            RequestedAt: string;
            Server?: {
                namespace: string;
                status: string;
                custom_attribute: string;
                is_override_game_version: boolean;
                last_update: string;
                region: string;
                session_id: string;
                source: string;
                deployment?: string | null | undefined;
                protocol?: string | null | undefined;
                alternate_ips?: string[] | null | undefined;
                ams_protocol?: {
                    name: string;
                    protocol: string;
                }[] | null | undefined;
                extend_region?: string | null | undefined;
                game_version?: string | null | undefined;
                image_version?: string | null | undefined;
                ip?: string | null | undefined;
                pod_name?: string | null | undefined;
                port?: number | null | undefined;
                ports?: Record<string, number> | null | undefined;
                provider?: string | null | undefined;
            } | null | undefined;
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
        };
        backfillTicketID: string;
        configuration: {
            type: string;
            autoJoin: boolean;
            clientVersion: string;
            deployment: string;
            inactiveTimeout: number;
            inviteTimeout: number;
            joinability: string;
            maxPlayers: number;
            minPlayers: number;
            name: string;
            persistent: boolean;
            textChat: boolean;
            appName?: string | null | undefined;
            attributes?: Record<string, any> | null | undefined;
            customURLGRPC?: string | null | undefined;
            disableCodeGeneration?: boolean | null | undefined;
            disableResendInvite?: boolean | null | undefined;
            dsManualSetReady?: boolean | null | undefined;
            dsSource?: string | null | undefined;
            enableSecret?: boolean | null | undefined;
            fallbackClaimKeys?: string[] | null | undefined;
            grpcSessionConfig?: {
                appName?: string | null | undefined;
                customURL?: string | null | undefined;
                functionFlag?: number | null | undefined;
            } | null | undefined;
            immutableStorage?: boolean | null | undefined;
            leaderElectionGracePeriod?: number | null | undefined;
            manualRejoin?: boolean | null | undefined;
            nativeSessionSetting?: {
                PSNServiceLabel: number;
                SessionTitle: string;
                XboxAllowCrossPlatform: boolean;
                XboxSandboxID: string;
                XboxServiceConfigID: string;
                XboxSessionTemplateName: string;
                XboxTitleID: string;
                PSNSupportedPlatforms?: string[] | null | undefined;
                ShouldSync?: boolean | null | undefined;
                localizedSessionName?: Record<string, any> | null | undefined;
            } | null | undefined;
            preferredClaimKeys?: string[] | null | undefined;
            requestedRegions?: string[] | null | undefined;
            tieTeamsSessionLifetime?: boolean | null | undefined;
            PSNBaseURL?: string | null | undefined;
            maxActiveSession?: number | null | undefined;
        };
        createdBy: string;
        isActive: boolean;
        isFull: boolean;
        leaderID: string;
        matchPool: string;
        members: {
            status: string;
            updatedAt: string;
            id: string;
            platformID: string;
            platformUserID: string;
            statusV2: string;
            previousStatus?: string | null | undefined;
        }[];
        version: number;
        code?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        expiredAt?: string | null | undefined;
        storage?: Record<string, any> | null | undefined;
        teams?: {
            userIDs?: string[] | null | undefined;
            parties?: {
                partyID?: string | null | undefined;
                userIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        ticketIDs?: string[] | null | undefined;
    }[];
    paging: {
        last: string;
        first: string;
        next: string;
        previous: string;
    };
}, {
    data: {
        namespace: string;
        updatedAt: string;
        createdAt: string;
        id: string;
        DSInformation: {
            CreatedAt: string;
            RequestedAt: string;
            Server?: {
                namespace: string;
                status: string;
                custom_attribute: string;
                is_override_game_version: boolean;
                last_update: string;
                region: string;
                session_id: string;
                source: string;
                deployment?: string | null | undefined;
                protocol?: string | null | undefined;
                alternate_ips?: string[] | null | undefined;
                ams_protocol?: {
                    name: string;
                    protocol: string;
                }[] | null | undefined;
                extend_region?: string | null | undefined;
                game_version?: string | null | undefined;
                image_version?: string | null | undefined;
                ip?: string | null | undefined;
                pod_name?: string | null | undefined;
                port?: number | null | undefined;
                ports?: Record<string, number> | null | undefined;
                provider?: string | null | undefined;
            } | null | undefined;
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
        };
        backfillTicketID: string;
        configuration: {
            type: string;
            autoJoin: boolean;
            clientVersion: string;
            deployment: string;
            inactiveTimeout: number;
            inviteTimeout: number;
            joinability: string;
            maxPlayers: number;
            minPlayers: number;
            name: string;
            persistent: boolean;
            textChat: boolean;
            appName?: string | null | undefined;
            attributes?: Record<string, any> | null | undefined;
            customURLGRPC?: string | null | undefined;
            disableCodeGeneration?: boolean | null | undefined;
            disableResendInvite?: boolean | null | undefined;
            dsManualSetReady?: boolean | null | undefined;
            dsSource?: string | null | undefined;
            enableSecret?: boolean | null | undefined;
            fallbackClaimKeys?: string[] | null | undefined;
            grpcSessionConfig?: {
                appName?: string | null | undefined;
                customURL?: string | null | undefined;
                functionFlag?: number | null | undefined;
            } | null | undefined;
            immutableStorage?: boolean | null | undefined;
            leaderElectionGracePeriod?: number | null | undefined;
            manualRejoin?: boolean | null | undefined;
            nativeSessionSetting?: {
                PSNServiceLabel: number;
                SessionTitle: string;
                XboxAllowCrossPlatform: boolean;
                XboxSandboxID: string;
                XboxServiceConfigID: string;
                XboxSessionTemplateName: string;
                XboxTitleID: string;
                PSNSupportedPlatforms?: string[] | null | undefined;
                ShouldSync?: boolean | null | undefined;
                localizedSessionName?: Record<string, any> | null | undefined;
            } | null | undefined;
            preferredClaimKeys?: string[] | null | undefined;
            requestedRegions?: string[] | null | undefined;
            tieTeamsSessionLifetime?: boolean | null | undefined;
            PSNBaseURL?: string | null | undefined;
            maxActiveSession?: number | null | undefined;
        };
        createdBy: string;
        isActive: boolean;
        isFull: boolean;
        leaderID: string;
        matchPool: string;
        members: {
            status: string;
            updatedAt: string;
            id: string;
            platformID: string;
            platformUserID: string;
            statusV2: string;
            previousStatus?: string | null | undefined;
        }[];
        version: number;
        code?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        expiredAt?: string | null | undefined;
        storage?: Record<string, any> | null | undefined;
        teams?: {
            userIDs?: string[] | null | undefined;
            parties?: {
                partyID?: string | null | undefined;
                userIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        ticketIDs?: string[] | null | undefined;
    }[];
    paging: {
        last: string;
        first: string;
        next: string;
        previous: string;
    };
}>;
interface GameSessionQueryResponse extends z.TypeOf<typeof GameSessionQueryResponse> {
}

declare const SetDsReadyRequest: z.ZodObject<{
    ready: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    ready: boolean;
}, {
    ready: boolean;
}>;
interface SetDsReadyRequest extends z.TypeOf<typeof SetDsReadyRequest> {
}

declare const UpdateGameSessionMemberStatusResponse: z.ZodObject<{
    status: z.ZodString;
    statusV2: z.ZodString;
}, "strip", z.ZodTypeAny, {
    status: string;
    statusV2: string;
}, {
    status: string;
    statusV2: string;
}>;
interface UpdateGameSessionMemberStatusResponse extends z.TypeOf<typeof UpdateGameSessionMemberStatusResponse> {
}

declare const GlobalConfigurationResponse: z.ZodObject<{
    metricExcludedNamespaces: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    regionRetryMapping: z.ZodRecord<z.ZodString, z.ZodArray<z.ZodString, "many">>;
    regionURLMapping: z.ZodArray<z.ZodString, "many">;
    testGameMode: z.ZodString;
    testRegionURLMapping: z.ZodArray<z.ZodString, "many">;
    testTargetUserIDs: z.ZodArray<z.ZodString, "many">;
    updatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    updatedAt: string;
    regionRetryMapping: Record<string, string[]>;
    regionURLMapping: string[];
    testGameMode: string;
    testRegionURLMapping: string[];
    testTargetUserIDs: string[];
    metricExcludedNamespaces?: string[] | null | undefined;
}, {
    updatedAt: string;
    regionRetryMapping: Record<string, string[]>;
    regionURLMapping: string[];
    testGameMode: string;
    testRegionURLMapping: string[];
    testTargetUserIDs: string[];
    metricExcludedNamespaces?: string[] | null | undefined;
}>;
interface GlobalConfigurationResponse extends z.TypeOf<typeof GlobalConfigurationResponse> {
}

declare const PutGlobalConfigurationRequest: z.ZodObject<{
    metricExcludedNamespaces: z.ZodArray<z.ZodString, "many">;
    regionRetryMapping: z.ZodRecord<z.ZodString, z.ZodArray<z.ZodString, "many">>;
    regionURLMapping: z.ZodArray<z.ZodString, "many">;
    testGameMode: z.ZodString;
    testRegionURLMapping: z.ZodArray<z.ZodString, "many">;
    testTargetUserIDs: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    metricExcludedNamespaces: string[];
    regionRetryMapping: Record<string, string[]>;
    regionURLMapping: string[];
    testGameMode: string;
    testRegionURLMapping: string[];
    testTargetUserIDs: string[];
}, {
    metricExcludedNamespaces: string[];
    regionRetryMapping: Record<string, string[]>;
    regionURLMapping: string[];
    testGameMode: string;
    testRegionURLMapping: string[];
    testTargetUserIDs: string[];
}>;
interface PutGlobalConfigurationRequest extends z.TypeOf<typeof PutGlobalConfigurationRequest> {
}

declare const MemberActiveSession: z.ZodObject<{
    CreatedAt: z.ZodString;
    ID: z.ZodString;
    MemberID: z.ZodString;
    Namespace: z.ZodString;
    SessionIDs: z.ZodArray<z.ZodString, "many">;
    SessionTemplate: z.ZodString;
    Total: z.ZodNumber;
    UpdatedAt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    CreatedAt: string;
    ID: string;
    MemberID: string;
    Namespace: string;
    SessionIDs: string[];
    SessionTemplate: string;
    Total: number;
    UpdatedAt: string;
}, {
    CreatedAt: string;
    ID: string;
    MemberID: string;
    Namespace: string;
    SessionIDs: string[];
    SessionTemplate: string;
    Total: number;
    UpdatedAt: string;
}>;
interface MemberActiveSession extends z.TypeOf<typeof MemberActiveSession> {
}

declare const RequestReconcileMaxActiveSession: z.ZodObject<{
    userID: z.ZodString;
}, "strip", z.ZodTypeAny, {
    userID: string;
}, {
    userID: string;
}>;
interface RequestReconcileMaxActiveSession extends z.TypeOf<typeof RequestReconcileMaxActiveSession> {
}

declare const NativeSessionPagingResponse: z.ZodObject<{
    data: z.ZodArray<z.ZodObject<{
        CreatedAt: z.ZodString;
        DeletedAt: z.ZodString;
        PushContextID: z.ZodString;
        id: z.ZodString;
        members: z.ZodArray<z.ZodObject<{
            platformID: z.ZodString;
            platformUserID: z.ZodString;
            userID: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            platformID: string;
            platformUserID: string;
            userID: string;
        }, {
            platformID: string;
            platformUserID: string;
            userID: string;
        }>, "many">;
        namespace: z.ZodString;
        nativeSessionPlatforms: z.ZodRecord<z.ZodString, z.ZodString>;
        persistent: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        namespace: string;
        persistent: boolean;
        id: string;
        CreatedAt: string;
        members: {
            platformID: string;
            platformUserID: string;
            userID: string;
        }[];
        DeletedAt: string;
        PushContextID: string;
        nativeSessionPlatforms: Record<string, string>;
    }, {
        namespace: string;
        persistent: boolean;
        id: string;
        CreatedAt: string;
        members: {
            platformID: string;
            platformUserID: string;
            userID: string;
        }[];
        DeletedAt: string;
        PushContextID: string;
        nativeSessionPlatforms: Record<string, string>;
    }>, "many">;
    paging: z.ZodObject<{
        first: z.ZodString;
        last: z.ZodString;
        next: z.ZodString;
        previous: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        last: string;
        first: string;
        next: string;
        previous: string;
    }, {
        last: string;
        first: string;
        next: string;
        previous: string;
    }>;
}, "strip", z.ZodTypeAny, {
    data: {
        namespace: string;
        persistent: boolean;
        id: string;
        CreatedAt: string;
        members: {
            platformID: string;
            platformUserID: string;
            userID: string;
        }[];
        DeletedAt: string;
        PushContextID: string;
        nativeSessionPlatforms: Record<string, string>;
    }[];
    paging: {
        last: string;
        first: string;
        next: string;
        previous: string;
    };
}, {
    data: {
        namespace: string;
        persistent: boolean;
        id: string;
        CreatedAt: string;
        members: {
            platformID: string;
            platformUserID: string;
            userID: string;
        }[];
        DeletedAt: string;
        PushContextID: string;
        nativeSessionPlatforms: Record<string, string>;
    }[];
    paging: {
        last: string;
        first: string;
        next: string;
        previous: string;
    };
}>;
interface NativeSessionPagingResponse extends z.TypeOf<typeof NativeSessionPagingResponse> {
}

declare const PartyQueryResponse: z.ZodObject<{
    data: z.ZodArray<z.ZodObject<{
        attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        code: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        configuration: z.ZodObject<{
            PSNBaseURL: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            autoJoin: z.ZodBoolean;
            clientVersion: z.ZodString;
            customURLGRPC: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            deployment: z.ZodString;
            disableCodeGeneration: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            disableResendInvite: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            dsManualSetReady: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            dsSource: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            enableSecret: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            fallbackClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            grpcSessionConfig: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                customURL: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                functionFlag: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                appName?: string | null | undefined;
                customURL?: string | null | undefined;
                functionFlag?: number | null | undefined;
            }, {
                appName?: string | null | undefined;
                customURL?: string | null | undefined;
                functionFlag?: number | null | undefined;
            }>>>;
            immutableStorage: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            inactiveTimeout: z.ZodNumber;
            inviteTimeout: z.ZodNumber;
            joinability: z.ZodString;
            leaderElectionGracePeriod: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            manualRejoin: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            maxActiveSession: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            maxPlayers: z.ZodNumber;
            minPlayers: z.ZodNumber;
            name: z.ZodString;
            nativeSessionSetting: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                PSNServiceLabel: z.ZodNumber;
                PSNSupportedPlatforms: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
                SessionTitle: z.ZodString;
                ShouldSync: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
                XboxAllowCrossPlatform: z.ZodBoolean;
                XboxSandboxID: z.ZodString;
                XboxServiceConfigID: z.ZodString;
                XboxSessionTemplateName: z.ZodString;
                XboxTitleID: z.ZodString;
                localizedSessionName: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            }, "strip", z.ZodTypeAny, {
                PSNServiceLabel: number;
                SessionTitle: string;
                XboxAllowCrossPlatform: boolean;
                XboxSandboxID: string;
                XboxServiceConfigID: string;
                XboxSessionTemplateName: string;
                XboxTitleID: string;
                PSNSupportedPlatforms?: string[] | null | undefined;
                ShouldSync?: boolean | null | undefined;
                localizedSessionName?: Record<string, any> | null | undefined;
            }, {
                PSNServiceLabel: number;
                SessionTitle: string;
                XboxAllowCrossPlatform: boolean;
                XboxSandboxID: string;
                XboxServiceConfigID: string;
                XboxSessionTemplateName: string;
                XboxTitleID: string;
                PSNSupportedPlatforms?: string[] | null | undefined;
                ShouldSync?: boolean | null | undefined;
                localizedSessionName?: Record<string, any> | null | undefined;
            }>>>;
            persistent: z.ZodBoolean;
            preferredClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            requestedRegions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            textChat: z.ZodBoolean;
            tieTeamsSessionLifetime: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            type: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            type: string;
            autoJoin: boolean;
            clientVersion: string;
            deployment: string;
            inactiveTimeout: number;
            inviteTimeout: number;
            joinability: string;
            maxPlayers: number;
            minPlayers: number;
            name: string;
            persistent: boolean;
            textChat: boolean;
            appName?: string | null | undefined;
            attributes?: Record<string, any> | null | undefined;
            customURLGRPC?: string | null | undefined;
            disableCodeGeneration?: boolean | null | undefined;
            disableResendInvite?: boolean | null | undefined;
            dsManualSetReady?: boolean | null | undefined;
            dsSource?: string | null | undefined;
            enableSecret?: boolean | null | undefined;
            fallbackClaimKeys?: string[] | null | undefined;
            grpcSessionConfig?: {
                appName?: string | null | undefined;
                customURL?: string | null | undefined;
                functionFlag?: number | null | undefined;
            } | null | undefined;
            immutableStorage?: boolean | null | undefined;
            leaderElectionGracePeriod?: number | null | undefined;
            manualRejoin?: boolean | null | undefined;
            nativeSessionSetting?: {
                PSNServiceLabel: number;
                SessionTitle: string;
                XboxAllowCrossPlatform: boolean;
                XboxSandboxID: string;
                XboxServiceConfigID: string;
                XboxSessionTemplateName: string;
                XboxTitleID: string;
                PSNSupportedPlatforms?: string[] | null | undefined;
                ShouldSync?: boolean | null | undefined;
                localizedSessionName?: Record<string, any> | null | undefined;
            } | null | undefined;
            preferredClaimKeys?: string[] | null | undefined;
            requestedRegions?: string[] | null | undefined;
            tieTeamsSessionLifetime?: boolean | null | undefined;
            PSNBaseURL?: string | null | undefined;
            maxActiveSession?: number | null | undefined;
        }, {
            type: string;
            autoJoin: boolean;
            clientVersion: string;
            deployment: string;
            inactiveTimeout: number;
            inviteTimeout: number;
            joinability: string;
            maxPlayers: number;
            minPlayers: number;
            name: string;
            persistent: boolean;
            textChat: boolean;
            appName?: string | null | undefined;
            attributes?: Record<string, any> | null | undefined;
            customURLGRPC?: string | null | undefined;
            disableCodeGeneration?: boolean | null | undefined;
            disableResendInvite?: boolean | null | undefined;
            dsManualSetReady?: boolean | null | undefined;
            dsSource?: string | null | undefined;
            enableSecret?: boolean | null | undefined;
            fallbackClaimKeys?: string[] | null | undefined;
            grpcSessionConfig?: {
                appName?: string | null | undefined;
                customURL?: string | null | undefined;
                functionFlag?: number | null | undefined;
            } | null | undefined;
            immutableStorage?: boolean | null | undefined;
            leaderElectionGracePeriod?: number | null | undefined;
            manualRejoin?: boolean | null | undefined;
            nativeSessionSetting?: {
                PSNServiceLabel: number;
                SessionTitle: string;
                XboxAllowCrossPlatform: boolean;
                XboxSandboxID: string;
                XboxServiceConfigID: string;
                XboxSessionTemplateName: string;
                XboxTitleID: string;
                PSNSupportedPlatforms?: string[] | null | undefined;
                ShouldSync?: boolean | null | undefined;
                localizedSessionName?: Record<string, any> | null | undefined;
            } | null | undefined;
            preferredClaimKeys?: string[] | null | undefined;
            requestedRegions?: string[] | null | undefined;
            tieTeamsSessionLifetime?: boolean | null | undefined;
            PSNBaseURL?: string | null | undefined;
            maxActiveSession?: number | null | undefined;
        }>;
        createdAt: z.ZodString;
        createdBy: z.ZodString;
        expiredAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        id: z.ZodString;
        isActive: z.ZodBoolean;
        isFull: z.ZodBoolean;
        leaderID: z.ZodString;
        members: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            platformID: z.ZodString;
            platformUserID: z.ZodString;
            previousStatus: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            status: z.ZodString;
            statusV2: z.ZodString;
            updatedAt: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            status: string;
            updatedAt: string;
            id: string;
            platformID: string;
            platformUserID: string;
            statusV2: string;
            previousStatus?: string | null | undefined;
        }, {
            status: string;
            updatedAt: string;
            id: string;
            platformID: string;
            platformUserID: string;
            statusV2: string;
            previousStatus?: string | null | undefined;
        }>, "many">;
        namespace: z.ZodString;
        storage: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        updatedAt: z.ZodString;
        version: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        namespace: string;
        updatedAt: string;
        createdAt: string;
        id: string;
        configuration: {
            type: string;
            autoJoin: boolean;
            clientVersion: string;
            deployment: string;
            inactiveTimeout: number;
            inviteTimeout: number;
            joinability: string;
            maxPlayers: number;
            minPlayers: number;
            name: string;
            persistent: boolean;
            textChat: boolean;
            appName?: string | null | undefined;
            attributes?: Record<string, any> | null | undefined;
            customURLGRPC?: string | null | undefined;
            disableCodeGeneration?: boolean | null | undefined;
            disableResendInvite?: boolean | null | undefined;
            dsManualSetReady?: boolean | null | undefined;
            dsSource?: string | null | undefined;
            enableSecret?: boolean | null | undefined;
            fallbackClaimKeys?: string[] | null | undefined;
            grpcSessionConfig?: {
                appName?: string | null | undefined;
                customURL?: string | null | undefined;
                functionFlag?: number | null | undefined;
            } | null | undefined;
            immutableStorage?: boolean | null | undefined;
            leaderElectionGracePeriod?: number | null | undefined;
            manualRejoin?: boolean | null | undefined;
            nativeSessionSetting?: {
                PSNServiceLabel: number;
                SessionTitle: string;
                XboxAllowCrossPlatform: boolean;
                XboxSandboxID: string;
                XboxServiceConfigID: string;
                XboxSessionTemplateName: string;
                XboxTitleID: string;
                PSNSupportedPlatforms?: string[] | null | undefined;
                ShouldSync?: boolean | null | undefined;
                localizedSessionName?: Record<string, any> | null | undefined;
            } | null | undefined;
            preferredClaimKeys?: string[] | null | undefined;
            requestedRegions?: string[] | null | undefined;
            tieTeamsSessionLifetime?: boolean | null | undefined;
            PSNBaseURL?: string | null | undefined;
            maxActiveSession?: number | null | undefined;
        };
        createdBy: string;
        isActive: boolean;
        isFull: boolean;
        leaderID: string;
        members: {
            status: string;
            updatedAt: string;
            id: string;
            platformID: string;
            platformUserID: string;
            statusV2: string;
            previousStatus?: string | null | undefined;
        }[];
        version: number;
        code?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        expiredAt?: string | null | undefined;
        storage?: Record<string, any> | null | undefined;
    }, {
        namespace: string;
        updatedAt: string;
        createdAt: string;
        id: string;
        configuration: {
            type: string;
            autoJoin: boolean;
            clientVersion: string;
            deployment: string;
            inactiveTimeout: number;
            inviteTimeout: number;
            joinability: string;
            maxPlayers: number;
            minPlayers: number;
            name: string;
            persistent: boolean;
            textChat: boolean;
            appName?: string | null | undefined;
            attributes?: Record<string, any> | null | undefined;
            customURLGRPC?: string | null | undefined;
            disableCodeGeneration?: boolean | null | undefined;
            disableResendInvite?: boolean | null | undefined;
            dsManualSetReady?: boolean | null | undefined;
            dsSource?: string | null | undefined;
            enableSecret?: boolean | null | undefined;
            fallbackClaimKeys?: string[] | null | undefined;
            grpcSessionConfig?: {
                appName?: string | null | undefined;
                customURL?: string | null | undefined;
                functionFlag?: number | null | undefined;
            } | null | undefined;
            immutableStorage?: boolean | null | undefined;
            leaderElectionGracePeriod?: number | null | undefined;
            manualRejoin?: boolean | null | undefined;
            nativeSessionSetting?: {
                PSNServiceLabel: number;
                SessionTitle: string;
                XboxAllowCrossPlatform: boolean;
                XboxSandboxID: string;
                XboxServiceConfigID: string;
                XboxSessionTemplateName: string;
                XboxTitleID: string;
                PSNSupportedPlatforms?: string[] | null | undefined;
                ShouldSync?: boolean | null | undefined;
                localizedSessionName?: Record<string, any> | null | undefined;
            } | null | undefined;
            preferredClaimKeys?: string[] | null | undefined;
            requestedRegions?: string[] | null | undefined;
            tieTeamsSessionLifetime?: boolean | null | undefined;
            PSNBaseURL?: string | null | undefined;
            maxActiveSession?: number | null | undefined;
        };
        createdBy: string;
        isActive: boolean;
        isFull: boolean;
        leaderID: string;
        members: {
            status: string;
            updatedAt: string;
            id: string;
            platformID: string;
            platformUserID: string;
            statusV2: string;
            previousStatus?: string | null | undefined;
        }[];
        version: number;
        code?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        expiredAt?: string | null | undefined;
        storage?: Record<string, any> | null | undefined;
    }>, "many">;
    paging: z.ZodObject<{
        first: z.ZodString;
        last: z.ZodString;
        next: z.ZodString;
        previous: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        last: string;
        first: string;
        next: string;
        previous: string;
    }, {
        last: string;
        first: string;
        next: string;
        previous: string;
    }>;
}, "strip", z.ZodTypeAny, {
    data: {
        namespace: string;
        updatedAt: string;
        createdAt: string;
        id: string;
        configuration: {
            type: string;
            autoJoin: boolean;
            clientVersion: string;
            deployment: string;
            inactiveTimeout: number;
            inviteTimeout: number;
            joinability: string;
            maxPlayers: number;
            minPlayers: number;
            name: string;
            persistent: boolean;
            textChat: boolean;
            appName?: string | null | undefined;
            attributes?: Record<string, any> | null | undefined;
            customURLGRPC?: string | null | undefined;
            disableCodeGeneration?: boolean | null | undefined;
            disableResendInvite?: boolean | null | undefined;
            dsManualSetReady?: boolean | null | undefined;
            dsSource?: string | null | undefined;
            enableSecret?: boolean | null | undefined;
            fallbackClaimKeys?: string[] | null | undefined;
            grpcSessionConfig?: {
                appName?: string | null | undefined;
                customURL?: string | null | undefined;
                functionFlag?: number | null | undefined;
            } | null | undefined;
            immutableStorage?: boolean | null | undefined;
            leaderElectionGracePeriod?: number | null | undefined;
            manualRejoin?: boolean | null | undefined;
            nativeSessionSetting?: {
                PSNServiceLabel: number;
                SessionTitle: string;
                XboxAllowCrossPlatform: boolean;
                XboxSandboxID: string;
                XboxServiceConfigID: string;
                XboxSessionTemplateName: string;
                XboxTitleID: string;
                PSNSupportedPlatforms?: string[] | null | undefined;
                ShouldSync?: boolean | null | undefined;
                localizedSessionName?: Record<string, any> | null | undefined;
            } | null | undefined;
            preferredClaimKeys?: string[] | null | undefined;
            requestedRegions?: string[] | null | undefined;
            tieTeamsSessionLifetime?: boolean | null | undefined;
            PSNBaseURL?: string | null | undefined;
            maxActiveSession?: number | null | undefined;
        };
        createdBy: string;
        isActive: boolean;
        isFull: boolean;
        leaderID: string;
        members: {
            status: string;
            updatedAt: string;
            id: string;
            platformID: string;
            platformUserID: string;
            statusV2: string;
            previousStatus?: string | null | undefined;
        }[];
        version: number;
        code?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        expiredAt?: string | null | undefined;
        storage?: Record<string, any> | null | undefined;
    }[];
    paging: {
        last: string;
        first: string;
        next: string;
        previous: string;
    };
}, {
    data: {
        namespace: string;
        updatedAt: string;
        createdAt: string;
        id: string;
        configuration: {
            type: string;
            autoJoin: boolean;
            clientVersion: string;
            deployment: string;
            inactiveTimeout: number;
            inviteTimeout: number;
            joinability: string;
            maxPlayers: number;
            minPlayers: number;
            name: string;
            persistent: boolean;
            textChat: boolean;
            appName?: string | null | undefined;
            attributes?: Record<string, any> | null | undefined;
            customURLGRPC?: string | null | undefined;
            disableCodeGeneration?: boolean | null | undefined;
            disableResendInvite?: boolean | null | undefined;
            dsManualSetReady?: boolean | null | undefined;
            dsSource?: string | null | undefined;
            enableSecret?: boolean | null | undefined;
            fallbackClaimKeys?: string[] | null | undefined;
            grpcSessionConfig?: {
                appName?: string | null | undefined;
                customURL?: string | null | undefined;
                functionFlag?: number | null | undefined;
            } | null | undefined;
            immutableStorage?: boolean | null | undefined;
            leaderElectionGracePeriod?: number | null | undefined;
            manualRejoin?: boolean | null | undefined;
            nativeSessionSetting?: {
                PSNServiceLabel: number;
                SessionTitle: string;
                XboxAllowCrossPlatform: boolean;
                XboxSandboxID: string;
                XboxServiceConfigID: string;
                XboxSessionTemplateName: string;
                XboxTitleID: string;
                PSNSupportedPlatforms?: string[] | null | undefined;
                ShouldSync?: boolean | null | undefined;
                localizedSessionName?: Record<string, any> | null | undefined;
            } | null | undefined;
            preferredClaimKeys?: string[] | null | undefined;
            requestedRegions?: string[] | null | undefined;
            tieTeamsSessionLifetime?: boolean | null | undefined;
            PSNBaseURL?: string | null | undefined;
            maxActiveSession?: number | null | undefined;
        };
        createdBy: string;
        isActive: boolean;
        isFull: boolean;
        leaderID: string;
        members: {
            status: string;
            updatedAt: string;
            id: string;
            platformID: string;
            platformUserID: string;
            statusV2: string;
            previousStatus?: string | null | undefined;
        }[];
        version: number;
        code?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        expiredAt?: string | null | undefined;
        storage?: Record<string, any> | null | undefined;
    }[];
    paging: {
        last: string;
        first: string;
        next: string;
        previous: string;
    };
}>;
interface PartyQueryResponse extends z.TypeOf<typeof PartyQueryResponse> {
}

declare const PutPlatformCredentialsRequest: z.ZodObject<{
    psn: z.ZodObject<{
        clientId: z.ZodString;
        clientSecret: z.ZodString;
        scope: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        clientId: string;
        scope: string;
        clientSecret: string;
    }, {
        clientId: string;
        scope: string;
        clientSecret: string;
    }>;
}, "strip", z.ZodTypeAny, {
    psn: {
        clientId: string;
        scope: string;
        clientSecret: string;
    };
}, {
    psn: {
        clientId: string;
        scope: string;
        clientSecret: string;
    };
}>;
interface PutPlatformCredentialsRequest extends z.TypeOf<typeof PutPlatformCredentialsRequest> {
}

declare const PlayerAttributesResponseBody: z.ZodObject<{
    crossplayEnabled: z.ZodBoolean;
    currentPlatform: z.ZodString;
    data: z.ZodRecord<z.ZodString, z.ZodAny>;
    platforms: z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        userID: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        name: string;
        userID: string;
    }, {
        name: string;
        userID: string;
    }>, "many">;
    roles: z.ZodArray<z.ZodString, "many">;
    userID: z.ZodString;
}, "strip", z.ZodTypeAny, {
    data: Record<string, any>;
    roles: string[];
    userID: string;
    crossplayEnabled: boolean;
    currentPlatform: string;
    platforms: {
        name: string;
        userID: string;
    }[];
}, {
    data: Record<string, any>;
    roles: string[];
    userID: string;
    crossplayEnabled: boolean;
    currentPlatform: string;
    platforms: {
        name: string;
        userID: string;
    }[];
}>;
interface PlayerAttributesResponseBody extends z.TypeOf<typeof PlayerAttributesResponseBody> {
}

declare const PlayerAttributesResponseBodyArray: z.ZodArray<z.ZodObject<{
    crossplayEnabled: z.ZodBoolean;
    currentPlatform: z.ZodString;
    data: z.ZodRecord<z.ZodString, z.ZodAny>;
    platforms: z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        userID: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        name: string;
        userID: string;
    }, {
        name: string;
        userID: string;
    }>, "many">;
    roles: z.ZodArray<z.ZodString, "many">;
    userID: z.ZodString;
}, "strip", z.ZodTypeAny, {
    data: Record<string, any>;
    roles: string[];
    userID: string;
    crossplayEnabled: boolean;
    currentPlatform: string;
    platforms: {
        name: string;
        userID: string;
    }[];
}, {
    data: Record<string, any>;
    roles: string[];
    userID: string;
    crossplayEnabled: boolean;
    currentPlatform: string;
    platforms: {
        name: string;
        userID: string;
    }[];
}>, "many">;
interface PlayerAttributesResponseBodyArray extends z.TypeOf<typeof PlayerAttributesResponseBodyArray> {
}

declare const RecentPlayerQueryResponse: z.ZodObject<{
    data: z.ZodArray<z.ZodObject<{
        lastPlayedTime: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        matchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        platformName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        sessionTemplate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        userID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        namespace?: string | null | undefined;
        matchPool?: string | null | undefined;
        userID?: string | null | undefined;
        lastPlayedTime?: string | null | undefined;
        platformName?: string | null | undefined;
        sessionTemplate?: string | null | undefined;
    }, {
        namespace?: string | null | undefined;
        matchPool?: string | null | undefined;
        userID?: string | null | undefined;
        lastPlayedTime?: string | null | undefined;
        platformName?: string | null | undefined;
        sessionTemplate?: string | null | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    data: {
        namespace?: string | null | undefined;
        matchPool?: string | null | undefined;
        userID?: string | null | undefined;
        lastPlayedTime?: string | null | undefined;
        platformName?: string | null | undefined;
        sessionTemplate?: string | null | undefined;
    }[];
}, {
    data: {
        namespace?: string | null | undefined;
        matchPool?: string | null | undefined;
        userID?: string | null | undefined;
        lastPlayedTime?: string | null | undefined;
        platformName?: string | null | undefined;
        sessionTemplate?: string | null | undefined;
    }[];
}>;
interface RecentPlayerQueryResponse extends z.TypeOf<typeof RecentPlayerQueryResponse> {
}

declare const AppendTeamGameSessionRequest: z.ZodObject<{
    additionalMembers: z.ZodArray<z.ZodObject<{
        partyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    }, "strip", z.ZodTypeAny, {
        partyID?: string | null | undefined;
        userIDs?: string[] | null | undefined;
    }, {
        partyID?: string | null | undefined;
        userIDs?: string[] | null | undefined;
    }>, "many">;
    proposedTeams: z.ZodArray<z.ZodObject<{
        parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            partyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strip", z.ZodTypeAny, {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }, {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }>, "many">>>;
        userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    }, "strip", z.ZodTypeAny, {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }, {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }>, "many">;
    version: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    version: number;
    additionalMembers: {
        partyID?: string | null | undefined;
        userIDs?: string[] | null | undefined;
    }[];
    proposedTeams: {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }[];
}, {
    version: number;
    additionalMembers: {
        partyID?: string | null | undefined;
        userIDs?: string[] | null | undefined;
    }[];
    proposedTeams: {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }[];
}>;
interface AppendTeamGameSessionRequest extends z.TypeOf<typeof AppendTeamGameSessionRequest> {
}

declare const CreateGameSessionRequest: z.ZodObject<{
    appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    attributes: z.ZodRecord<z.ZodString, z.ZodAny>;
    autoJoin: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    backfillTicketID: z.ZodString;
    clientVersion: z.ZodString;
    configurationName: z.ZodString;
    customURLGRPC: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    deployment: z.ZodString;
    dsSource: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    fallbackClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    inactiveTimeout: z.ZodNumber;
    inviteTimeout: z.ZodNumber;
    joinability: z.ZodString;
    matchPool: z.ZodString;
    maxPlayers: z.ZodNumber;
    minPlayers: z.ZodNumber;
    preferredClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    requestedRegions: z.ZodArray<z.ZodString, "many">;
    serverName: z.ZodString;
    storage: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        leader: z.ZodRecord<z.ZodString, z.ZodAny>;
    }, "strip", z.ZodTypeAny, {
        leader: Record<string, any>;
    }, {
        leader: Record<string, any>;
    }>>>;
    teams: z.ZodArray<z.ZodObject<{
        parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            partyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strip", z.ZodTypeAny, {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }, {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }>, "many">>>;
        userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    }, "strip", z.ZodTypeAny, {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }, {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }>, "many">;
    textChat: z.ZodBoolean;
    ticketIDs: z.ZodArray<z.ZodString, "many">;
    tieTeamsSessionLifetime: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    type: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: string;
    attributes: Record<string, any>;
    clientVersion: string;
    deployment: string;
    inactiveTimeout: number;
    inviteTimeout: number;
    joinability: string;
    maxPlayers: number;
    minPlayers: number;
    requestedRegions: string[];
    textChat: boolean;
    backfillTicketID: string;
    matchPool: string;
    teams: {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }[];
    ticketIDs: string[];
    configurationName: string;
    serverName: string;
    appName?: string | null | undefined;
    autoJoin?: boolean | null | undefined;
    customURLGRPC?: string | null | undefined;
    dsSource?: string | null | undefined;
    fallbackClaimKeys?: string[] | null | undefined;
    preferredClaimKeys?: string[] | null | undefined;
    tieTeamsSessionLifetime?: boolean | null | undefined;
    storage?: {
        leader: Record<string, any>;
    } | null | undefined;
}, {
    type: string;
    attributes: Record<string, any>;
    clientVersion: string;
    deployment: string;
    inactiveTimeout: number;
    inviteTimeout: number;
    joinability: string;
    maxPlayers: number;
    minPlayers: number;
    requestedRegions: string[];
    textChat: boolean;
    backfillTicketID: string;
    matchPool: string;
    teams: {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }[];
    ticketIDs: string[];
    configurationName: string;
    serverName: string;
    appName?: string | null | undefined;
    autoJoin?: boolean | null | undefined;
    customURLGRPC?: string | null | undefined;
    dsSource?: string | null | undefined;
    fallbackClaimKeys?: string[] | null | undefined;
    preferredClaimKeys?: string[] | null | undefined;
    tieTeamsSessionLifetime?: boolean | null | undefined;
    storage?: {
        leader: Record<string, any>;
    } | null | undefined;
}>;
interface CreateGameSessionRequest extends z.TypeOf<typeof CreateGameSessionRequest> {
}

declare const CreatePartyRequest: z.ZodObject<{
    attributes: z.ZodRecord<z.ZodString, z.ZodAny>;
    configurationName: z.ZodString;
    inactiveTimeout: z.ZodNumber;
    inviteTimeout: z.ZodNumber;
    joinability: z.ZodString;
    maxPlayers: z.ZodNumber;
    members: z.ZodArray<z.ZodObject<{
        ID: z.ZodString;
        PlatformID: z.ZodString;
        PlatformUserID: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        ID: string;
        PlatformID: string;
        PlatformUserID: string;
    }, {
        ID: string;
        PlatformID: string;
        PlatformUserID: string;
    }>, "many">;
    minPlayers: z.ZodNumber;
    textChat: z.ZodBoolean;
    type: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: string;
    attributes: Record<string, any>;
    inactiveTimeout: number;
    inviteTimeout: number;
    joinability: string;
    maxPlayers: number;
    minPlayers: number;
    textChat: boolean;
    members: {
        ID: string;
        PlatformID: string;
        PlatformUserID: string;
    }[];
    configurationName: string;
}, {
    type: string;
    attributes: Record<string, any>;
    inactiveTimeout: number;
    inviteTimeout: number;
    joinability: string;
    maxPlayers: number;
    minPlayers: number;
    textChat: boolean;
    members: {
        ID: string;
        PlatformID: string;
        PlatformUserID: string;
    }[];
    configurationName: string;
}>;
interface CreatePartyRequest extends z.TypeOf<typeof CreatePartyRequest> {
}

declare const GameSessionResponse: z.ZodObject<{
    DSInformation: z.ZodObject<{
        CreatedAt: z.ZodString;
        RequestedAt: z.ZodString;
        Server: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            alternate_ips: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            ams_protocol: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                name: z.ZodString;
                protocol: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
                protocol: string;
            }, {
                name: string;
                protocol: string;
            }>, "many">>>;
            custom_attribute: z.ZodString;
            deployment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            extend_region: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            game_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            image_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            ip: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            is_override_game_version: z.ZodBoolean;
            last_update: z.ZodString;
            namespace: z.ZodString;
            pod_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            port: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            ports: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
            protocol: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            provider: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            region: z.ZodString;
            session_id: z.ZodString;
            source: z.ZodString;
            status: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            namespace: string;
            status: string;
            custom_attribute: string;
            is_override_game_version: boolean;
            last_update: string;
            region: string;
            session_id: string;
            source: string;
            deployment?: string | null | undefined;
            protocol?: string | null | undefined;
            alternate_ips?: string[] | null | undefined;
            ams_protocol?: {
                name: string;
                protocol: string;
            }[] | null | undefined;
            extend_region?: string | null | undefined;
            game_version?: string | null | undefined;
            image_version?: string | null | undefined;
            ip?: string | null | undefined;
            pod_name?: string | null | undefined;
            port?: number | null | undefined;
            ports?: Record<string, number> | null | undefined;
            provider?: string | null | undefined;
        }, {
            namespace: string;
            status: string;
            custom_attribute: string;
            is_override_game_version: boolean;
            last_update: string;
            region: string;
            session_id: string;
            source: string;
            deployment?: string | null | undefined;
            protocol?: string | null | undefined;
            alternate_ips?: string[] | null | undefined;
            ams_protocol?: {
                name: string;
                protocol: string;
            }[] | null | undefined;
            extend_region?: string | null | undefined;
            game_version?: string | null | undefined;
            image_version?: string | null | undefined;
            ip?: string | null | undefined;
            pod_name?: string | null | undefined;
            port?: number | null | undefined;
            ports?: Record<string, number> | null | undefined;
            provider?: string | null | undefined;
        }>>>;
        Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        StatusV2: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        CreatedAt: string;
        RequestedAt: string;
        Server?: {
            namespace: string;
            status: string;
            custom_attribute: string;
            is_override_game_version: boolean;
            last_update: string;
            region: string;
            session_id: string;
            source: string;
            deployment?: string | null | undefined;
            protocol?: string | null | undefined;
            alternate_ips?: string[] | null | undefined;
            ams_protocol?: {
                name: string;
                protocol: string;
            }[] | null | undefined;
            extend_region?: string | null | undefined;
            game_version?: string | null | undefined;
            image_version?: string | null | undefined;
            ip?: string | null | undefined;
            pod_name?: string | null | undefined;
            port?: number | null | undefined;
            ports?: Record<string, number> | null | undefined;
            provider?: string | null | undefined;
        } | null | undefined;
        Status?: string | null | undefined;
        StatusV2?: string | null | undefined;
    }, {
        CreatedAt: string;
        RequestedAt: string;
        Server?: {
            namespace: string;
            status: string;
            custom_attribute: string;
            is_override_game_version: boolean;
            last_update: string;
            region: string;
            session_id: string;
            source: string;
            deployment?: string | null | undefined;
            protocol?: string | null | undefined;
            alternate_ips?: string[] | null | undefined;
            ams_protocol?: {
                name: string;
                protocol: string;
            }[] | null | undefined;
            extend_region?: string | null | undefined;
            game_version?: string | null | undefined;
            image_version?: string | null | undefined;
            ip?: string | null | undefined;
            pod_name?: string | null | undefined;
            port?: number | null | undefined;
            ports?: Record<string, number> | null | undefined;
            provider?: string | null | undefined;
        } | null | undefined;
        Status?: string | null | undefined;
        StatusV2?: string | null | undefined;
    }>;
    attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    backfillTicketID: z.ZodString;
    code: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    configuration: z.ZodObject<{
        PSNBaseURL: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        autoJoin: z.ZodBoolean;
        clientVersion: z.ZodString;
        customURLGRPC: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        deployment: z.ZodString;
        disableCodeGeneration: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        disableResendInvite: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        dsManualSetReady: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        dsSource: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        enableSecret: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        fallbackClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        grpcSessionConfig: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            customURL: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            functionFlag: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        }, {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        }>>>;
        immutableStorage: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        inactiveTimeout: z.ZodNumber;
        inviteTimeout: z.ZodNumber;
        joinability: z.ZodString;
        leaderElectionGracePeriod: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        manualRejoin: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        maxActiveSession: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        maxPlayers: z.ZodNumber;
        minPlayers: z.ZodNumber;
        name: z.ZodString;
        nativeSessionSetting: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            PSNServiceLabel: z.ZodNumber;
            PSNSupportedPlatforms: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            SessionTitle: z.ZodString;
            ShouldSync: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            XboxAllowCrossPlatform: z.ZodBoolean;
            XboxSandboxID: z.ZodString;
            XboxServiceConfigID: z.ZodString;
            XboxSessionTemplateName: z.ZodString;
            XboxTitleID: z.ZodString;
            localizedSessionName: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        }, "strip", z.ZodTypeAny, {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        }, {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        }>>>;
        persistent: z.ZodBoolean;
        preferredClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        requestedRegions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        textChat: z.ZodBoolean;
        tieTeamsSessionLifetime: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        type: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: string;
        autoJoin: boolean;
        clientVersion: string;
        deployment: string;
        inactiveTimeout: number;
        inviteTimeout: number;
        joinability: string;
        maxPlayers: number;
        minPlayers: number;
        name: string;
        persistent: boolean;
        textChat: boolean;
        appName?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        customURLGRPC?: string | null | undefined;
        disableCodeGeneration?: boolean | null | undefined;
        disableResendInvite?: boolean | null | undefined;
        dsManualSetReady?: boolean | null | undefined;
        dsSource?: string | null | undefined;
        enableSecret?: boolean | null | undefined;
        fallbackClaimKeys?: string[] | null | undefined;
        grpcSessionConfig?: {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        } | null | undefined;
        immutableStorage?: boolean | null | undefined;
        leaderElectionGracePeriod?: number | null | undefined;
        manualRejoin?: boolean | null | undefined;
        nativeSessionSetting?: {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        } | null | undefined;
        preferredClaimKeys?: string[] | null | undefined;
        requestedRegions?: string[] | null | undefined;
        tieTeamsSessionLifetime?: boolean | null | undefined;
        PSNBaseURL?: string | null | undefined;
        maxActiveSession?: number | null | undefined;
    }, {
        type: string;
        autoJoin: boolean;
        clientVersion: string;
        deployment: string;
        inactiveTimeout: number;
        inviteTimeout: number;
        joinability: string;
        maxPlayers: number;
        minPlayers: number;
        name: string;
        persistent: boolean;
        textChat: boolean;
        appName?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        customURLGRPC?: string | null | undefined;
        disableCodeGeneration?: boolean | null | undefined;
        disableResendInvite?: boolean | null | undefined;
        dsManualSetReady?: boolean | null | undefined;
        dsSource?: string | null | undefined;
        enableSecret?: boolean | null | undefined;
        fallbackClaimKeys?: string[] | null | undefined;
        grpcSessionConfig?: {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        } | null | undefined;
        immutableStorage?: boolean | null | undefined;
        leaderElectionGracePeriod?: number | null | undefined;
        manualRejoin?: boolean | null | undefined;
        nativeSessionSetting?: {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        } | null | undefined;
        preferredClaimKeys?: string[] | null | undefined;
        requestedRegions?: string[] | null | undefined;
        tieTeamsSessionLifetime?: boolean | null | undefined;
        PSNBaseURL?: string | null | undefined;
        maxActiveSession?: number | null | undefined;
    }>;
    createdAt: z.ZodString;
    createdBy: z.ZodString;
    expiredAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    isActive: z.ZodBoolean;
    isFull: z.ZodBoolean;
    leaderID: z.ZodString;
    matchPool: z.ZodString;
    members: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        platformID: z.ZodString;
        platformUserID: z.ZodString;
        previousStatus: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        status: z.ZodString;
        statusV2: z.ZodString;
        updatedAt: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        status: string;
        updatedAt: string;
        id: string;
        platformID: string;
        platformUserID: string;
        statusV2: string;
        previousStatus?: string | null | undefined;
    }, {
        status: string;
        updatedAt: string;
        id: string;
        platformID: string;
        platformUserID: string;
        statusV2: string;
        previousStatus?: string | null | undefined;
    }>, "many">;
    namespace: z.ZodString;
    storage: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    teams: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            partyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strip", z.ZodTypeAny, {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }, {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }>, "many">>>;
        userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    }, "strip", z.ZodTypeAny, {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }, {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }>, "many">>>;
    ticketIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    updatedAt: z.ZodString;
    version: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    updatedAt: string;
    createdAt: string;
    id: string;
    DSInformation: {
        CreatedAt: string;
        RequestedAt: string;
        Server?: {
            namespace: string;
            status: string;
            custom_attribute: string;
            is_override_game_version: boolean;
            last_update: string;
            region: string;
            session_id: string;
            source: string;
            deployment?: string | null | undefined;
            protocol?: string | null | undefined;
            alternate_ips?: string[] | null | undefined;
            ams_protocol?: {
                name: string;
                protocol: string;
            }[] | null | undefined;
            extend_region?: string | null | undefined;
            game_version?: string | null | undefined;
            image_version?: string | null | undefined;
            ip?: string | null | undefined;
            pod_name?: string | null | undefined;
            port?: number | null | undefined;
            ports?: Record<string, number> | null | undefined;
            provider?: string | null | undefined;
        } | null | undefined;
        Status?: string | null | undefined;
        StatusV2?: string | null | undefined;
    };
    backfillTicketID: string;
    configuration: {
        type: string;
        autoJoin: boolean;
        clientVersion: string;
        deployment: string;
        inactiveTimeout: number;
        inviteTimeout: number;
        joinability: string;
        maxPlayers: number;
        minPlayers: number;
        name: string;
        persistent: boolean;
        textChat: boolean;
        appName?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        customURLGRPC?: string | null | undefined;
        disableCodeGeneration?: boolean | null | undefined;
        disableResendInvite?: boolean | null | undefined;
        dsManualSetReady?: boolean | null | undefined;
        dsSource?: string | null | undefined;
        enableSecret?: boolean | null | undefined;
        fallbackClaimKeys?: string[] | null | undefined;
        grpcSessionConfig?: {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        } | null | undefined;
        immutableStorage?: boolean | null | undefined;
        leaderElectionGracePeriod?: number | null | undefined;
        manualRejoin?: boolean | null | undefined;
        nativeSessionSetting?: {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        } | null | undefined;
        preferredClaimKeys?: string[] | null | undefined;
        requestedRegions?: string[] | null | undefined;
        tieTeamsSessionLifetime?: boolean | null | undefined;
        PSNBaseURL?: string | null | undefined;
        maxActiveSession?: number | null | undefined;
    };
    createdBy: string;
    isActive: boolean;
    isFull: boolean;
    leaderID: string;
    matchPool: string;
    members: {
        status: string;
        updatedAt: string;
        id: string;
        platformID: string;
        platformUserID: string;
        statusV2: string;
        previousStatus?: string | null | undefined;
    }[];
    version: number;
    code?: string | null | undefined;
    attributes?: Record<string, any> | null | undefined;
    expiredAt?: string | null | undefined;
    storage?: Record<string, any> | null | undefined;
    teams?: {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }[] | null | undefined;
    ticketIDs?: string[] | null | undefined;
}, {
    namespace: string;
    updatedAt: string;
    createdAt: string;
    id: string;
    DSInformation: {
        CreatedAt: string;
        RequestedAt: string;
        Server?: {
            namespace: string;
            status: string;
            custom_attribute: string;
            is_override_game_version: boolean;
            last_update: string;
            region: string;
            session_id: string;
            source: string;
            deployment?: string | null | undefined;
            protocol?: string | null | undefined;
            alternate_ips?: string[] | null | undefined;
            ams_protocol?: {
                name: string;
                protocol: string;
            }[] | null | undefined;
            extend_region?: string | null | undefined;
            game_version?: string | null | undefined;
            image_version?: string | null | undefined;
            ip?: string | null | undefined;
            pod_name?: string | null | undefined;
            port?: number | null | undefined;
            ports?: Record<string, number> | null | undefined;
            provider?: string | null | undefined;
        } | null | undefined;
        Status?: string | null | undefined;
        StatusV2?: string | null | undefined;
    };
    backfillTicketID: string;
    configuration: {
        type: string;
        autoJoin: boolean;
        clientVersion: string;
        deployment: string;
        inactiveTimeout: number;
        inviteTimeout: number;
        joinability: string;
        maxPlayers: number;
        minPlayers: number;
        name: string;
        persistent: boolean;
        textChat: boolean;
        appName?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        customURLGRPC?: string | null | undefined;
        disableCodeGeneration?: boolean | null | undefined;
        disableResendInvite?: boolean | null | undefined;
        dsManualSetReady?: boolean | null | undefined;
        dsSource?: string | null | undefined;
        enableSecret?: boolean | null | undefined;
        fallbackClaimKeys?: string[] | null | undefined;
        grpcSessionConfig?: {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        } | null | undefined;
        immutableStorage?: boolean | null | undefined;
        leaderElectionGracePeriod?: number | null | undefined;
        manualRejoin?: boolean | null | undefined;
        nativeSessionSetting?: {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        } | null | undefined;
        preferredClaimKeys?: string[] | null | undefined;
        requestedRegions?: string[] | null | undefined;
        tieTeamsSessionLifetime?: boolean | null | undefined;
        PSNBaseURL?: string | null | undefined;
        maxActiveSession?: number | null | undefined;
    };
    createdBy: string;
    isActive: boolean;
    isFull: boolean;
    leaderID: string;
    matchPool: string;
    members: {
        status: string;
        updatedAt: string;
        id: string;
        platformID: string;
        platformUserID: string;
        statusV2: string;
        previousStatus?: string | null | undefined;
    }[];
    version: number;
    code?: string | null | undefined;
    attributes?: Record<string, any> | null | undefined;
    expiredAt?: string | null | undefined;
    storage?: Record<string, any> | null | undefined;
    teams?: {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }[] | null | undefined;
    ticketIDs?: string[] | null | undefined;
}>;
interface GameSessionResponse extends z.TypeOf<typeof GameSessionResponse> {
}

declare const JoinByCodeRequest: z.ZodObject<{
    code: z.ZodString;
}, "strip", z.ZodTypeAny, {
    code: string;
}, {
    code: string;
}>;
interface JoinByCodeRequest extends z.TypeOf<typeof JoinByCodeRequest> {
}

declare const KickResponse: z.ZodObject<{
    leaderID: z.ZodString;
    members: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        platformID: z.ZodString;
        platformUserID: z.ZodString;
        previousStatus: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        status: z.ZodString;
        statusV2: z.ZodString;
        updatedAt: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        status: string;
        updatedAt: string;
        id: string;
        platformID: string;
        platformUserID: string;
        statusV2: string;
        previousStatus?: string | null | undefined;
    }, {
        status: string;
        updatedAt: string;
        id: string;
        platformID: string;
        platformUserID: string;
        statusV2: string;
        previousStatus?: string | null | undefined;
    }>, "many">;
    partyID: z.ZodString;
}, "strip", z.ZodTypeAny, {
    partyID: string;
    leaderID: string;
    members: {
        status: string;
        updatedAt: string;
        id: string;
        platformID: string;
        platformUserID: string;
        statusV2: string;
        previousStatus?: string | null | undefined;
    }[];
}, {
    partyID: string;
    leaderID: string;
    members: {
        status: string;
        updatedAt: string;
        id: string;
        platformID: string;
        platformUserID: string;
        statusV2: string;
        previousStatus?: string | null | undefined;
    }[];
}>;
interface KickResponse extends z.TypeOf<typeof KickResponse> {
}

declare const PartySessionResponse: z.ZodObject<{
    attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    code: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    configuration: z.ZodObject<{
        PSNBaseURL: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        autoJoin: z.ZodBoolean;
        clientVersion: z.ZodString;
        customURLGRPC: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        deployment: z.ZodString;
        disableCodeGeneration: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        disableResendInvite: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        dsManualSetReady: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        dsSource: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        enableSecret: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        fallbackClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        grpcSessionConfig: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            appName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            customURL: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            functionFlag: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        }, {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        }>>>;
        immutableStorage: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        inactiveTimeout: z.ZodNumber;
        inviteTimeout: z.ZodNumber;
        joinability: z.ZodString;
        leaderElectionGracePeriod: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        manualRejoin: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        maxActiveSession: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        maxPlayers: z.ZodNumber;
        minPlayers: z.ZodNumber;
        name: z.ZodString;
        nativeSessionSetting: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            PSNServiceLabel: z.ZodNumber;
            PSNSupportedPlatforms: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            SessionTitle: z.ZodString;
            ShouldSync: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            XboxAllowCrossPlatform: z.ZodBoolean;
            XboxSandboxID: z.ZodString;
            XboxServiceConfigID: z.ZodString;
            XboxSessionTemplateName: z.ZodString;
            XboxTitleID: z.ZodString;
            localizedSessionName: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        }, "strip", z.ZodTypeAny, {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        }, {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        }>>>;
        persistent: z.ZodBoolean;
        preferredClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        requestedRegions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        textChat: z.ZodBoolean;
        tieTeamsSessionLifetime: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        type: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: string;
        autoJoin: boolean;
        clientVersion: string;
        deployment: string;
        inactiveTimeout: number;
        inviteTimeout: number;
        joinability: string;
        maxPlayers: number;
        minPlayers: number;
        name: string;
        persistent: boolean;
        textChat: boolean;
        appName?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        customURLGRPC?: string | null | undefined;
        disableCodeGeneration?: boolean | null | undefined;
        disableResendInvite?: boolean | null | undefined;
        dsManualSetReady?: boolean | null | undefined;
        dsSource?: string | null | undefined;
        enableSecret?: boolean | null | undefined;
        fallbackClaimKeys?: string[] | null | undefined;
        grpcSessionConfig?: {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        } | null | undefined;
        immutableStorage?: boolean | null | undefined;
        leaderElectionGracePeriod?: number | null | undefined;
        manualRejoin?: boolean | null | undefined;
        nativeSessionSetting?: {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        } | null | undefined;
        preferredClaimKeys?: string[] | null | undefined;
        requestedRegions?: string[] | null | undefined;
        tieTeamsSessionLifetime?: boolean | null | undefined;
        PSNBaseURL?: string | null | undefined;
        maxActiveSession?: number | null | undefined;
    }, {
        type: string;
        autoJoin: boolean;
        clientVersion: string;
        deployment: string;
        inactiveTimeout: number;
        inviteTimeout: number;
        joinability: string;
        maxPlayers: number;
        minPlayers: number;
        name: string;
        persistent: boolean;
        textChat: boolean;
        appName?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        customURLGRPC?: string | null | undefined;
        disableCodeGeneration?: boolean | null | undefined;
        disableResendInvite?: boolean | null | undefined;
        dsManualSetReady?: boolean | null | undefined;
        dsSource?: string | null | undefined;
        enableSecret?: boolean | null | undefined;
        fallbackClaimKeys?: string[] | null | undefined;
        grpcSessionConfig?: {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        } | null | undefined;
        immutableStorage?: boolean | null | undefined;
        leaderElectionGracePeriod?: number | null | undefined;
        manualRejoin?: boolean | null | undefined;
        nativeSessionSetting?: {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        } | null | undefined;
        preferredClaimKeys?: string[] | null | undefined;
        requestedRegions?: string[] | null | undefined;
        tieTeamsSessionLifetime?: boolean | null | undefined;
        PSNBaseURL?: string | null | undefined;
        maxActiveSession?: number | null | undefined;
    }>;
    createdAt: z.ZodString;
    createdBy: z.ZodString;
    expiredAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    isActive: z.ZodBoolean;
    isFull: z.ZodBoolean;
    leaderID: z.ZodString;
    members: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        platformID: z.ZodString;
        platformUserID: z.ZodString;
        previousStatus: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        status: z.ZodString;
        statusV2: z.ZodString;
        updatedAt: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        status: string;
        updatedAt: string;
        id: string;
        platformID: string;
        platformUserID: string;
        statusV2: string;
        previousStatus?: string | null | undefined;
    }, {
        status: string;
        updatedAt: string;
        id: string;
        platformID: string;
        platformUserID: string;
        statusV2: string;
        previousStatus?: string | null | undefined;
    }>, "many">;
    namespace: z.ZodString;
    storage: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    updatedAt: z.ZodString;
    version: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    updatedAt: string;
    createdAt: string;
    id: string;
    configuration: {
        type: string;
        autoJoin: boolean;
        clientVersion: string;
        deployment: string;
        inactiveTimeout: number;
        inviteTimeout: number;
        joinability: string;
        maxPlayers: number;
        minPlayers: number;
        name: string;
        persistent: boolean;
        textChat: boolean;
        appName?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        customURLGRPC?: string | null | undefined;
        disableCodeGeneration?: boolean | null | undefined;
        disableResendInvite?: boolean | null | undefined;
        dsManualSetReady?: boolean | null | undefined;
        dsSource?: string | null | undefined;
        enableSecret?: boolean | null | undefined;
        fallbackClaimKeys?: string[] | null | undefined;
        grpcSessionConfig?: {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        } | null | undefined;
        immutableStorage?: boolean | null | undefined;
        leaderElectionGracePeriod?: number | null | undefined;
        manualRejoin?: boolean | null | undefined;
        nativeSessionSetting?: {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        } | null | undefined;
        preferredClaimKeys?: string[] | null | undefined;
        requestedRegions?: string[] | null | undefined;
        tieTeamsSessionLifetime?: boolean | null | undefined;
        PSNBaseURL?: string | null | undefined;
        maxActiveSession?: number | null | undefined;
    };
    createdBy: string;
    isActive: boolean;
    isFull: boolean;
    leaderID: string;
    members: {
        status: string;
        updatedAt: string;
        id: string;
        platformID: string;
        platformUserID: string;
        statusV2: string;
        previousStatus?: string | null | undefined;
    }[];
    version: number;
    code?: string | null | undefined;
    attributes?: Record<string, any> | null | undefined;
    expiredAt?: string | null | undefined;
    storage?: Record<string, any> | null | undefined;
}, {
    namespace: string;
    updatedAt: string;
    createdAt: string;
    id: string;
    configuration: {
        type: string;
        autoJoin: boolean;
        clientVersion: string;
        deployment: string;
        inactiveTimeout: number;
        inviteTimeout: number;
        joinability: string;
        maxPlayers: number;
        minPlayers: number;
        name: string;
        persistent: boolean;
        textChat: boolean;
        appName?: string | null | undefined;
        attributes?: Record<string, any> | null | undefined;
        customURLGRPC?: string | null | undefined;
        disableCodeGeneration?: boolean | null | undefined;
        disableResendInvite?: boolean | null | undefined;
        dsManualSetReady?: boolean | null | undefined;
        dsSource?: string | null | undefined;
        enableSecret?: boolean | null | undefined;
        fallbackClaimKeys?: string[] | null | undefined;
        grpcSessionConfig?: {
            appName?: string | null | undefined;
            customURL?: string | null | undefined;
            functionFlag?: number | null | undefined;
        } | null | undefined;
        immutableStorage?: boolean | null | undefined;
        leaderElectionGracePeriod?: number | null | undefined;
        manualRejoin?: boolean | null | undefined;
        nativeSessionSetting?: {
            PSNServiceLabel: number;
            SessionTitle: string;
            XboxAllowCrossPlatform: boolean;
            XboxSandboxID: string;
            XboxServiceConfigID: string;
            XboxSessionTemplateName: string;
            XboxTitleID: string;
            PSNSupportedPlatforms?: string[] | null | undefined;
            ShouldSync?: boolean | null | undefined;
            localizedSessionName?: Record<string, any> | null | undefined;
        } | null | undefined;
        preferredClaimKeys?: string[] | null | undefined;
        requestedRegions?: string[] | null | undefined;
        tieTeamsSessionLifetime?: boolean | null | undefined;
        PSNBaseURL?: string | null | undefined;
        maxActiveSession?: number | null | undefined;
    };
    createdBy: string;
    isActive: boolean;
    isFull: boolean;
    leaderID: string;
    members: {
        status: string;
        updatedAt: string;
        id: string;
        platformID: string;
        platformUserID: string;
        statusV2: string;
        previousStatus?: string | null | undefined;
    }[];
    version: number;
    code?: string | null | undefined;
    attributes?: Record<string, any> | null | undefined;
    expiredAt?: string | null | undefined;
    storage?: Record<string, any> | null | undefined;
}>;
interface PartySessionResponse extends z.TypeOf<typeof PartySessionResponse> {
}

declare const PlayerAttributesRequestBody: z.ZodObject<{
    crossplayEnabled: z.ZodBoolean;
    currentPlatform: z.ZodString;
    data: z.ZodRecord<z.ZodString, z.ZodAny>;
    platforms: z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        userID: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        name: string;
        userID: string;
    }, {
        name: string;
        userID: string;
    }>, "many">;
    roles: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    simultaneousPlatform: z.ZodString;
}, "strip", z.ZodTypeAny, {
    data: Record<string, any>;
    crossplayEnabled: boolean;
    currentPlatform: string;
    platforms: {
        name: string;
        userID: string;
    }[];
    simultaneousPlatform: string;
    roles?: string[] | null | undefined;
}, {
    data: Record<string, any>;
    crossplayEnabled: boolean;
    currentPlatform: string;
    platforms: {
        name: string;
        userID: string;
    }[];
    simultaneousPlatform: string;
    roles?: string[] | null | undefined;
}>;
interface PlayerAttributesRequestBody extends z.TypeOf<typeof PlayerAttributesRequestBody> {
}

declare const PlayersCurrentPlatformRequest: z.ZodObject<{
    userIDs: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    userIDs: string[];
}, {
    userIDs: string[];
}>;
interface PlayersCurrentPlatformRequest extends z.TypeOf<typeof PlayersCurrentPlatformRequest> {
}

declare const PlayersCurrentPlatformResponse: z.ZodObject<{
    data: z.ZodArray<z.ZodObject<{
        crossplayEnabled: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        currentPlatform: z.ZodString;
        userID: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        userID: string;
        currentPlatform: string;
        crossplayEnabled?: boolean | null | undefined;
    }, {
        userID: string;
        currentPlatform: string;
        crossplayEnabled?: boolean | null | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    data: {
        userID: string;
        currentPlatform: string;
        crossplayEnabled?: boolean | null | undefined;
    }[];
}, {
    data: {
        userID: string;
        currentPlatform: string;
        crossplayEnabled?: boolean | null | undefined;
    }[];
}>;
interface PlayersCurrentPlatformResponse extends z.TypeOf<typeof PlayersCurrentPlatformResponse> {
}

declare const PromoteLeaderRequest: z.ZodObject<{
    leaderID: z.ZodString;
}, "strip", z.ZodTypeAny, {
    leaderID: string;
}, {
    leaderID: string;
}>;
interface PromoteLeaderRequest extends z.TypeOf<typeof PromoteLeaderRequest> {
}

declare const ServerSecret: z.ZodObject<{
    secret: z.ZodString;
}, "strip", z.ZodTypeAny, {
    secret: string;
}, {
    secret: string;
}>;
interface ServerSecret extends z.TypeOf<typeof ServerSecret> {
}

declare const SessionInviteRequest: z.ZodObject<{
    platformID: z.ZodString;
    userID: z.ZodString;
}, "strip", z.ZodTypeAny, {
    platformID: string;
    userID: string;
}, {
    platformID: string;
    userID: string;
}>;
interface SessionInviteRequest extends z.TypeOf<typeof SessionInviteRequest> {
}

declare const SessionInviteResponse: z.ZodObject<{
    platformUserID: z.ZodString;
}, "strip", z.ZodTypeAny, {
    platformUserID: string;
}, {
    platformUserID: string;
}>;
interface SessionInviteResponse extends z.TypeOf<typeof SessionInviteResponse> {
}

declare const UpdateGameSessionBackfillRequest: z.ZodObject<{
    backfillTicketID: z.ZodString;
}, "strip", z.ZodTypeAny, {
    backfillTicketID: string;
}, {
    backfillTicketID: string;
}>;
interface UpdateGameSessionBackfillRequest extends z.TypeOf<typeof UpdateGameSessionBackfillRequest> {
}

declare const UpdateGameSessionRequest: z.ZodObject<{
    attributes: z.ZodRecord<z.ZodString, z.ZodAny>;
    backfillTicketID: z.ZodString;
    clientVersion: z.ZodString;
    deployment: z.ZodString;
    fallbackClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    inactiveTimeout: z.ZodNumber;
    inviteTimeout: z.ZodNumber;
    joinability: z.ZodString;
    matchPool: z.ZodString;
    maxPlayers: z.ZodNumber;
    minPlayers: z.ZodNumber;
    preferredClaimKeys: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    requestedRegions: z.ZodArray<z.ZodString, "many">;
    teams: z.ZodArray<z.ZodObject<{
        parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            partyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strip", z.ZodTypeAny, {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }, {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }>, "many">>>;
        userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    }, "strip", z.ZodTypeAny, {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }, {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }>, "many">;
    ticketIDs: z.ZodArray<z.ZodString, "many">;
    tieTeamsSessionLifetime: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    type: z.ZodString;
    version: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    type: string;
    attributes: Record<string, any>;
    clientVersion: string;
    deployment: string;
    inactiveTimeout: number;
    inviteTimeout: number;
    joinability: string;
    maxPlayers: number;
    minPlayers: number;
    requestedRegions: string[];
    backfillTicketID: string;
    matchPool: string;
    teams: {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }[];
    ticketIDs: string[];
    version: number;
    fallbackClaimKeys?: string[] | null | undefined;
    preferredClaimKeys?: string[] | null | undefined;
    tieTeamsSessionLifetime?: boolean | null | undefined;
}, {
    type: string;
    attributes: Record<string, any>;
    clientVersion: string;
    deployment: string;
    inactiveTimeout: number;
    inviteTimeout: number;
    joinability: string;
    maxPlayers: number;
    minPlayers: number;
    requestedRegions: string[];
    backfillTicketID: string;
    matchPool: string;
    teams: {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }[];
    ticketIDs: string[];
    version: number;
    fallbackClaimKeys?: string[] | null | undefined;
    preferredClaimKeys?: string[] | null | undefined;
    tieTeamsSessionLifetime?: boolean | null | undefined;
}>;
interface UpdateGameSessionRequest extends z.TypeOf<typeof UpdateGameSessionRequest> {
}

declare const UpdatePartyRequest: z.ZodObject<{
    attributes: z.ZodRecord<z.ZodString, z.ZodAny>;
    inactiveTimeout: z.ZodNumber;
    inviteTimeout: z.ZodNumber;
    joinability: z.ZodString;
    maxPlayers: z.ZodNumber;
    minPlayers: z.ZodNumber;
    type: z.ZodString;
    version: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    type: string;
    attributes: Record<string, any>;
    inactiveTimeout: number;
    inviteTimeout: number;
    joinability: string;
    maxPlayers: number;
    minPlayers: number;
    version: number;
}, {
    type: string;
    attributes: Record<string, any>;
    inactiveTimeout: number;
    inviteTimeout: number;
    joinability: string;
    maxPlayers: number;
    minPlayers: number;
    version: number;
}>;
interface UpdatePartyRequest extends z.TypeOf<typeof UpdatePartyRequest> {
}

export { AppendTeamGameSessionRequest as A, SessionInviteResponse as B, Configuration as C, DsmConfigRecord as D, EnvironmentVariableListResponse as E, PlayersCurrentPlatformRequest as F, GameSessionQueryResponse as G, PlayersCurrentPlatformResponse as H, PlayerAttributesRequestBody as I, JoinByCodeRequest as J, KickResponse as K, MemberActiveSession as M, NativeSessionPagingResponse as N, PlatformCredentials as P, RequestReconcileMaxActiveSession as R, SetDsReadyRequest as S, UpdateConfigurationTemplateRequest as U, CreateConfigurationTemplateRequest as a, ConfigurationTemplateResponse as b, ConfigurationTemplatesResponse as c, ConfigAlertResponse as d, ConfigAlertRequestCreate as e, DefaultDsmcConfig as f, DeleteBulkGameSessionRequest as g, DeleteBulkGameSessionsApiResponse as h, UpdateGameSessionMemberStatusResponse as i, GlobalConfigurationResponse as j, PutGlobalConfigurationRequest as k, PartyQueryResponse as l, PutPlatformCredentialsRequest as m, PlayerAttributesResponseBodyArray as n, PlayerAttributesResponseBody as o, RecentPlayerQueryResponse as p, CreateGameSessionRequest as q, GameSessionResponse as r, UpdateGameSessionRequest as s, SessionInviteRequest as t, PromoteLeaderRequest as u, ServerSecret as v, UpdateGameSessionBackfillRequest as w, CreatePartyRequest as x, PartySessionResponse as y, UpdatePartyRequest as z };
