{"version":3,"sources":["../../../src/input-validation/validateNotEmpty.ts"],"names":[],"mappings":";;;;AAUO,MAAM,4BAA4B,CAAE,CAAA,IAAA,CAAK,CAAC,yBAA0B,CAAA,IAAA,CAAK,KAAK,CAAC,EAAA;AAQzE,MAAA,gBAAA,GAAmB,CAAC,KAAA,EAAe,OAAsB,KAAA;AACpE,EAAI,IAAA,OAAA,CAAQ,KAAO,EAAA,OAAO,CAAG,EAAA;AAC3B,IAAA,OAAO,0BAA0B,IAAK,CAAA,KAAA,CAAA;AAAA,GACxC;AACA,EAAO,OAAA,IAAA,CAAA;AACT","file":"validateNotEmpty.js","sourcesContent":["/*\n * Copyright (c) 2019-2023 AccelByte Inc. All Rights Reserved\n * This is licensed software from AccelByte Inc, for limitations\n * and restrictions contact your company contract manager.\n */\n\nimport isEmpty from 'validator/lib/isEmpty.js'\nimport { z } from 'zod'\nimport { CommonValidationErrorType } from './constant/errorType'\n\nexport const ValidateNotEmptyErrorType = z.enum([CommonValidationErrorType.enum.empty])\nexport type ValidateNotEmptyErrorType = z.infer<typeof ValidateNotEmptyErrorType>\n\ninterface Options {\n  // eslint-disable-next-line camelcase\n  ignore_whitespace: boolean\n}\n\nexport const validateNotEmpty = (value: string, options?: Options) => {\n  if (isEmpty(value, options)) {\n    return ValidateNotEmptyErrorType.enum.empty\n  }\n  return null\n}\n"]}