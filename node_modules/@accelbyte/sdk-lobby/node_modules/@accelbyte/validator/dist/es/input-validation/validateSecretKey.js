import isEmpty from 'validator/lib/isEmpty.js';
import matches from 'validator/lib/matches.js';
import { z } from 'zod';
import { CommonValidationErrorType } from './constant/errorType';
import { ValidateLengthErrorType, validateLength } from './validateLength';

const ValidateSecretKeyErrorType = z.enum([...ValidateLengthErrorType.options, CommonValidationErrorType.enum.invalidFormat]);
const validateSecretKey = (value, { isRequired = true, maxLength = 256 } = {}) => {
  const REGEX = `^[^*\\s]+$`;
  if (isEmpty(value)) {
    if (!isRequired) {
      return null;
    }
    return ValidateSecretKeyErrorType.enum.empty;
  }
  if (!matches(value, REGEX)) {
    return ValidateSecretKeyErrorType.enum.invalidFormat;
  }
  return validateLength(value, { max: maxLength });
};

export { ValidateSecretKeyErrorType, validateSecretKey };
//# sourceMappingURL=validateSecretKey.js.map
//# sourceMappingURL=validateSecretKey.js.map