{"version":3,"sources":["../../../src/input-validation/validatePageTitle.ts"],"names":[],"mappings":";;;;AAUa,MAAA,0BAAA,GAA6B,EAAE,IAAK,CAAA;AAAA,EAC/C,0BAA0B,IAAK,CAAA,qBAAA;AAAA,EAC/B,0BAA0B,IAAK,CAAA,cAAA;AACjC,CAAC,EAAA;AAGY,MAAA,iBAAA,GAAoB,CAAC,KAAA,EAAe,SAAsB,KAAA;AACrE,EAAA,IAAI,OAAQ,CAAA,KAAK,CAAG,EAAA,OAAO,2BAA2B,IAAK,CAAA,cAAA,CAAA;AAE3D,EAAA,IAAI,KAAM,CAAA,MAAA,GAAS,SAAW,EAAA,OAAO,2BAA2B,IAAK,CAAA,qBAAA,CAAA;AAErE,EAAO,OAAA,IAAA,CAAA;AACT","file":"validatePageTitle.js","sourcesContent":["/*\n * Copyright (c) 2023 AccelByte Inc. All Rights Reserved\n * This is licensed software from AccelByte Inc, for limitations\n * and restrictions contact your company contract manager.\n */\n\nimport isEmpty from 'validator/lib/isEmpty.js'\nimport { z } from 'zod'\nimport { CommonValidationErrorType } from './constant/errorType'\n\nexport const ValidatePageTitleErrorType = z.enum([\n  CommonValidationErrorType.enum.exceedPageTitleLength,\n  CommonValidationErrorType.enum.emptyPageTitle\n])\nexport type ValidatePageTitleErrorType = z.infer<typeof ValidatePageTitleErrorType>\n\nexport const validatePageTitle = (value: string, maxLength: number) => {\n  if (isEmpty(value)) return ValidatePageTitleErrorType.enum.emptyPageTitle\n\n  if (value.length > maxLength) return ValidatePageTitleErrorType.enum.exceedPageTitleLength\n\n  return null\n}\n"]}