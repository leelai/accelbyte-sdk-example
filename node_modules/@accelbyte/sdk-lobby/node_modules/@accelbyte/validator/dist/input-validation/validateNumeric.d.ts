import { z } from 'zod';

declare const ValidateNumericErrorType: z.ZodEnum<["empty", "lessThanMinimumValue", "exceedMaximumValue", "invalidValue", "containsDecimal"]>;
type ValidateNumericErrorType = z.infer<typeof ValidateNumericErrorType>;
interface ValidateNumericOption {
    min?: number;
    max?: number;
    isRequired?: boolean;
    excludedNumbers?: number[];
    allowDecimal?: boolean;
}
declare const validateNumeric: (value: string, { min, max, isRequired, excludedNumbers, allowDecimal }?: ValidateNumericOption) => "empty" | "lessThanMinimumValue" | "exceedMaximumValue" | "invalidValue" | "containsDecimal" | null;

export { ValidateNumericErrorType, type ValidateNumericOption, validateNumeric };
