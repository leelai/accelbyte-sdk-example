import {
  AddCountryGroupResponse,
  AnonymizationAdmin$,
  AnonymizationAdminApi,
  ConfigAdmin$,
  ConfigAdminApi,
  ConfigInfo,
  CountryGroupObject,
  CountryObject,
  CountryObjectArray,
  FileUpload$,
  FileUploadAdmin$,
  FileUploadAdminApi,
  FileUploadApi,
  FileUploadUrlInfo,
  Misc$,
  MiscAdmin$,
  MiscAdminApi,
  MiscApi,
  Namespace$,
  NamespaceAdmin$,
  NamespaceAdminApi,
  NamespaceApi,
  NamespaceContext,
  NamespaceInfo,
  NamespaceInfoArray,
  NamespacePublisherInfo,
  NamespaceSimpleInfo,
  RetrieveCountryGroupResponse,
  RetrieveCountryGroupResponseArray,
  RetrieveTimeResponse,
  UserProfile$,
  UserProfileAdmin$,
  UserProfileAdminApi,
  UserProfileApi,
  UserProfileInfo,
  UserProfilePrivateInfo,
  UserProfilePublicInfo,
  UserProfilePublicInfoArray,
  UserZipCode
} from "./chunk-SVP536Z5.js";

// package.json
var name = "@accelbyte/sdk-basic";
var version = "6.0.0";
var author = "AccelByte Inc";

// src/Basic.ts
console.log(`${name}@${version}`);
var apis = {
  NamespaceAdminApi,
  ConfigAdminApi,
  MiscAdminApi,
  UserProfileAdminApi,
  FileUploadAdminApi,
  AnonymizationAdminApi,
  MiscApi,
  NamespaceApi,
  UserProfileApi,
  FileUploadApi,
  version: () => console.log({
    version,
    name,
    author
  })
};
var Basic = apis;

// src/generated-definitions/AddCountryGroupRequest.ts
import { z } from "zod";
var AddCountryGroupRequest = z.object({
  countries: z.array(CountryObject).nullish(),
  countryGroupCode: z.string().nullish(),
  countryGroupName: z.string().nullish()
});

// src/generated-definitions/ConfigCreate.ts
import { z as z2 } from "zod";
var ConfigCreate = z2.object({ key: z2.string(), value: z2.string() });

// src/generated-definitions/ConfigUpdate.ts
import { z as z3 } from "zod";
var ConfigUpdate = z3.object({ value: z3.string() });

// src/generated-definitions/ErrorEntity.ts
import { z as z5 } from "zod";

// src/generated-definitions/Permission.ts
import { z as z4 } from "zod";
var Permission = z4.object({ action: z4.number().int().nullish(), resource: z4.string().nullish() });

// src/generated-definitions/ErrorEntity.ts
var ErrorEntity = z5.object({
  devStackTrace: z5.string().nullish(),
  errorCode: z5.number().int(),
  errorMessage: z5.string(),
  messageVariables: z5.record(z5.string()).nullish(),
  requiredPermission: Permission.nullish()
});

// src/generated-definitions/FieldValidationError.ts
import { z as z6 } from "zod";
var FieldValidationError = z6.object({
  errorCode: z6.string().nullish(),
  errorField: z6.string().nullish(),
  errorMessage: z6.string().nullish(),
  errorValue: z6.string().nullish(),
  messageVariables: z6.record(z6.string()).nullish()
});

// src/generated-definitions/NamespaceCreate.ts
import { z as z7 } from "zod";
var NamespaceCreate = z7.object({ displayName: z7.string(), namespace: z7.string() });

// src/generated-definitions/NamespaceStatusUpdate.ts
import { z as z8 } from "zod";
var NamespaceStatusUpdate = z8.object({ status: z8.enum(["ACTIVE", "INACTIVE"]) });

// src/generated-definitions/NamespaceUpdate.ts
import { z as z9 } from "zod";
var NamespaceUpdate = z9.object({ displayName: z9.string() });

// src/generated-definitions/UpdateCountryGroupRequest.ts
import { z as z10 } from "zod";
var UpdateCountryGroupRequest = z10.object({ countries: z10.array(CountryObject).nullish(), countryGroupName: z10.string().nullish() });

// src/generated-definitions/UserProfileAdmin.ts
import { z as z11 } from "zod";
var UserProfileAdmin = z11.object({
  avatarLargeUrl: z11.string().nullish(),
  avatarSmallUrl: z11.string().nullish(),
  avatarUrl: z11.string().nullish(),
  customAttributes: z11.record(z11.any()).nullish(),
  dateOfBirth: z11.string().nullish(),
  firstName: z11.string().nullish(),
  language: z11.string().nullish(),
  lastName: z11.string().nullish(),
  privateCustomAttributes: z11.record(z11.any()).nullish(),
  status: z11.enum(["ACTIVE", "INACTIVE"]).nullish(),
  timeZone: z11.string().nullish(),
  zipCode: z11.string().nullish()
});

// src/generated-definitions/UserProfileBulkRequest.ts
import { z as z12 } from "zod";
var UserProfileBulkRequest = z12.object({ userIds: z12.array(z12.string()).nullish() });

// src/generated-definitions/UserProfileCreate.ts
import { z as z13 } from "zod";
var UserProfileCreate = z13.object({
  avatarLargeUrl: z13.string().nullish(),
  avatarSmallUrl: z13.string().nullish(),
  avatarUrl: z13.string().nullish(),
  customAttributes: z13.record(z13.any()).nullish(),
  dateOfBirth: z13.string().nullish(),
  firstName: z13.string().nullish(),
  language: z13.string().nullish(),
  lastName: z13.string().nullish(),
  timeZone: z13.string().nullish()
});

// src/generated-definitions/UserProfilePrivateCreate.ts
import { z as z14 } from "zod";
var UserProfilePrivateCreate = z14.object({
  avatarLargeUrl: z14.string().nullish(),
  avatarSmallUrl: z14.string().nullish(),
  avatarUrl: z14.string().nullish(),
  customAttributes: z14.record(z14.any()).nullish(),
  dateOfBirth: z14.string().nullish(),
  firstName: z14.string().nullish(),
  language: z14.string().nullish(),
  lastName: z14.string().nullish(),
  privateCustomAttributes: z14.record(z14.any()).nullish(),
  timeZone: z14.string().nullish()
});

// src/generated-definitions/UserProfileStatusUpdate.ts
import { z as z15 } from "zod";
var UserProfileStatusUpdate = z15.object({ status: z15.enum(["ACTIVE", "INACTIVE"]) });

// src/generated-definitions/UserProfileUpdate.ts
import { z as z16 } from "zod";
var UserProfileUpdate = z16.object({
  avatarLargeUrl: z16.string().nullish(),
  avatarSmallUrl: z16.string().nullish(),
  avatarUrl: z16.string().nullish(),
  customAttributes: z16.record(z16.any()).nullish(),
  dateOfBirth: z16.string().nullish(),
  firstName: z16.string().nullish(),
  language: z16.string().nullish(),
  lastName: z16.string().nullish(),
  privateCustomAttributes: z16.record(z16.any()).nullish(),
  timeZone: z16.string().nullish(),
  zipCode: z16.string().nullish()
});

// src/generated-definitions/UserZipCodeUpdate.ts
import { z as z17 } from "zod";
var UserZipCodeUpdate = z17.object({ zipCode: z17.string() });

// src/generated-definitions/ValidationErrorEntity.ts
import { z as z18 } from "zod";
var ValidationErrorEntity = z18.object({
  errorCode: z18.number().int(),
  errorMessage: z18.string(),
  errors: z18.array(FieldValidationError).nullish()
});
export {
  AddCountryGroupRequest,
  AddCountryGroupResponse,
  AnonymizationAdmin$,
  AnonymizationAdminApi,
  Basic,
  ConfigAdmin$,
  ConfigAdminApi,
  ConfigCreate,
  ConfigInfo,
  ConfigUpdate,
  CountryGroupObject,
  CountryObject,
  CountryObjectArray,
  ErrorEntity,
  FieldValidationError,
  FileUpload$,
  FileUploadAdmin$,
  FileUploadAdminApi,
  FileUploadApi,
  FileUploadUrlInfo,
  Misc$,
  MiscAdmin$,
  MiscAdminApi,
  MiscApi,
  Namespace$,
  NamespaceAdmin$,
  NamespaceAdminApi,
  NamespaceApi,
  NamespaceContext,
  NamespaceCreate,
  NamespaceInfo,
  NamespaceInfoArray,
  NamespacePublisherInfo,
  NamespaceSimpleInfo,
  NamespaceStatusUpdate,
  NamespaceUpdate,
  Permission,
  RetrieveCountryGroupResponse,
  RetrieveCountryGroupResponseArray,
  RetrieveTimeResponse,
  UpdateCountryGroupRequest,
  UserProfile$,
  UserProfileAdmin,
  UserProfileAdmin$,
  UserProfileAdminApi,
  UserProfileApi,
  UserProfileBulkRequest,
  UserProfileCreate,
  UserProfileInfo,
  UserProfilePrivateCreate,
  UserProfilePrivateInfo,
  UserProfilePublicInfo,
  UserProfilePublicInfoArray,
  UserProfileStatusUpdate,
  UserProfileUpdate,
  UserZipCode,
  UserZipCodeUpdate,
  ValidationErrorEntity
};
