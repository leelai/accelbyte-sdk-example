import { AccelByteSDK, ApiError, SdkSetConfigParam } from '@accelbyte/sdk';
import { AxiosError, AxiosResponse } from 'axios';
import { UseMutationOptions, UseMutationResult, UseQueryOptions, UseQueryResult } from '@tanstack/react-query';
import { a as ConfigInfo, C as ConfigCreate, b as ConfigUpdate, F as FileUploadUrlInfo, c as CountryObjectArray, R as RetrieveCountryGroupResponseArray, d as AddCountryGroupResponse, A as AddCountryGroupRequest, e as CountryGroupObject, U as UpdateCountryGroupRequest, N as NamespaceInfoArray, g as NamespaceInfo, f as NamespaceCreate, h as NamespaceUpdate, i as NamespaceStatusUpdate, j as NamespaceContext, k as NamespacePublisherInfo, m as UserProfilePublicInfoArray, l as UserProfileBulkRequest, n as UserProfileInfo, o as UserProfilePrivateInfo, p as UserProfileAdmin, q as UserProfileStatusUpdate, r as RetrieveTimeResponse, s as NamespaceSimpleInfo, t as UserProfilePrivateCreate, u as UserProfileUpdate, v as UserProfileCreate, w as UserZipCode, x as UserZipCodeUpdate, y as UserProfilePublicInfo } from './UserZipCodeUpdate-komaueay.js';
import 'zod';

/**
 * AUTO GENERATED
 */

declare enum Key_AnonymizationAdmin {
    AnonymizationProfile_ByUserId = "Basic.AnonymizationAdmin.AnonymizationProfile_ByUserId"
}
/**
 * Anonymize user profile.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11501&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_AnonymizationAdmin.AnonymizationProfile_ByUserId, input]
 * }
 * ```
 */
declare const useAnonymizationAdminApi_DeleteAnonymizationProfile_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_ConfigAdmin {
    Config = "Basic.ConfigAdmin.Config",
    Config_ByConfigKey = "Basic.ConfigAdmin.Config_ByConfigKey",
    PublisherConfig_ByConfigKey = "Basic.ConfigAdmin.PublisherConfig_ByConfigKey"
}
/**
 * Create a config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created config&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ConfigAdmin.Config, input]
 * }
 * ```
 */
declare const useConfigAdminApi_CreateConfigMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<ConfigInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ConfigCreate;
}>, "mutationKey">, callback?: (data: ConfigInfo) => void) => UseMutationResult<ConfigInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    data: ConfigCreate;
}>;
/**
 * Delete a config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created config&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ConfigAdmin.Config_ByConfigKey, input]
 * }
 * ```
 */
declare const useConfigAdminApi_DeleteConfig_ByConfigKeyMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    configKey: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    configKey: string;
}>;
/**
 * Get a config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: config&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ConfigAdmin.Config_ByConfigKey, input]
 * }
 * ```
 */
declare const useConfigAdminApi_GetConfig_ByConfigKey: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    configKey: string;
}, options?: Omit<UseQueryOptions<ConfigInfo, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ConfigInfo>) => void) => UseQueryResult<ConfigInfo, AxiosError<ApiError>>;
/**
 * Update a config.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created config&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ConfigAdmin.Config_ByConfigKey, input]
 * }
 * ```
 */
declare const useConfigAdminApi_PatchConfig_ByConfigKeyMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<ConfigInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    configKey: string;
    data: ConfigUpdate;
}>, "mutationKey">, callback?: (data: ConfigInfo) => void) => UseMutationResult<ConfigInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    configKey: string;
    data: ConfigUpdate;
}>;
/**
 * Get a publisher config.&lt;br&gt;It will return a publisher namespace config of the given namespace and key.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: config&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_ConfigAdmin.PublisherConfig_ByConfigKey, input]
 * }
 * ```
 */
declare const useConfigAdminApi_GetPublisherConfig_ByConfigKey: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    configKey: string;
}, options?: Omit<UseQueryOptions<ConfigInfo, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<ConfigInfo>) => void) => UseQueryResult<ConfigInfo, AxiosError<ApiError>>;

/**
 * AUTO GENERATED
 */

declare enum Key_FileUploadAdmin {
    File_ByUserId = "Basic.FileUploadAdmin.File_ByUserId",
    File_ByFolder = "Basic.FileUploadAdmin.File_ByFolder"
}
/**
 * Generate an upload URL for user content. It&#39;s valid for 10 minutes.&lt;br/&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11102&lt;/li&gt;&lt;li&gt;&lt;i&gt;Default maximum file count per user&lt;/i&gt;: 10 files&lt;/li&gt;&lt;li&gt;&lt;i&gt;Default maximum file size per user&lt;/i&gt;: 104857600 bytes&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: URL data&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_FileUploadAdmin.File_ByUserId, input]
 * }
 * ```
 */
declare const useFileUploadAdminApi_CreateFile_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<FileUploadUrlInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    queryParams: {
        fileType: string | null;
        category?: string | null;
    };
}>, "mutationKey">, callback?: (data: FileUploadUrlInfo) => void) => UseMutationResult<FileUploadUrlInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    queryParams: {
        fileType: string | null;
        category?: string | null;
    };
}>;
/**
 * Generate an upload URL. It&#39;s valid for 10 minutes.&lt;br/&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11101&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: URL data&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_FileUploadAdmin.File_ByFolder, input]
 * }
 * ```
 */
declare const useFileUploadAdminApi_CreateFile_ByFolderMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<FileUploadUrlInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    folder: string;
    queryParams: {
        fileType: string | null;
    };
}>, "mutationKey">, callback?: (data: FileUploadUrlInfo) => void) => UseMutationResult<FileUploadUrlInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    folder: string;
    queryParams: {
        fileType: string | null;
    };
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_MiscAdmin {
    MiscCountries = "Basic.MiscAdmin.MiscCountries",
    MiscLanguages = "Basic.MiscAdmin.MiscLanguages",
    MiscTimezones = "Basic.MiscAdmin.MiscTimezones",
    MiscCountrygroups = "Basic.MiscAdmin.MiscCountrygroups",
    MiscCountrygroup = "Basic.MiscAdmin.MiscCountrygroup",
    MiscCountrygroup_ByCountryGroupCode = "Basic.MiscAdmin.MiscCountrygroup_ByCountryGroupCode"
}
/**
 * @deprecated
 * List countries.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11204&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: country code list&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_MiscAdmin.MiscCountries, input]
 * }
 * ```
 */
declare const useMiscAdminApi_GetMiscCountries: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        lang?: string | null;
    };
}, options?: Omit<UseQueryOptions<CountryObjectArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<CountryObjectArray>) => void) => UseQueryResult<CountryObjectArray, AxiosError<ApiError>>;
/**
 * List languages.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11206&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: language list&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_MiscAdmin.MiscLanguages, input]
 * }
 * ```
 */
declare const useMiscAdminApi_GetMiscLanguages: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * List time zones.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11205&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: time zones&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_MiscAdmin.MiscTimezones, input]
 * }
 * ```
 */
declare const useMiscAdminApi_GetMiscTimezones: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * List country groups. Will return all available country groups if the query param is not specified&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11203&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of country groups&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_MiscAdmin.MiscCountrygroups, input]
 * }
 * ```
 */
declare const useMiscAdminApi_GetMiscCountrygroups: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        groupCode?: string | null;
    };
}, options?: Omit<UseQueryOptions<RetrieveCountryGroupResponseArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RetrieveCountryGroupResponseArray>) => void) => UseQueryResult<RetrieveCountryGroupResponseArray, AxiosError<ApiError>>;
/**
 * Add a country groups&lt;br&gt;Country code must follow ISO3166-1 alpha-2.&lt;br/&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11201&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: newly created country group&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_MiscAdmin.MiscCountrygroup, input]
 * }
 * ```
 */
declare const useMiscAdminApi_CreateMiscCountrygroupMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<AddCountryGroupResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: AddCountryGroupRequest;
}>, "mutationKey">, callback?: (data: AddCountryGroupResponse) => void) => UseMutationResult<AddCountryGroupResponse, AxiosError<ApiError>, SdkSetConfigParam & {
    data: AddCountryGroupRequest;
}>;
/**
 * Delete a country groups by its country group code. This endpoint usually used for testing purpose to cleanup test data.&lt;br&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_MiscAdmin.MiscCountrygroup_ByCountryGroupCode, input]
 * }
 * ```
 */
declare const useMiscAdminApi_DeleteMiscCountrygroup_ByCountryGroupCodeMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    countryGroupCode: string;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    countryGroupCode: string;
}>;
/**
 * Update a country groups. The countryGroupCode must be exist beforehand.&lt;br&gt;Valid update behaviour :&lt;br/&gt;- To update &lt;i&gt;countryGroupName&lt;/i&gt; only, do not include &lt;i&gt;countries&lt;/i&gt; key or just specify it with empty array.&lt;br/&gt;- To update &lt;i&gt;countries&lt;/i&gt; only, do not include &lt;i&gt;countryGroupName&lt;/i&gt; key or just specify it with blank value.&lt;br/&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11202&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated country group&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_MiscAdmin.MiscCountrygroup_ByCountryGroupCode, input]
 * }
 * ```
 */
declare const useMiscAdminApi_UpdateMiscCountrygroup_ByCountryGroupCodeMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<CountryGroupObject, AxiosError<ApiError>, SdkSetConfigParam & {
    countryGroupCode: string;
    data: UpdateCountryGroupRequest;
}>, "mutationKey">, callback?: (data: CountryGroupObject) => void) => UseMutationResult<CountryGroupObject, AxiosError<ApiError>, SdkSetConfigParam & {
    countryGroupCode: string;
    data: UpdateCountryGroupRequest;
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_NamespaceAdmin {
    Namespaces = "Basic.NamespaceAdmin.Namespaces",
    Namespace = "Basic.NamespaceAdmin.Namespace",
    Namespace_ByNamespace = "Basic.NamespaceAdmin.Namespace_ByNamespace",
    Game = "Basic.NamespaceAdmin.Game",
    Basic = "Basic.NamespaceAdmin.Basic",
    Child = "Basic.NamespaceAdmin.Child",
    Status = "Basic.NamespaceAdmin.Status",
    Context = "Basic.NamespaceAdmin.Context",
    Publisher = "Basic.NamespaceAdmin.Publisher"
}
/**
 * Get all namespaces.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11303&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of namespaces&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_NamespaceAdmin.Namespaces, input]
 * }
 * ```
 */
declare const useNamespaceAdminApi_GetNamespaces: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        activeOnly?: boolean | null;
    };
}, options?: Omit<UseQueryOptions<NamespaceInfoArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<NamespaceInfoArray>) => void) => UseQueryResult<NamespaceInfoArray, AxiosError<ApiError>>;
/**
 * Create a namespace.&lt;br&gt;By default the namespace is enabled.&lt;br&gt;In multi tenant mode, parentNamespace will be automatically filled with requester namespace if the requester is using studio or publisher token, and it will be filled with studio namespace if the requester uses game token. An oauth client will also be created and the id will be returned. &lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11301&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created namespace&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_NamespaceAdmin.Namespace, input]
 * }
 * ```
 */
declare const useNamespaceAdminApi_CreateNamespaceMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<NamespaceInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    data: NamespaceCreate;
}>, "mutationKey">, callback?: (data: NamespaceInfo) => void) => UseMutationResult<NamespaceInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    data: NamespaceCreate;
}>;
/**
 * Delete a namespace.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11307&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: deleted namespace&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_NamespaceAdmin.Namespace_ByNamespace, input]
 * }
 * ```
 */
declare const useNamespaceAdminApi_DeleteNamespace_ByNamespaceMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<NamespaceInfo, AxiosError<ApiError>, SdkSetConfigParam>, "mutationKey">, callback?: (data: NamespaceInfo) => void) => UseMutationResult<NamespaceInfo, AxiosError<ApiError>, SdkSetConfigParam>;
/**
 * Get a namespace.&lt;br&gt;In multi tenant mode, parentNamespace will be returned.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11304&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: namespace&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_NamespaceAdmin.Namespace_ByNamespace, input]
 * }
 * ```
 */
declare const useNamespaceAdminApi_GetNamespace_ByNamespace: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        activeOnly?: boolean | null;
    };
}, options?: Omit<UseQueryOptions<NamespaceInfo, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<NamespaceInfo>) => void) => UseQueryResult<NamespaceInfo, AxiosError<ApiError>>;
/**
 * Get game namespaces.&lt;br&gt;In multi tenant mode, a given super admin namespace will return all game namespaces of studio namespaces&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11308&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of namespaces&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_NamespaceAdmin.Game, input]
 * }
 * ```
 */
declare const useNamespaceAdminApi_GetGame: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        activeOnly?: boolean | null;
    };
}, options?: Omit<UseQueryOptions<NamespaceInfoArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<NamespaceInfoArray>) => void) => UseQueryResult<NamespaceInfoArray, AxiosError<ApiError>>;
/**
 * Update namespace basic info.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11302&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated namespace&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_NamespaceAdmin.Basic, input]
 * }
 * ```
 */
declare const useNamespaceAdminApi_PatchBasicMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<NamespaceInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    data: NamespaceUpdate;
}>, "mutationKey">, callback?: (data: NamespaceInfo) => void) => UseMutationResult<NamespaceInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    data: NamespaceUpdate;
}>;
/**
 * Get child namespaces.&lt;br&gt;If input namespace is publisher namespace, then it will return its all studio namespace.&lt;br&gt;If input namespace is studio namespace, then it will return its all game namespace.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of child namespaces&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_NamespaceAdmin.Child, input]
 * }
 * ```
 */
declare const useNamespaceAdminApi_GetChild: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        activeOnly?: boolean | null;
    };
}, options?: Omit<UseQueryOptions<NamespaceInfoArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<NamespaceInfoArray>) => void) => UseQueryResult<NamespaceInfoArray, AxiosError<ApiError>>;
/**
 * Change a namespace status.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;Action code&lt;i&gt;&lt;/i&gt;: 11306&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated namespace&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_NamespaceAdmin.Status, input]
 * }
 * ```
 */
declare const useNamespaceAdminApi_PatchStatusMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<NamespaceInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    data: NamespaceStatusUpdate;
}>, "mutationKey">, callback?: (data: NamespaceInfo) => void) => UseMutationResult<NamespaceInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    data: NamespaceStatusUpdate;
}>;
/**
 * Get context of namespace.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: context of namespace&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_NamespaceAdmin.Context, input]
 * }
 * ```
 */
declare const useNamespaceAdminApi_GetContext: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<NamespaceContext, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<NamespaceContext>) => void) => UseQueryResult<NamespaceContext, AxiosError<ApiError>>;
/**
 * Get namespace info related publisher namespace.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11305&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Namespace info related publisher namespace&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_NamespaceAdmin.Publisher, input]
 * }
 * ```
 */
declare const useNamespaceAdminApi_GetPublisher: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<NamespacePublisherInfo, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<NamespacePublisherInfo>) => void) => UseQueryResult<NamespacePublisherInfo, AxiosError<ApiError>>;

/**
 * AUTO GENERATED
 */

declare enum Key_UserProfileAdmin {
    ProfilePublic = "Basic.UserProfileAdmin.ProfilePublic",
    ProfilesByPublicId = "Basic.UserProfileAdmin.ProfilesByPublicId",
    Profile_ByUserId = "Basic.UserProfileAdmin.Profile_ByUserId",
    Profiles_ByUserId = "Basic.UserProfileAdmin.Profiles_ByUserId",
    ProfileStatus_ByUserId = "Basic.UserProfileAdmin.ProfileStatus_ByUserId",
    ProfilesCustomAttributes_ByUserId = "Basic.UserProfileAdmin.ProfilesCustomAttributes_ByUserId",
    ProfileCustomAttribute_ByUserId = "Basic.UserProfileAdmin.ProfileCustomAttribute_ByUserId",
    ProfilesPrivateCustomAttributes_ByUserId = "Basic.UserProfileAdmin.ProfilesPrivateCustomAttributes_ByUserId",
    ProfilePrivateCustomAttribute_ByUserId = "Basic.UserProfileAdmin.ProfilePrivateCustomAttribute_ByUserId"
}
/**
 * Admin get user public profile by ids.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&lt;b&gt;&#34;ADMIN:NAMESPACE:{namespace}:PROFILE&#34;&lt;/b&gt;, action=2 &lt;b&gt;(GET)&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11405&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: user public profiles&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfileAdmin.ProfilePublic, input]
 * }
 * ```
 */
declare const useUserProfileAdminApi_CreateProfilePublicMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserProfilePublicInfoArray, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserProfileBulkRequest;
}>, "mutationKey">, callback?: (data: UserProfilePublicInfoArray) => void) => UseMutationResult<UserProfilePublicInfoArray, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserProfileBulkRequest;
}>;
/**
 * Get user profile by public id.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: user profile info&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfileAdmin.ProfilesByPublicId, input]
 * }
 * ```
 */
declare const useUserProfileAdminApi_GetProfilesByPublicId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams: {
        publicId: string | null;
    };
}, options?: Omit<UseQueryOptions<UserProfileInfo, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserProfileInfo>) => void) => UseQueryResult<UserProfileInfo, AxiosError<ApiError>>;
/**
 * Delete user profile.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11407&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Delete user profile&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfileAdmin.Profile_ByUserId, input]
 * }
 * ```
 */
declare const useUserProfileAdminApi_DeleteProfile_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserProfilePrivateInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>, "mutationKey">, callback?: (data: UserProfilePrivateInfo) => void) => UseMutationResult<UserProfilePrivateInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
}>;
/**
 * Get user profile.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: user profile&lt;/li&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11403&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfileAdmin.Profiles_ByUserId, input]
 * }
 * ```
 */
declare const useUserProfileAdminApi_GetProfiles_ByUserId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<UserProfilePrivateInfo, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserProfilePrivateInfo>) => void) => UseQueryResult<UserProfilePrivateInfo, AxiosError<ApiError>>;
/**
 * Update user profile.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11402&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Updated user profile&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfileAdmin.Profile_ByUserId, input]
 * }
 * ```
 */
declare const useUserProfileAdminApi_UpdateProfile_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserProfilePrivateInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserProfileAdmin;
}>, "mutationKey">, callback?: (data: UserProfilePrivateInfo) => void) => UseMutationResult<UserProfilePrivateInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserProfileAdmin;
}>;
/**
 * Update user profile status.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11406&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: user profile&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfileAdmin.ProfileStatus_ByUserId, input]
 * }
 * ```
 */
declare const useUserProfileAdminApi_PatchProfileStatus_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserProfilePrivateInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserProfileStatusUpdate;
}>, "mutationKey">, callback?: (data: UserProfilePrivateInfo) => void) => UseMutationResult<UserProfilePrivateInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserProfileStatusUpdate;
}>;
/**
 * Get user custom attributes.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: custom attributes&lt;/li&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11403&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfileAdmin.ProfilesCustomAttributes_ByUserId, input]
 * }
 * ```
 */
declare const useUserProfileAdminApi_GetProfilesCustomAttributes_ByUserId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * Update partially custom attributes tied to the user id.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11402&lt;/li&gt;&lt;li&gt;&lt;i&gt;Request body&lt;/i&gt;: allowed format: JSON object&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Updated custom attributes&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfileAdmin.ProfileCustomAttribute_ByUserId, input]
 * }
 * ```
 */
declare const useUserProfileAdminApi_UpdateProfileCustomAttribute_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: any;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: any;
}>;
/**
 * Get user private custom attributes.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: custom attributes&lt;/li&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11403&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfileAdmin.ProfilesPrivateCustomAttributes_ByUserId, input]
 * }
 * ```
 */
declare const useUserProfileAdminApi_GetProfilesPrivateCustomAttributes_ByUserId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * Update partially private custom attributes tied to the user id.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11402&lt;/li&gt;&lt;li&gt;&lt;i&gt;Request body&lt;/i&gt;: allowed format: JSON object&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Updated custom attributes&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfileAdmin.ProfilePrivateCustomAttribute_ByUserId, input]
 * }
 * ```
 */
declare const useUserProfileAdminApi_UpdateProfilePrivateCustomAttribute_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: any;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: any;
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_FileUpload {
    File_ByUserId = "Basic.FileUpload.File_ByUserId",
    File_ByFolder = "Basic.FileUpload.File_ByFolder"
}
/**
 * Generate an upload URL for user content. It&#39;s valid for 10 minutes.&lt;br/&gt;There are 2 kinds of storage limitation per user : maximum file count and maximum file size.&lt;br/&gt;The threshold of those limitations is different between upload category that is used.&lt;br/&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11102&lt;/li&gt;&lt;li&gt;&lt;i&gt;Default maximum file count per user&lt;/i&gt;: 10 files&lt;/li&gt;&lt;li&gt;&lt;i&gt;Default maximum file size per user&lt;/i&gt;: 104857600 bytes&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: URL data&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_FileUpload.File_ByUserId, input]
 * }
 * ```
 */
declare const useFileUploadApi_CreateFile_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<FileUploadUrlInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    queryParams: {
        fileType: string | null;
        category?: string | null;
    };
}>, "mutationKey">, callback?: (data: FileUploadUrlInfo) => void) => UseMutationResult<FileUploadUrlInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    queryParams: {
        fileType: string | null;
        category?: string | null;
    };
}>;
/**
 * Generate an upload URL. It&#39;s valid for 10 minutes.&lt;br/&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11101&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: URL data&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_FileUpload.File_ByFolder, input]
 * }
 * ```
 */
declare const useFileUploadApi_CreateFile_ByFolderMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<FileUploadUrlInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    folder: string;
    queryParams: {
        fileType: string | null;
    };
}>, "mutationKey">, callback?: (data: FileUploadUrlInfo) => void) => UseMutationResult<FileUploadUrlInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    folder: string;
    queryParams: {
        fileType: string | null;
    };
}>;

/**
 * AUTO GENERATED
 */

declare enum Key_Misc {
    MiscTime = "Basic.Misc.MiscTime",
    MiscCountries = "Basic.Misc.MiscCountries",
    MiscLanguages = "Basic.Misc.MiscLanguages",
    MiscTimezones = "Basic.Misc.MiscTimezones"
}
/**
 * Get server time
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Misc.MiscTime, input]
 * }
 * ```
 */
declare const useMiscApi_GetMiscTime: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<RetrieveTimeResponse, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<RetrieveTimeResponse>) => void) => UseQueryResult<RetrieveTimeResponse, AxiosError<ApiError>>;
/**
 * @deprecated
 * List countries.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: country code list&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Misc.MiscCountries, input]
 * }
 * ```
 */
declare const useMiscApi_GetMiscCountries: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        lang?: string | null;
    };
}, options?: Omit<UseQueryOptions<CountryObjectArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<CountryObjectArray>) => void) => UseQueryResult<CountryObjectArray, AxiosError<ApiError>>;
/**
 * List languages.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: language list&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Misc.MiscLanguages, input]
 * }
 * ```
 */
declare const useMiscApi_GetMiscLanguages: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * List time zones.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: time zones&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Misc.MiscTimezones, input]
 * }
 * ```
 */
declare const useMiscApi_GetMiscTimezones: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;

/**
 * AUTO GENERATED
 */

declare enum Key_Namespace {
    Namespaces = "Basic.Namespace.Namespaces",
    Namespace_ByNamespace = "Basic.Namespace.Namespace_ByNamespace",
    Publisher = "Basic.Namespace.Publisher"
}
/**
 * Get all namespaces.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11303&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of namespaces&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Namespace.Namespaces, input]
 * }
 * ```
 */
declare const useNamespaceApi_GetNamespaces: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams?: {
        activeOnly?: boolean | null;
    };
}, options?: Omit<UseQueryOptions<NamespaceInfoArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<NamespaceInfoArray>) => void) => UseQueryResult<NamespaceInfoArray, AxiosError<ApiError>>;
/**
 * Get a namespace info.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: namespace info&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Namespace.Namespace_ByNamespace, input]
 * }
 * ```
 */
declare const useNamespaceApi_GetNamespace_ByNamespace: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<NamespaceSimpleInfo, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<NamespaceSimpleInfo>) => void) => UseQueryResult<NamespaceSimpleInfo, AxiosError<ApiError>>;
/**
 * Get namespace info related publisher namespace.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11305&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Namespace info related publisher namespace&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_Namespace.Publisher, input]
 * }
 * ```
 */
declare const useNamespaceApi_GetPublisher: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<NamespacePublisherInfo, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<NamespacePublisherInfo>) => void) => UseQueryResult<NamespacePublisherInfo, AxiosError<ApiError>>;

/**
 * AUTO GENERATED
 */

declare enum Key_UserProfile {
    ProfilesPublic = "Basic.UserProfile.ProfilesPublic",
    ProfilePublic = "Basic.UserProfile.ProfilePublic",
    UsersMeProfiles = "Basic.UserProfile.UsersMeProfiles",
    UserMeProfile = "Basic.UserProfile.UserMeProfile",
    Profiles_ByUserId = "Basic.UserProfile.Profiles_ByUserId",
    Profile_ByUserId = "Basic.UserProfile.Profile_ByUserId",
    UsersMeProfilesZipCode = "Basic.UserProfile.UsersMeProfilesZipCode",
    UserMeProfileZipCode = "Basic.UserProfile.UserMeProfileZipCode",
    ProfilesPublicByPublicId = "Basic.UserProfile.ProfilesPublicByPublicId",
    ProfilesPublic_ByUserId = "Basic.UserProfile.ProfilesPublic_ByUserId",
    ProfileStatus_ByUserId = "Basic.UserProfile.ProfileStatus_ByUserId",
    ProfilesCustomAttributes_ByUserId = "Basic.UserProfile.ProfilesCustomAttributes_ByUserId",
    ProfileCustomAttribute_ByUserId = "Basic.UserProfile.ProfileCustomAttribute_ByUserId",
    UsersMeProfilesPrivateCustomAttributes = "Basic.UserProfile.UsersMeProfilesPrivateCustomAttributes",
    UserMeProfilePrivateCustomAttribute = "Basic.UserProfile.UserMeProfilePrivateCustomAttribute"
}
/**
 * Get user public profile by ids.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11405&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: user public profiles&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.ProfilesPublic, input]
 * }
 * ```
 */
declare const useUserProfileApi_GetProfilesPublic: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams: {
        userIds: string | null;
    };
}, options?: Omit<UseQueryOptions<UserProfilePublicInfoArray, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserProfilePublicInfoArray>) => void) => UseQueryResult<UserProfilePublicInfoArray, AxiosError<ApiError>>;
/**
 * Bulk get user public profile by ids.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: user public profiles&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.ProfilePublic, input]
 * }
 * ```
 */
declare const useUserProfileApi_CreateProfilePublicMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserProfilePublicInfoArray, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserProfileBulkRequest;
}>, "mutationKey">, callback?: (data: UserProfilePublicInfoArray) => void) => UseMutationResult<UserProfilePublicInfoArray, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserProfileBulkRequest;
}>;
/**
 * Get my profile&lt;br&gt;&lt;b&gt;Client with user token can get user profile in target namespace&lt;/b&gt;&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11403&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: user profile&lt;/li&gt;&lt;li&gt;&lt;i&gt;Path&#39;s namespace&lt;/i&gt; : &lt;ul&gt;&lt;li&gt;can be filled with &lt;b&gt;publisher namespace&lt;/b&gt; in order to get &lt;b&gt;publisher user profile&lt;/b&gt;&lt;/li&gt;&lt;li&gt;can be filled with &lt;b&gt;game namespace&lt;/b&gt; in order to get &lt;b&gt;game user profile&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Language&lt;/i&gt; : allowed format: en, en-US&lt;/li&gt;&lt;li&gt;&lt;i&gt;Timezone&lt;/i&gt; : IANA time zone, e.g. Asia/Shanghai&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.UsersMeProfiles, input]
 * }
 * ```
 */
declare const useUserProfileApi_GetUsersMeProfiles: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<UserProfilePrivateInfo, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserProfilePrivateInfo>) => void) => UseQueryResult<UserProfilePrivateInfo, AxiosError<ApiError>>;
/**
 * Create my profile.&lt;br&gt;&lt;b&gt;Client with user token can create user profile in target namespace&lt;/b&gt;&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11401&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Created user profile&lt;/li&gt;&lt;li&gt;&lt;i&gt;Path&#39;s namespace&lt;/i&gt; : &lt;ul&gt;&lt;li&gt;can be filled with &lt;b&gt;publisher namespace&lt;/b&gt; in order to create &lt;b&gt;publisher user profile&lt;/b&gt;&lt;/li&gt;&lt;li&gt;can be filled with &lt;b&gt;game namespace&lt;/b&gt; in order to create &lt;b&gt;game user profile&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Language&lt;/i&gt; : allowed format: en, en-US&lt;/li&gt;&lt;li&gt;&lt;i&gt;Country&lt;/i&gt; : ISO3166-1 alpha-2 two letter, e.g. US &lt;/li&gt;&lt;li&gt;&lt;i&gt;Timezone&lt;/i&gt; : IANA time zone, e.g. Asia/Shanghai&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.UserMeProfile, input]
 * }
 * ```
 */
declare const useUserProfileApi_CreateUserMeProfileMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserProfilePrivateInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserProfilePrivateCreate;
}>, "mutationKey">, callback?: (data: UserProfilePrivateInfo) => void) => UseMutationResult<UserProfilePrivateInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserProfilePrivateCreate;
}>;
/**
 * Update my profile.&lt;br&gt;Updates user profile in the target namespace (namespace in the path). If token&#39;s namespace doesn&#39;t match the target namespace, the service automatically maps the token&#39;s user ID into the user ID in the target namespace. The endpoint returns the updated user profile on a successful call.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11402&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: user profile&lt;/li&gt;&lt;li&gt;&lt;i&gt;Path&#39;s namespace&lt;/i&gt; : &lt;ul&gt;&lt;li&gt;can be filled with &lt;b&gt;publisher namespace&lt;/b&gt; in order to update &lt;b&gt;publisher user profile&lt;/b&gt;&lt;/li&gt;&lt;li&gt;can be filled with &lt;b&gt;game namespace&lt;/b&gt; in order to update &lt;b&gt;game user profile&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Language&lt;/i&gt; : allowed format: en, en-US&lt;/li&gt;&lt;li&gt;&lt;i&gt;Timezone&lt;/i&gt; : IANA time zone, e.g. Asia/Shanghai&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.UserMeProfile, input]
 * }
 * ```
 */
declare const useUserProfileApi_UpdateUserMeProfileMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserProfilePrivateInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserProfileUpdate;
}>, "mutationKey">, callback?: (data: UserProfilePrivateInfo) => void) => UseMutationResult<UserProfilePrivateInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserProfileUpdate;
}>;
/**
 * Get user profile.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11403&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: user profile&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.Profiles_ByUserId, input]
 * }
 * ```
 */
declare const useUserProfileApi_GetProfiles_ByUserId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<UserProfileInfo, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserProfileInfo>) => void) => UseQueryResult<UserProfileInfo, AxiosError<ApiError>>;
/**
 * Create user profile.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11401&lt;/li&gt;&lt;li&gt;&lt;i&gt;Language&lt;/i&gt; : allowed format: en, en-US&lt;/li&gt;&lt;li&gt;&lt;i&gt;Timezone&lt;/i&gt; : IANA time zone, e.g. Asia/Shanghai&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Created user profile&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.Profile_ByUserId, input]
 * }
 * ```
 */
declare const useUserProfileApi_CreateProfile_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserProfileInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserProfileCreate;
}>, "mutationKey">, callback?: (data: UserProfileInfo) => void) => UseMutationResult<UserProfileInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserProfileCreate;
}>;
/**
 * Update user profile.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11402&lt;/li&gt;&lt;li&gt;&lt;i&gt;Language&lt;/i&gt; : allowed format: en, en-US&lt;/li&gt;&lt;li&gt;&lt;i&gt;Timezone&lt;/i&gt; : IANA time zone, e.g. Asia/Shanghai&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Updated user profile&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.Profile_ByUserId, input]
 * }
 * ```
 */
declare const useUserProfileApi_UpdateProfile_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserProfileInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserProfileUpdate;
}>, "mutationKey">, callback?: (data: UserProfileInfo) => void) => UseMutationResult<UserProfileInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserProfileUpdate;
}>;
/**
 * Get my zip code.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11407&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: user zip code&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.UsersMeProfilesZipCode, input]
 * }
 * ```
 */
declare const useUserProfileApi_GetUsersMeProfilesZipCode: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<UserZipCode, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserZipCode>) => void) => UseQueryResult<UserZipCode, AxiosError<ApiError>>;
/**
 * Update my zip code.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11408&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: user zip code&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.UserMeProfileZipCode, input]
 * }
 * ```
 */
declare const useUserProfileApi_PatchUserMeProfileZipCodeMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserZipCode, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserZipCodeUpdate;
}>, "mutationKey">, callback?: (data: UserZipCode) => void) => UseMutationResult<UserZipCode, AxiosError<ApiError>, SdkSetConfigParam & {
    data: UserZipCodeUpdate;
}>;
/**
 * Get user public profile by public id.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: user public profile&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.ProfilesPublicByPublicId, input]
 * }
 * ```
 */
declare const useUserProfileApi_GetProfilesPublicByPublicId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    queryParams: {
        publicId: string | null;
    };
}, options?: Omit<UseQueryOptions<UserProfilePublicInfo, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserProfilePublicInfo>) => void) => UseQueryResult<UserProfilePublicInfo, AxiosError<ApiError>>;
/**
 * Get user profile public info.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11404&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: user public profile&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.ProfilesPublic_ByUserId, input]
 * }
 * ```
 */
declare const useUserProfileApi_GetProfilesPublic_ByUserId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<UserProfilePublicInfo, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<UserProfilePublicInfo>) => void) => UseQueryResult<UserProfilePublicInfo, AxiosError<ApiError>>;
/**
 * Update user profile status.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11406&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: user profile&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.ProfileStatus_ByUserId, input]
 * }
 * ```
 */
declare const useUserProfileApi_PatchProfileStatus_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<UserProfileInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserProfileStatusUpdate;
}>, "mutationKey">, callback?: (data: UserProfileInfo) => void) => UseMutationResult<UserProfileInfo, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: UserProfileStatusUpdate;
}>;
/**
 * Get custom attributes info.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11404&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: user custom attributes&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.ProfilesCustomAttributes_ByUserId, input]
 * }
 * ```
 */
declare const useUserProfileApi_GetProfilesCustomAttributes_ByUserId: (sdk: AccelByteSDK, input: SdkSetConfigParam & {
    userId: string;
}, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * Update partially custom attributes tied to user id.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11402&lt;/li&gt;&lt;li&gt;&lt;i&gt;Request body&lt;/i&gt; : allowed format: JSON object&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Updated custom attributes&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.ProfileCustomAttribute_ByUserId, input]
 * }
 * ```
 */
declare const useUserProfileApi_UpdateProfileCustomAttribute_ByUserIdMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: any;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    userId: string;
    data: any;
}>;
/**
 * Get my private custom attributes.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: custom attributes&lt;/li&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11403&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.UsersMeProfilesPrivateCustomAttributes, input]
 * }
 * ```
 */
declare const useUserProfileApi_GetUsersMeProfilesPrivateCustomAttributes: (sdk: AccelByteSDK, input: SdkSetConfigParam, options?: Omit<UseQueryOptions<unknown, AxiosError<ApiError>>, "queryKey">, callback?: (data: AxiosResponse<unknown>) => void) => UseQueryResult<unknown, AxiosError<ApiError>>;
/**
 * Update partially private custom attributes tied to me.&lt;br&gt;Other detail info: &lt;ul&gt;&lt;li&gt;&lt;i&gt;Action code&lt;/i&gt;: 11402&lt;/li&gt;&lt;li&gt;&lt;i&gt;Request body&lt;/i&gt;: allowed format: JSON object&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: Updated custom attributes&lt;/li&gt;&lt;/ul&gt;
 *
 * #### Default Query Options
 * The default options include:
 * ```
 * {
 *    queryKey: [Key_UserProfile.UserMeProfilePrivateCustomAttribute, input]
 * }
 * ```
 */
declare const useUserProfileApi_UpdateUserMeProfilePrivateCustomAttributeMutation: (sdk: AccelByteSDK, options?: Omit<UseMutationOptions<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: any;
}>, "mutationKey">, callback?: (data: unknown) => void) => UseMutationResult<unknown, AxiosError<ApiError>, SdkSetConfigParam & {
    data: any;
}>;

export { Key_AnonymizationAdmin, Key_ConfigAdmin, Key_FileUpload, Key_FileUploadAdmin, Key_Misc, Key_MiscAdmin, Key_Namespace, Key_NamespaceAdmin, Key_UserProfile, Key_UserProfileAdmin, useAnonymizationAdminApi_DeleteAnonymizationProfile_ByUserIdMutation, useConfigAdminApi_CreateConfigMutation, useConfigAdminApi_DeleteConfig_ByConfigKeyMutation, useConfigAdminApi_GetConfig_ByConfigKey, useConfigAdminApi_GetPublisherConfig_ByConfigKey, useConfigAdminApi_PatchConfig_ByConfigKeyMutation, useFileUploadAdminApi_CreateFile_ByFolderMutation, useFileUploadAdminApi_CreateFile_ByUserIdMutation, useFileUploadApi_CreateFile_ByFolderMutation, useFileUploadApi_CreateFile_ByUserIdMutation, useMiscAdminApi_CreateMiscCountrygroupMutation, useMiscAdminApi_DeleteMiscCountrygroup_ByCountryGroupCodeMutation, useMiscAdminApi_GetMiscCountries, useMiscAdminApi_GetMiscCountrygroups, useMiscAdminApi_GetMiscLanguages, useMiscAdminApi_GetMiscTimezones, useMiscAdminApi_UpdateMiscCountrygroup_ByCountryGroupCodeMutation, useMiscApi_GetMiscCountries, useMiscApi_GetMiscLanguages, useMiscApi_GetMiscTime, useMiscApi_GetMiscTimezones, useNamespaceAdminApi_CreateNamespaceMutation, useNamespaceAdminApi_DeleteNamespace_ByNamespaceMutation, useNamespaceAdminApi_GetChild, useNamespaceAdminApi_GetContext, useNamespaceAdminApi_GetGame, useNamespaceAdminApi_GetNamespace_ByNamespace, useNamespaceAdminApi_GetNamespaces, useNamespaceAdminApi_GetPublisher, useNamespaceAdminApi_PatchBasicMutation, useNamespaceAdminApi_PatchStatusMutation, useNamespaceApi_GetNamespace_ByNamespace, useNamespaceApi_GetNamespaces, useNamespaceApi_GetPublisher, useUserProfileAdminApi_CreateProfilePublicMutation, useUserProfileAdminApi_DeleteProfile_ByUserIdMutation, useUserProfileAdminApi_GetProfilesByPublicId, useUserProfileAdminApi_GetProfilesCustomAttributes_ByUserId, useUserProfileAdminApi_GetProfilesPrivateCustomAttributes_ByUserId, useUserProfileAdminApi_GetProfiles_ByUserId, useUserProfileAdminApi_PatchProfileStatus_ByUserIdMutation, useUserProfileAdminApi_UpdateProfileCustomAttribute_ByUserIdMutation, useUserProfileAdminApi_UpdateProfilePrivateCustomAttribute_ByUserIdMutation, useUserProfileAdminApi_UpdateProfile_ByUserIdMutation, useUserProfileApi_CreateProfilePublicMutation, useUserProfileApi_CreateProfile_ByUserIdMutation, useUserProfileApi_CreateUserMeProfileMutation, useUserProfileApi_GetProfilesCustomAttributes_ByUserId, useUserProfileApi_GetProfilesPublic, useUserProfileApi_GetProfilesPublicByPublicId, useUserProfileApi_GetProfilesPublic_ByUserId, useUserProfileApi_GetProfiles_ByUserId, useUserProfileApi_GetUsersMeProfiles, useUserProfileApi_GetUsersMeProfilesPrivateCustomAttributes, useUserProfileApi_GetUsersMeProfilesZipCode, useUserProfileApi_PatchProfileStatus_ByUserIdMutation, useUserProfileApi_PatchUserMeProfileZipCodeMutation, useUserProfileApi_UpdateProfileCustomAttribute_ByUserIdMutation, useUserProfileApi_UpdateProfile_ByUserIdMutation, useUserProfileApi_UpdateUserMeProfileMutation, useUserProfileApi_UpdateUserMeProfilePrivateCustomAttributeMutation };
