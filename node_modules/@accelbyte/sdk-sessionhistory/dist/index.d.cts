import { AccelByteSDK, SdkSetConfigParam, Response } from '@accelbyte/sdk';
import { AxiosResponse, AxiosInstance } from 'axios';
import { C as Configuration, P as PartyDetailQueryResponse, T as TicketDetailQueryResponse, M as MatchmakingDetailQueryResponse, G as GameSessionDetailQueryResponse, a as TicketObservabilityDetail, b as PartyDetail, c as GameSessionDetail, d as MatchmakingDetail, X as XRayTicketObservabilityRequest, e as XRayTicketObservabilityResponse, f as XRayBulkTicketObservabilityRequest, g as XRayBulkTicketObservabilityResponse, h as XRayTicketQueryResponse, i as XRayMatchMatchmakingQueryResponse, j as XRayAcquiringDsQueryResponse, k as XRayMatchPoolQueryResponse, l as XRayMatchesQueryResponse, m as XRayMatchMatchmakingTicketQueryResponse, n as XRayMatchHistorQueryResponse, o as XRayTotalActiveSessionQueryResponse, p as XRayCreatedMatchmakingTicketQueryResponse, q as XRayExpiredMatchmakingTicketQueryResponse, r as XRayCanceledMatchmakingTicketQueryResponse, s as XRayMatchLengthDurationQueryResponse, t as XRayMatchTicketHistoryQueryResponse, u as XRayAcquiringDsWaitTimeQueryResponse, v as XRayTotalPlayerPersessionAvgQueryResponse, w as XRayMatchPoolPodTickQueryResponse, x as XRayMatchPoolPodTickMatchResponse, y as XRayMatchPoolPodTickTicketResponse } from './XRayTotalPlayerPersessionAvgQueryResponse-BPHpQFDQ.cjs';
import { z } from 'zod';

/**
 * AUTO GENERATED
 */

declare function ConfigAdminApi(sdk: AccelByteSDK, args?: SdkSetConfigParam): {
    /**
     * Get Log Configuration.&lt;br&gt;
     */
    getConfigLog: () => Promise<AxiosResponse<Configuration>>;
    /**
     * Update Log Configuration.&lt;br&gt;
     */
    patchConfigLog: (data: Configuration) => Promise<AxiosResponse<Configuration>>;
};

/**
 * AUTO GENERATED
 */

declare class ConfigAdmin$ {
    private axiosInstance;
    private namespace;
    private useSchemaValidation;
    constructor(axiosInstance: AxiosInstance, namespace: string, useSchemaValidation?: boolean);
    /**
     * Get Log Configuration.&lt;br&gt;
     */
    getConfigLog(): Promise<Response<Configuration>>;
    /**
     * Update Log Configuration.&lt;br&gt;
     */
    patchConfigLog(data: Configuration): Promise<Response<Configuration>>;
}

/**
 * AUTO GENERATED
 */

declare class GameSessionDetailAdmin$ {
    private axiosInstance;
    private namespace;
    private useSchemaValidation;
    constructor(axiosInstance: AxiosInstance, namespace: string, useSchemaValidation?: boolean);
    /**
     * Get all parties.
     */
    getParties(queryParams?: {
        limit?: number;
        offset?: number;
        order?: string | null;
        orderBy?: string | null;
        partyID?: string | null;
        userID?: string | null;
    }): Promise<Response<PartyDetailQueryResponse>>;
    /**
     * Get all matchmaking ticket.
     */
    getTickets(queryParams?: {
        endDate?: string | null;
        gameMode?: string | null;
        limit?: number;
        offset?: number;
        order?: string | null;
        partyID?: string | null;
        region?: string | null;
        startDate?: string | null;
        userIDs?: string | null;
    }): Promise<Response<TicketDetailQueryResponse>>;
    /**
     * Get all matchmaking.
     */
    getMatchmaking(queryParams?: {
        gameSessionID?: string | null;
        limit?: number;
        offset?: number;
        order?: string | null;
        orderBy?: string | null;
        ticketID?: string | null;
        userID?: string | null;
    }): Promise<Response<MatchmakingDetailQueryResponse>>;
    /**
     * Get all game sessions.
     */
    getGamesessions(queryParams?: {
        endDate?: string | null;
        gameSessionID?: string | null;
        limit?: number;
        offset?: number;
        order?: string | null;
        orderBy?: string | null;
        startDate?: string | null;
        userID?: string | null;
    }): Promise<Response<GameSessionDetailQueryResponse>>;
    /**
     * Get detail matchmaking ticket history by ticket ID.
     */
    getTicket_ByTicketId(ticketId: string): Promise<Response<TicketObservabilityDetail>>;
    /**
     * Get party detail.
     */
    getParty_BySessionId(sessionId: string): Promise<Response<PartyDetail>>;
    /**
     * Get game session detail.
     */
    getGamesession_BySessionId(sessionId: string): Promise<Response<GameSessionDetail>>;
    /**
     * Get detail matchmaking history by ticket ID.
     */
    getMatchmakingTicket_ByTicketId(ticketId: string): Promise<Response<MatchmakingDetail>>;
    /**
     * Get detail matchmaking history by session ID.
     */
    getMatchmakingSession_BySessionId(sessionId: string): Promise<Response<MatchmakingDetail>>;
}

/**
 * AUTO GENERATED
 */

declare class XRayAdmin$ {
    private axiosInstance;
    private namespace;
    private useSchemaValidation;
    constructor(axiosInstance: AxiosInstance, namespace: string, useSchemaValidation?: boolean);
    /**
     * Create ticket observability request Request body details (all attributes are optional): Timestamp : timestamp when calling this endpoint Action : support one of the following value: 1. &#34;matchFound&#34; 2. &#34;matchNotFound&#34; 3. &#34;flexed&#34; TicketID : ticket ID MatchID : match ID will be filled only when match found Namespace : ticket current namespace GameMode : ticket current matchpool ActiveAllianceRule : current active alliance ruleset ActiveMatchingRule : current active matching ruleset Function : name of the function that called the endpoint Iteration : total iteration before match found TimeToMatchSec : time to match (in seconds) will be filled only when match found UnmatchReason : reason when unable to find match RemainingTickets : remaining ticket when unable to find match RemainingPlayersPerTicket : remaining players when unable to find match UnbackfillReason : reason when unable to backfill IsBackfillMatch : flag to distinguish between new match and backfill match IsRuleSetFlexed : flag if ruleset is getting flexed TickID : tick id for the matchmaking tick SessionTickID : session tick id for differentiate session when doing matches
     */
    createXrayTicket_v2(data: XRayTicketObservabilityRequest): Promise<Response<XRayTicketObservabilityResponse>>;
    /**
     * Create bulk ticket observability request Request body details (all attributes are optional): Timestamp : timestamp when calling this endpoint Action : support one of the following value: 1. &#34;matchFound&#34; 2. &#34;matchNotFound&#34; 3. &#34;flexed&#34; PartyID : ticket Party ID MatchID : match ID will be filled only when match found Namespace : ticket current namespace GameMode : ticket current matchpool ActiveAllianceRule : current active alliance ruleset ActiveMatchingRule : current active matching ruleset Function : name of the function that called the endpoint Iteration : total iteration before match found TimeToMatchSec : time to match (in seconds) will be filled only when match found UnmatchReason : reason when unable to find match RemainingTickets : remaining ticket when unable to find match RemainingPlayersPerTicket : remaining players when unable to find match UnbackfillReason : reason when unable to backfill IsBackfillMatch : flag to distinguish between new match and backfill match IsRuleSetFlexed : flag if ruleset is getting flexed TickID : tick id for the matchmaking tick SessionTickID : session tick id for differentiate session when doing matches
     */
    createXrayTicketBulk_v2(data: XRayBulkTicketObservabilityRequest): Promise<Response<XRayBulkTicketObservabilityResponse>>;
    /**
     * Query xray timeline by ticketID
     */
    getXrayTicket_ByTicketId_v2(ticketId: string, queryParams: {
        endDate: string | null;
        startDate: string | null;
        limit?: number;
        offset?: number;
    }): Promise<Response<XRayTicketQueryResponse>>;
    /**
     * Query total match.
     */
    getXrayMetricsTotalMatch_v2(queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }): Promise<Response<XRayMatchMatchmakingQueryResponse>>;
    /**
     * Query total success and failed claim DS.
     */
    getXrayMetricsAcquiringDs_v2(queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }): Promise<Response<XRayAcquiringDsQueryResponse>>;
    /**
     * Query xray match pool. query can using matchpool array with separate &#34;,&#34;
     */
    getXrayMatchPool_ByPoolName_v2(poolName: string[], queryParams: {
        endDate: string | null;
        startDate: string | null;
    }): Promise<Response<XRayMatchPoolQueryResponse>>;
    /**
     * Query xray timeline by userID or ticketID
     */
    getTicketsXray_ByUserId_v2(userId: string, queryParams: {
        endDate: string | null;
        startDate: string | null;
        limit?: number;
        offset?: number;
    }): Promise<Response<XRayTicketQueryResponse>>;
    /**
     * Query xray timeline by matchID.
     */
    getTicketsXray_ByMatchId_v2(matchId: string): Promise<Response<XRayMatchesQueryResponse>>;
    /**
     * Query total ticket match.
     */
    getXrayMetricsTotalTicketMatch_v2(queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }): Promise<Response<XRayMatchMatchmakingTicketQueryResponse>>;
    /**
     * Query xray match histories.
     */
    getHistoriesXray_ByMatchId_v2(matchId: string, queryParams?: {
        limit?: number;
        offset?: number;
    }): Promise<Response<XRayMatchHistorQueryResponse>>;
    /**
     * Query total active session.
     */
    getXrayMetricsTotalActiveSession_v2(queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
        region?: string | null;
    }): Promise<Response<XRayTotalActiveSessionQueryResponse>>;
    /**
     * Query total ticket created.
     */
    getXrayMetricsTotalTicketCreated_v2(queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }): Promise<Response<XRayCreatedMatchmakingTicketQueryResponse>>;
    /**
     * Query total ticket expired.
     */
    getXrayMetricsTotalTicketExpired_v2(queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }): Promise<Response<XRayExpiredMatchmakingTicketQueryResponse>>;
    /**
     * Query total ticket canceled.
     */
    getXrayMetricsTotalTicketCanceled_v2(queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }): Promise<Response<XRayCanceledMatchmakingTicketQueryResponse>>;
    /**
     * Query match length duration avg. time in seconds
     */
    getXrayMetricsMatchLengthDurationAvg_v2(queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }): Promise<Response<XRayMatchLengthDurationQueryResponse>>;
    /**
     * Query match length duration p99. time in seconds
     */
    getXrayMetricsMatchLengthDurationP99_v2(queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }): Promise<Response<XRayMatchLengthDurationQueryResponse>>;
    /**
     * Query xray match ticket histories.
     */
    getTicketHistoriesXray_ByMatchId_v2(matchId: string): Promise<Response<XRayMatchTicketHistoryQueryResponse>>;
    /**
     * Query acquiring ds wait time average. time in seconds
     */
    getXrayMetricsAcquiringDsWaitTimeAvg_v2(queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }): Promise<Response<XRayAcquiringDsWaitTimeQueryResponse>>;
    /**
     * Query total player persession average.
     */
    getXrayMetricsTotalPlayerPersessionAvg_v2(queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }): Promise<Response<XRayTotalPlayerPersessionAvgQueryResponse>>;
    /**
     * Query xray match pool ticks.
     */
    getTicksXray_ByPoolName_ByPodName_v2(poolName: string, podName: string, queryParams: {
        endDate: string | null;
        startDate: string | null;
        all?: boolean | null;
        limit?: number;
        offset?: number;
    }): Promise<Response<XRayMatchPoolPodTickQueryResponse>>;
    /**
     * Query xray match pool tick matches by tick id.
     */
    getMatchesXray_ByPoolName_ByPodName_ByTickId_v2(poolName: string, podName: string, tickId: string): Promise<Response<XRayMatchPoolPodTickMatchResponse>>;
    /**
     * Query xray match pool tick tickets detail by tick id.
     */
    getTicketsXray_ByPoolName_ByPodName_ByTickId_v2(poolName: string, podName: string, tickId: string): Promise<Response<XRayMatchPoolPodTickTicketResponse>>;
}

/**
 * AUTO GENERATED
 */

declare function GameSessionDetailAdminApi(sdk: AccelByteSDK, args?: SdkSetConfigParam): {
    /**
     * Get all parties.
     */
    getParties: (queryParams?: {
        limit?: number;
        offset?: number;
        order?: string | null;
        orderBy?: string | null;
        partyID?: string | null;
        userID?: string | null;
    }) => Promise<AxiosResponse<PartyDetailQueryResponse>>;
    /**
     * Get all matchmaking ticket.
     */
    getTickets: (queryParams?: {
        endDate?: string | null;
        gameMode?: string | null;
        limit?: number;
        offset?: number;
        order?: string | null;
        partyID?: string | null;
        region?: string | null;
        startDate?: string | null;
        userIDs?: string | null;
    }) => Promise<AxiosResponse<TicketDetailQueryResponse>>;
    /**
     * Get all matchmaking.
     */
    getMatchmaking: (queryParams?: {
        gameSessionID?: string | null;
        limit?: number;
        offset?: number;
        order?: string | null;
        orderBy?: string | null;
        ticketID?: string | null;
        userID?: string | null;
    }) => Promise<AxiosResponse<MatchmakingDetailQueryResponse>>;
    /**
     * Get all game sessions.
     */
    getGamesessions: (queryParams?: {
        endDate?: string | null;
        gameSessionID?: string | null;
        limit?: number;
        offset?: number;
        order?: string | null;
        orderBy?: string | null;
        startDate?: string | null;
        userID?: string | null;
    }) => Promise<AxiosResponse<GameSessionDetailQueryResponse>>;
    /**
     * Get detail matchmaking ticket history by ticket ID.
     */
    getTicket_ByTicketId: (ticketId: string) => Promise<AxiosResponse<TicketObservabilityDetail>>;
    /**
     * Get party detail.
     */
    getParty_BySessionId: (sessionId: string) => Promise<AxiosResponse<PartyDetail>>;
    /**
     * Get game session detail.
     */
    getGamesession_BySessionId: (sessionId: string) => Promise<AxiosResponse<GameSessionDetail>>;
    /**
     * Get detail matchmaking history by ticket ID.
     */
    getMatchmakingTicket_ByTicketId: (ticketId: string) => Promise<AxiosResponse<MatchmakingDetail>>;
    /**
     * Get detail matchmaking history by session ID.
     */
    getMatchmakingSession_BySessionId: (sessionId: string) => Promise<AxiosResponse<MatchmakingDetail>>;
};

/**
 * AUTO GENERATED
 */

declare function XRayAdminApi(sdk: AccelByteSDK, args?: SdkSetConfigParam): {
    /**
     * Create ticket observability request Request body details (all attributes are optional): Timestamp : timestamp when calling this endpoint Action : support one of the following value: 1. &#34;matchFound&#34; 2. &#34;matchNotFound&#34; 3. &#34;flexed&#34; TicketID : ticket ID MatchID : match ID will be filled only when match found Namespace : ticket current namespace GameMode : ticket current matchpool ActiveAllianceRule : current active alliance ruleset ActiveMatchingRule : current active matching ruleset Function : name of the function that called the endpoint Iteration : total iteration before match found TimeToMatchSec : time to match (in seconds) will be filled only when match found UnmatchReason : reason when unable to find match RemainingTickets : remaining ticket when unable to find match RemainingPlayersPerTicket : remaining players when unable to find match UnbackfillReason : reason when unable to backfill IsBackfillMatch : flag to distinguish between new match and backfill match IsRuleSetFlexed : flag if ruleset is getting flexed TickID : tick id for the matchmaking tick SessionTickID : session tick id for differentiate session when doing matches
     */
    createXrayTicket_v2: (data: XRayTicketObservabilityRequest) => Promise<AxiosResponse<XRayTicketObservabilityResponse>>;
    /**
     * Create bulk ticket observability request Request body details (all attributes are optional): Timestamp : timestamp when calling this endpoint Action : support one of the following value: 1. &#34;matchFound&#34; 2. &#34;matchNotFound&#34; 3. &#34;flexed&#34; PartyID : ticket Party ID MatchID : match ID will be filled only when match found Namespace : ticket current namespace GameMode : ticket current matchpool ActiveAllianceRule : current active alliance ruleset ActiveMatchingRule : current active matching ruleset Function : name of the function that called the endpoint Iteration : total iteration before match found TimeToMatchSec : time to match (in seconds) will be filled only when match found UnmatchReason : reason when unable to find match RemainingTickets : remaining ticket when unable to find match RemainingPlayersPerTicket : remaining players when unable to find match UnbackfillReason : reason when unable to backfill IsBackfillMatch : flag to distinguish between new match and backfill match IsRuleSetFlexed : flag if ruleset is getting flexed TickID : tick id for the matchmaking tick SessionTickID : session tick id for differentiate session when doing matches
     */
    createXrayTicketBulk_v2: (data: XRayBulkTicketObservabilityRequest) => Promise<AxiosResponse<XRayBulkTicketObservabilityResponse>>;
    /**
     * Query xray timeline by ticketID
     */
    getXrayTicket_ByTicketId_v2: (ticketId: string, queryParams: {
        endDate: string | null;
        startDate: string | null;
        limit?: number;
        offset?: number;
    }) => Promise<AxiosResponse<XRayTicketQueryResponse>>;
    /**
     * Query total match.
     */
    getXrayMetricsTotalMatch_v2: (queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }) => Promise<AxiosResponse<XRayMatchMatchmakingQueryResponse>>;
    /**
     * Query total success and failed claim DS.
     */
    getXrayMetricsAcquiringDs_v2: (queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }) => Promise<AxiosResponse<XRayAcquiringDsQueryResponse>>;
    /**
     * Query xray match pool. query can using matchpool array with separate &#34;,&#34;
     */
    getXrayMatchPool_ByPoolName_v2: (poolName: string[], queryParams: {
        endDate: string | null;
        startDate: string | null;
    }) => Promise<AxiosResponse<XRayMatchPoolQueryResponse>>;
    /**
     * Query xray timeline by userID or ticketID
     */
    getTicketsXray_ByUserId_v2: (userId: string, queryParams: {
        endDate: string | null;
        startDate: string | null;
        limit?: number;
        offset?: number;
    }) => Promise<AxiosResponse<XRayTicketQueryResponse>>;
    /**
     * Query xray timeline by matchID.
     */
    getTicketsXray_ByMatchId_v2: (matchId: string) => Promise<AxiosResponse<XRayMatchesQueryResponse>>;
    /**
     * Query total ticket match.
     */
    getXrayMetricsTotalTicketMatch_v2: (queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }) => Promise<AxiosResponse<XRayMatchMatchmakingTicketQueryResponse>>;
    /**
     * Query xray match histories.
     */
    getHistoriesXray_ByMatchId_v2: (matchId: string, queryParams?: {
        limit?: number;
        offset?: number;
    }) => Promise<AxiosResponse<XRayMatchHistorQueryResponse>>;
    /**
     * Query total active session.
     */
    getXrayMetricsTotalActiveSession_v2: (queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
        region?: string | null;
    }) => Promise<AxiosResponse<XRayTotalActiveSessionQueryResponse>>;
    /**
     * Query total ticket created.
     */
    getXrayMetricsTotalTicketCreated_v2: (queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }) => Promise<AxiosResponse<XRayCreatedMatchmakingTicketQueryResponse>>;
    /**
     * Query total ticket expired.
     */
    getXrayMetricsTotalTicketExpired_v2: (queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }) => Promise<AxiosResponse<XRayExpiredMatchmakingTicketQueryResponse>>;
    /**
     * Query total ticket canceled.
     */
    getXrayMetricsTotalTicketCanceled_v2: (queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }) => Promise<AxiosResponse<XRayCanceledMatchmakingTicketQueryResponse>>;
    /**
     * Query match length duration avg. time in seconds
     */
    getXrayMetricsMatchLengthDurationAvg_v2: (queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }) => Promise<AxiosResponse<XRayMatchLengthDurationQueryResponse>>;
    /**
     * Query match length duration p99. time in seconds
     */
    getXrayMetricsMatchLengthDurationP99_v2: (queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }) => Promise<AxiosResponse<XRayMatchLengthDurationQueryResponse>>;
    /**
     * Query xray match ticket histories.
     */
    getTicketHistoriesXray_ByMatchId_v2: (matchId: string) => Promise<AxiosResponse<XRayMatchTicketHistoryQueryResponse>>;
    /**
     * Query acquiring ds wait time average. time in seconds
     */
    getXrayMetricsAcquiringDsWaitTimeAvg_v2: (queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }) => Promise<AxiosResponse<XRayAcquiringDsWaitTimeQueryResponse>>;
    /**
     * Query total player persession average.
     */
    getXrayMetricsTotalPlayerPersessionAvg_v2: (queryParams: {
        endDate: string | null;
        startDate: string | null;
        matchPool?: string[];
    }) => Promise<AxiosResponse<XRayTotalPlayerPersessionAvgQueryResponse>>;
    /**
     * Query xray match pool ticks.
     */
    getTicksXray_ByPoolName_ByPodName_v2: (poolName: string, podName: string, queryParams: {
        endDate: string | null;
        startDate: string | null;
        all?: boolean | null;
        limit?: number;
        offset?: number;
    }) => Promise<AxiosResponse<XRayMatchPoolPodTickQueryResponse>>;
    /**
     * Query xray match pool tick matches by tick id.
     */
    getMatchesXray_ByPoolName_ByPodName_ByTickId_v2: (poolName: string, podName: string, tickId: string) => Promise<AxiosResponse<XRayMatchPoolPodTickMatchResponse>>;
    /**
     * Query xray match pool tick tickets detail by tick id.
     */
    getTicketsXray_ByPoolName_ByPodName_ByTickId_v2: (poolName: string, podName: string, tickId: string) => Promise<AxiosResponse<XRayMatchPoolPodTickTicketResponse>>;
};

declare const AcquiringDs: z.ZodObject<{
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    matchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    region: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    success: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    value: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    region?: string | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
    success?: boolean | null | undefined;
}, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    region?: string | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
    success?: boolean | null | undefined;
}>;
interface AcquiringDs extends z.TypeOf<typeof AcquiringDs> {
}

declare const AcquiringDsWaitTime: z.ZodObject<{
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    matchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    value: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}>;
interface AcquiringDsWaitTime extends z.TypeOf<typeof AcquiringDsWaitTime> {
}

declare const AllianceRule: z.ZodObject<{
    max_number: z.ZodNumber;
    min_number: z.ZodNumber;
    player_max_number: z.ZodNumber;
    player_min_number: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    max_number: number;
    min_number: number;
    player_max_number: number;
    player_min_number: number;
}, {
    max_number: number;
    min_number: number;
    player_max_number: number;
    player_min_number: number;
}>;
interface AllianceRule extends z.TypeOf<typeof AllianceRule> {
}

declare const BackfillProposal: z.ZodObject<{
    AddedTickets: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Latencies: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
        MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        MatchedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        PartySessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PlayerID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }, {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }>, "many">>>;
        ProposedProposal: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            BackfillID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            ProposalID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        }, {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        }>>>;
        TicketAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        TicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
    }, {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
    }>, "many">>>;
    BackfillTicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    MatchSessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ProposalID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ProposedTeams: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        Parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strip", z.ZodTypeAny, {
            PartyID?: string | null | undefined;
            UserIDs?: string[] | null | undefined;
        }, {
            PartyID?: string | null | undefined;
            UserIDs?: string[] | null | undefined;
        }>, "many">>>;
        UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    }, "strip", z.ZodTypeAny, {
        UserIDs?: string[] | null | undefined;
        Parties?: {
            PartyID?: string | null | undefined;
            UserIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }, {
        UserIDs?: string[] | null | undefined;
        Parties?: {
            PartyID?: string | null | undefined;
            UserIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }>, "many">>>;
}, "strip", z.ZodTypeAny, {
    BackfillTicketID?: string | null | undefined;
    CreatedAt?: string | null | undefined;
    MatchPool?: string | null | undefined;
    ProposalID?: string | null | undefined;
    AddedTickets?: {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
    }[] | null | undefined;
    MatchSessionID?: string | null | undefined;
    ProposedTeams?: {
        UserIDs?: string[] | null | undefined;
        Parties?: {
            PartyID?: string | null | undefined;
            UserIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }[] | null | undefined;
}, {
    BackfillTicketID?: string | null | undefined;
    CreatedAt?: string | null | undefined;
    MatchPool?: string | null | undefined;
    ProposalID?: string | null | undefined;
    AddedTickets?: {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
    }[] | null | undefined;
    MatchSessionID?: string | null | undefined;
    ProposedTeams?: {
        UserIDs?: string[] | null | undefined;
        Parties?: {
            PartyID?: string | null | undefined;
            UserIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }[] | null | undefined;
}>;
interface BackfillProposal extends z.TypeOf<typeof BackfillProposal> {
}

declare const BackfillTicket: z.ZodObject<{
    CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    MatchSessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    MatchSessionVersion: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    PartialMatch: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        Backfill: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        ClientVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        MatchAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        PivotID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        RegionPreference: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        ServerName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Teams: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            Parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            }, "strip", z.ZodTypeAny, {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }, {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }>, "many">>>;
            UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strip", z.ZodTypeAny, {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }, {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }>, "many">>>;
        Tickets: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            IsPivot: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            Latencies: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
            MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            MatchedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PartySessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                PlayerID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }, {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }>, "many">>>;
            ProposedProposal: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                BackfillID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                ProposalID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            }, {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            }>>>;
            RegionPreference: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            TicketAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            TicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            TimeToMatch: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
            IsPivot?: boolean | null | undefined;
            RegionPreference?: string[] | null | undefined;
            TimeToMatch?: number | null | undefined;
        }, {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
            IsPivot?: boolean | null | undefined;
            RegionPreference?: string[] | null | undefined;
            TimeToMatch?: number | null | undefined;
        }>, "many">>>;
        Timestamp: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        ClientVersion?: string | null | undefined;
        Teams?: {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        RegionPreference?: string[] | null | undefined;
        Backfill?: boolean | null | undefined;
        MatchAttributes?: Record<string, any> | null | undefined;
        PivotID?: string | null | undefined;
        ServerName?: string | null | undefined;
        Tickets?: {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
            IsPivot?: boolean | null | undefined;
            RegionPreference?: string[] | null | undefined;
            TimeToMatch?: number | null | undefined;
        }[] | null | undefined;
        Timestamp?: string | null | undefined;
    }, {
        ClientVersion?: string | null | undefined;
        Teams?: {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        RegionPreference?: string[] | null | undefined;
        Backfill?: boolean | null | undefined;
        MatchAttributes?: Record<string, any> | null | undefined;
        PivotID?: string | null | undefined;
        ServerName?: string | null | undefined;
        Tickets?: {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
            IsPivot?: boolean | null | undefined;
            RegionPreference?: string[] | null | undefined;
            TimeToMatch?: number | null | undefined;
        }[] | null | undefined;
        Timestamp?: string | null | undefined;
    }>>>;
    TicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    CreatedAt?: string | null | undefined;
    MatchPool?: string | null | undefined;
    TicketID?: string | null | undefined;
    MatchSessionID?: string | null | undefined;
    MatchSessionVersion?: number | null | undefined;
    PartialMatch?: {
        ClientVersion?: string | null | undefined;
        Teams?: {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        RegionPreference?: string[] | null | undefined;
        Backfill?: boolean | null | undefined;
        MatchAttributes?: Record<string, any> | null | undefined;
        PivotID?: string | null | undefined;
        ServerName?: string | null | undefined;
        Tickets?: {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
            IsPivot?: boolean | null | undefined;
            RegionPreference?: string[] | null | undefined;
            TimeToMatch?: number | null | undefined;
        }[] | null | undefined;
        Timestamp?: string | null | undefined;
    } | null | undefined;
}, {
    CreatedAt?: string | null | undefined;
    MatchPool?: string | null | undefined;
    TicketID?: string | null | undefined;
    MatchSessionID?: string | null | undefined;
    MatchSessionVersion?: number | null | undefined;
    PartialMatch?: {
        ClientVersion?: string | null | undefined;
        Teams?: {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        RegionPreference?: string[] | null | undefined;
        Backfill?: boolean | null | undefined;
        MatchAttributes?: Record<string, any> | null | undefined;
        PivotID?: string | null | undefined;
        ServerName?: string | null | undefined;
        Tickets?: {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
            IsPivot?: boolean | null | undefined;
            RegionPreference?: string[] | null | undefined;
            TimeToMatch?: number | null | undefined;
        }[] | null | undefined;
        Timestamp?: string | null | undefined;
    } | null | undefined;
}>;
interface BackfillTicket extends z.TypeOf<typeof BackfillTicket> {
}

declare const CanceledMatchmakingTicket: z.ZodObject<{
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    matchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    value: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}>;
interface CanceledMatchmakingTicket extends z.TypeOf<typeof CanceledMatchmakingTicket> {
}

declare const CreatedMatchmakingTicket: z.ZodObject<{
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    matchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    value: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}>;
interface CreatedMatchmakingTicket extends z.TypeOf<typeof CreatedMatchmakingTicket> {
}

declare const DsInformation: z.ZodObject<{
    RequestedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Server: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        alternate_ips: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        custom_attribute: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        deployment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        game_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        image_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        ip: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        is_override_game_version: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        last_update: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        pod_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        port: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        ports: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
        protocol: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        provider: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        region: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        session_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        namespace?: string | null | undefined;
        status?: string | null | undefined;
        alternate_ips?: string[] | null | undefined;
        custom_attribute?: string | null | undefined;
        deployment?: string | null | undefined;
        game_version?: string | null | undefined;
        image_version?: string | null | undefined;
        ip?: string | null | undefined;
        is_override_game_version?: boolean | null | undefined;
        last_update?: string | null | undefined;
        pod_name?: string | null | undefined;
        port?: number | null | undefined;
        ports?: Record<string, number> | null | undefined;
        protocol?: string | null | undefined;
        provider?: string | null | undefined;
        region?: string | null | undefined;
        session_id?: string | null | undefined;
    }, {
        namespace?: string | null | undefined;
        status?: string | null | undefined;
        alternate_ips?: string[] | null | undefined;
        custom_attribute?: string | null | undefined;
        deployment?: string | null | undefined;
        game_version?: string | null | undefined;
        image_version?: string | null | undefined;
        ip?: string | null | undefined;
        is_override_game_version?: boolean | null | undefined;
        last_update?: string | null | undefined;
        pod_name?: string | null | undefined;
        port?: number | null | undefined;
        ports?: Record<string, number> | null | undefined;
        protocol?: string | null | undefined;
        provider?: string | null | undefined;
        region?: string | null | undefined;
        session_id?: string | null | undefined;
    }>>>;
    Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    StatusV2: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    Server?: {
        namespace?: string | null | undefined;
        status?: string | null | undefined;
        alternate_ips?: string[] | null | undefined;
        custom_attribute?: string | null | undefined;
        deployment?: string | null | undefined;
        game_version?: string | null | undefined;
        image_version?: string | null | undefined;
        ip?: string | null | undefined;
        is_override_game_version?: boolean | null | undefined;
        last_update?: string | null | undefined;
        pod_name?: string | null | undefined;
        port?: number | null | undefined;
        ports?: Record<string, number> | null | undefined;
        protocol?: string | null | undefined;
        provider?: string | null | undefined;
        region?: string | null | undefined;
        session_id?: string | null | undefined;
    } | null | undefined;
    RequestedAt?: string | null | undefined;
    Status?: string | null | undefined;
    StatusV2?: string | null | undefined;
}, {
    Server?: {
        namespace?: string | null | undefined;
        status?: string | null | undefined;
        alternate_ips?: string[] | null | undefined;
        custom_attribute?: string | null | undefined;
        deployment?: string | null | undefined;
        game_version?: string | null | undefined;
        image_version?: string | null | undefined;
        ip?: string | null | undefined;
        is_override_game_version?: boolean | null | undefined;
        last_update?: string | null | undefined;
        pod_name?: string | null | undefined;
        port?: number | null | undefined;
        ports?: Record<string, number> | null | undefined;
        protocol?: string | null | undefined;
        provider?: string | null | undefined;
        region?: string | null | undefined;
        session_id?: string | null | undefined;
    } | null | undefined;
    RequestedAt?: string | null | undefined;
    Status?: string | null | undefined;
    StatusV2?: string | null | undefined;
}>;
interface DsInformation extends z.TypeOf<typeof DsInformation> {
}

declare const Error: z.ZodObject<{
    attributes: z.ZodRecord<z.ZodString, z.ZodString>;
    errorCode: z.ZodNumber;
    errorMessage: z.ZodString;
    message: z.ZodString;
    name: z.ZodString;
}, "strip", z.ZodTypeAny, {
    message: string;
    attributes: Record<string, string>;
    errorCode: number;
    errorMessage: string;
    name: string;
}, {
    message: string;
    attributes: Record<string, string>;
    errorCode: number;
    errorMessage: string;
    name: string;
}>;
interface Error extends z.TypeOf<typeof Error> {
}

declare const EventMatchHistory: z.ZodObject<{
    action: z.ZodString;
    match: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        Backfill: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        ClientVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        MatchAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        PivotID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        RegionPreference: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        ServerName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Teams: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            Parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            }, "strip", z.ZodTypeAny, {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }, {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }>, "many">>>;
            UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strip", z.ZodTypeAny, {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }, {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }>, "many">>>;
        Tickets: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            IsPivot: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            Latencies: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
            MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            MatchedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PartySessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                PlayerID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }, {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }>, "many">>>;
            ProposedProposal: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                BackfillID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                ProposalID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            }, {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            }>>>;
            RegionPreference: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            TicketAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            TicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            TimeToMatch: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
            IsPivot?: boolean | null | undefined;
            RegionPreference?: string[] | null | undefined;
            TimeToMatch?: number | null | undefined;
        }, {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
            IsPivot?: boolean | null | undefined;
            RegionPreference?: string[] | null | undefined;
            TimeToMatch?: number | null | undefined;
        }>, "many">>>;
        Timestamp: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        ClientVersion?: string | null | undefined;
        Teams?: {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        RegionPreference?: string[] | null | undefined;
        Backfill?: boolean | null | undefined;
        MatchAttributes?: Record<string, any> | null | undefined;
        PivotID?: string | null | undefined;
        ServerName?: string | null | undefined;
        Tickets?: {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
            IsPivot?: boolean | null | undefined;
            RegionPreference?: string[] | null | undefined;
            TimeToMatch?: number | null | undefined;
        }[] | null | undefined;
        Timestamp?: string | null | undefined;
    }, {
        ClientVersion?: string | null | undefined;
        Teams?: {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        RegionPreference?: string[] | null | undefined;
        Backfill?: boolean | null | undefined;
        MatchAttributes?: Record<string, any> | null | undefined;
        PivotID?: string | null | undefined;
        ServerName?: string | null | undefined;
        Tickets?: {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
            IsPivot?: boolean | null | undefined;
            RegionPreference?: string[] | null | undefined;
            TimeToMatch?: number | null | undefined;
        }[] | null | undefined;
        Timestamp?: string | null | undefined;
    }>>>;
    matchID: z.ZodString;
    matchpool: z.ZodString;
    namespace: z.ZodString;
    podName: z.ZodString;
    ruleSet: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    tickID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    timestamp: z.ZodString;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    action: string;
    timestamp: string;
    matchID: string;
    podName: string;
    matchpool: string;
    tickID?: string | null | undefined;
    match?: {
        ClientVersion?: string | null | undefined;
        Teams?: {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        RegionPreference?: string[] | null | undefined;
        Backfill?: boolean | null | undefined;
        MatchAttributes?: Record<string, any> | null | undefined;
        PivotID?: string | null | undefined;
        ServerName?: string | null | undefined;
        Tickets?: {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
            IsPivot?: boolean | null | undefined;
            RegionPreference?: string[] | null | undefined;
            TimeToMatch?: number | null | undefined;
        }[] | null | undefined;
        Timestamp?: string | null | undefined;
    } | null | undefined;
    ruleSet?: string | null | undefined;
}, {
    namespace: string;
    action: string;
    timestamp: string;
    matchID: string;
    podName: string;
    matchpool: string;
    tickID?: string | null | undefined;
    match?: {
        ClientVersion?: string | null | undefined;
        Teams?: {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        RegionPreference?: string[] | null | undefined;
        Backfill?: boolean | null | undefined;
        MatchAttributes?: Record<string, any> | null | undefined;
        PivotID?: string | null | undefined;
        ServerName?: string | null | undefined;
        Tickets?: {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
            IsPivot?: boolean | null | undefined;
            RegionPreference?: string[] | null | undefined;
            TimeToMatch?: number | null | undefined;
        }[] | null | undefined;
        Timestamp?: string | null | undefined;
    } | null | undefined;
    ruleSet?: string | null | undefined;
}>;
interface EventMatchHistory extends z.TypeOf<typeof EventMatchHistory> {
}

declare const ExpiredMatchmakingTicket: z.ZodObject<{
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    matchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    value: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}>;
interface ExpiredMatchmakingTicket extends z.TypeOf<typeof ExpiredMatchmakingTicket> {
}

declare const GameServer: z.ZodObject<{
    alternate_ips: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    custom_attribute: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    deployment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    game_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    image_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ip: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    is_override_game_version: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    last_update: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    pod_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    port: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    ports: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
    protocol: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    provider: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    region: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    session_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    namespace?: string | null | undefined;
    status?: string | null | undefined;
    alternate_ips?: string[] | null | undefined;
    custom_attribute?: string | null | undefined;
    deployment?: string | null | undefined;
    game_version?: string | null | undefined;
    image_version?: string | null | undefined;
    ip?: string | null | undefined;
    is_override_game_version?: boolean | null | undefined;
    last_update?: string | null | undefined;
    pod_name?: string | null | undefined;
    port?: number | null | undefined;
    ports?: Record<string, number> | null | undefined;
    protocol?: string | null | undefined;
    provider?: string | null | undefined;
    region?: string | null | undefined;
    session_id?: string | null | undefined;
}, {
    namespace?: string | null | undefined;
    status?: string | null | undefined;
    alternate_ips?: string[] | null | undefined;
    custom_attribute?: string | null | undefined;
    deployment?: string | null | undefined;
    game_version?: string | null | undefined;
    image_version?: string | null | undefined;
    ip?: string | null | undefined;
    is_override_game_version?: boolean | null | undefined;
    last_update?: string | null | undefined;
    pod_name?: string | null | undefined;
    port?: number | null | undefined;
    ports?: Record<string, number> | null | undefined;
    protocol?: string | null | undefined;
    provider?: string | null | undefined;
    region?: string | null | undefined;
    session_id?: string | null | undefined;
}>;
interface GameServer extends z.TypeOf<typeof GameServer> {
}

declare const GameSession: z.ZodObject<{
    Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    BackfillTicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Code: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Configuration: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        ClientVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Deployment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        InactiveTimeout: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        InviteTimeout: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        Joinability: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        MaxPlayers: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        MinPlayers: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        Name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Persistent: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        RequestedRegions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        Type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        ClientVersion?: string | null | undefined;
        Deployment?: string | null | undefined;
        InactiveTimeout?: number | null | undefined;
        InviteTimeout?: number | null | undefined;
        Joinability?: string | null | undefined;
        MaxPlayers?: number | null | undefined;
        MinPlayers?: number | null | undefined;
        Name?: string | null | undefined;
        Persistent?: boolean | null | undefined;
        RequestedRegions?: string[] | null | undefined;
        Type?: string | null | undefined;
    }, {
        ClientVersion?: string | null | undefined;
        Deployment?: string | null | undefined;
        InactiveTimeout?: number | null | undefined;
        InviteTimeout?: number | null | undefined;
        Joinability?: string | null | undefined;
        MaxPlayers?: number | null | undefined;
        MinPlayers?: number | null | undefined;
        Name?: string | null | undefined;
        Persistent?: boolean | null | undefined;
        RequestedRegions?: string[] | null | undefined;
        Type?: string | null | undefined;
    }>>>;
    ConfigurationName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    CreatedBy: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    DSInformation: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        RequestedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Server: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            alternate_ips: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            custom_attribute: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            deployment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            game_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            image_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            ip: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            is_override_game_version: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            last_update: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            pod_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            port: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            ports: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
            protocol: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            provider: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            region: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            session_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            namespace?: string | null | undefined;
            status?: string | null | undefined;
            alternate_ips?: string[] | null | undefined;
            custom_attribute?: string | null | undefined;
            deployment?: string | null | undefined;
            game_version?: string | null | undefined;
            image_version?: string | null | undefined;
            ip?: string | null | undefined;
            is_override_game_version?: boolean | null | undefined;
            last_update?: string | null | undefined;
            pod_name?: string | null | undefined;
            port?: number | null | undefined;
            ports?: Record<string, number> | null | undefined;
            protocol?: string | null | undefined;
            provider?: string | null | undefined;
            region?: string | null | undefined;
            session_id?: string | null | undefined;
        }, {
            namespace?: string | null | undefined;
            status?: string | null | undefined;
            alternate_ips?: string[] | null | undefined;
            custom_attribute?: string | null | undefined;
            deployment?: string | null | undefined;
            game_version?: string | null | undefined;
            image_version?: string | null | undefined;
            ip?: string | null | undefined;
            is_override_game_version?: boolean | null | undefined;
            last_update?: string | null | undefined;
            pod_name?: string | null | undefined;
            port?: number | null | undefined;
            ports?: Record<string, number> | null | undefined;
            protocol?: string | null | undefined;
            provider?: string | null | undefined;
            region?: string | null | undefined;
            session_id?: string | null | undefined;
        }>>>;
        Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        StatusV2: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        Server?: {
            namespace?: string | null | undefined;
            status?: string | null | undefined;
            alternate_ips?: string[] | null | undefined;
            custom_attribute?: string | null | undefined;
            deployment?: string | null | undefined;
            game_version?: string | null | undefined;
            image_version?: string | null | undefined;
            ip?: string | null | undefined;
            is_override_game_version?: boolean | null | undefined;
            last_update?: string | null | undefined;
            pod_name?: string | null | undefined;
            port?: number | null | undefined;
            ports?: Record<string, number> | null | undefined;
            protocol?: string | null | undefined;
            provider?: string | null | undefined;
            region?: string | null | undefined;
            session_id?: string | null | undefined;
        } | null | undefined;
        RequestedAt?: string | null | undefined;
        Status?: string | null | undefined;
        StatusV2?: string | null | undefined;
    }, {
        Server?: {
            namespace?: string | null | undefined;
            status?: string | null | undefined;
            alternate_ips?: string[] | null | undefined;
            custom_attribute?: string | null | undefined;
            deployment?: string | null | undefined;
            game_version?: string | null | undefined;
            image_version?: string | null | undefined;
            ip?: string | null | undefined;
            is_override_game_version?: boolean | null | undefined;
            last_update?: string | null | undefined;
            pod_name?: string | null | undefined;
            port?: number | null | undefined;
            ports?: Record<string, number> | null | undefined;
            protocol?: string | null | undefined;
            provider?: string | null | undefined;
            region?: string | null | undefined;
            session_id?: string | null | undefined;
        } | null | undefined;
        RequestedAt?: string | null | undefined;
        Status?: string | null | undefined;
        StatusV2?: string | null | undefined;
    }>>>;
    GameMode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    IsFull: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    LeaderID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Members: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        ID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        PlatformUserID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        StatusV2: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        UpdatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        Status?: string | null | undefined;
        StatusV2?: string | null | undefined;
        ID?: string | null | undefined;
        PlatformID?: string | null | undefined;
        PlatformUserID?: string | null | undefined;
        UpdatedAt?: string | null | undefined;
    }, {
        Status?: string | null | undefined;
        StatusV2?: string | null | undefined;
        ID?: string | null | undefined;
        PlatformID?: string | null | undefined;
        PlatformUserID?: string | null | undefined;
        UpdatedAt?: string | null | undefined;
    }>, "many">>>;
    Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ProcessingTime: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    Teams: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            partyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strip", z.ZodTypeAny, {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }, {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }>, "many">>>;
        userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    }, "strip", z.ZodTypeAny, {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }, {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }>, "many">>>;
    TicketIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    UpdatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Version: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    isActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
}, "strip", z.ZodTypeAny, {
    Configuration?: {
        ClientVersion?: string | null | undefined;
        Deployment?: string | null | undefined;
        InactiveTimeout?: number | null | undefined;
        InviteTimeout?: number | null | undefined;
        Joinability?: string | null | undefined;
        MaxPlayers?: number | null | undefined;
        MinPlayers?: number | null | undefined;
        Name?: string | null | undefined;
        Persistent?: boolean | null | undefined;
        RequestedRegions?: string[] | null | undefined;
        Type?: string | null | undefined;
    } | null | undefined;
    ID?: string | null | undefined;
    UpdatedAt?: string | null | undefined;
    Attributes?: Record<string, any> | null | undefined;
    BackfillTicketID?: string | null | undefined;
    Code?: string | null | undefined;
    ConfigurationName?: string | null | undefined;
    CreatedAt?: string | null | undefined;
    CreatedBy?: string | null | undefined;
    DSInformation?: {
        Server?: {
            namespace?: string | null | undefined;
            status?: string | null | undefined;
            alternate_ips?: string[] | null | undefined;
            custom_attribute?: string | null | undefined;
            deployment?: string | null | undefined;
            game_version?: string | null | undefined;
            image_version?: string | null | undefined;
            ip?: string | null | undefined;
            is_override_game_version?: boolean | null | undefined;
            last_update?: string | null | undefined;
            pod_name?: string | null | undefined;
            port?: number | null | undefined;
            ports?: Record<string, number> | null | undefined;
            protocol?: string | null | undefined;
            provider?: string | null | undefined;
            region?: string | null | undefined;
            session_id?: string | null | undefined;
        } | null | undefined;
        RequestedAt?: string | null | undefined;
        Status?: string | null | undefined;
        StatusV2?: string | null | undefined;
    } | null | undefined;
    GameMode?: string | null | undefined;
    IsFull?: boolean | null | undefined;
    LeaderID?: string | null | undefined;
    MatchPool?: string | null | undefined;
    Members?: {
        Status?: string | null | undefined;
        StatusV2?: string | null | undefined;
        ID?: string | null | undefined;
        PlatformID?: string | null | undefined;
        PlatformUserID?: string | null | undefined;
        UpdatedAt?: string | null | undefined;
    }[] | null | undefined;
    Namespace?: string | null | undefined;
    ProcessingTime?: number | null | undefined;
    Teams?: {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }[] | null | undefined;
    TicketIDs?: string[] | null | undefined;
    Version?: number | null | undefined;
    isActive?: boolean | null | undefined;
}, {
    Configuration?: {
        ClientVersion?: string | null | undefined;
        Deployment?: string | null | undefined;
        InactiveTimeout?: number | null | undefined;
        InviteTimeout?: number | null | undefined;
        Joinability?: string | null | undefined;
        MaxPlayers?: number | null | undefined;
        MinPlayers?: number | null | undefined;
        Name?: string | null | undefined;
        Persistent?: boolean | null | undefined;
        RequestedRegions?: string[] | null | undefined;
        Type?: string | null | undefined;
    } | null | undefined;
    ID?: string | null | undefined;
    UpdatedAt?: string | null | undefined;
    Attributes?: Record<string, any> | null | undefined;
    BackfillTicketID?: string | null | undefined;
    Code?: string | null | undefined;
    ConfigurationName?: string | null | undefined;
    CreatedAt?: string | null | undefined;
    CreatedBy?: string | null | undefined;
    DSInformation?: {
        Server?: {
            namespace?: string | null | undefined;
            status?: string | null | undefined;
            alternate_ips?: string[] | null | undefined;
            custom_attribute?: string | null | undefined;
            deployment?: string | null | undefined;
            game_version?: string | null | undefined;
            image_version?: string | null | undefined;
            ip?: string | null | undefined;
            is_override_game_version?: boolean | null | undefined;
            last_update?: string | null | undefined;
            pod_name?: string | null | undefined;
            port?: number | null | undefined;
            ports?: Record<string, number> | null | undefined;
            protocol?: string | null | undefined;
            provider?: string | null | undefined;
            region?: string | null | undefined;
            session_id?: string | null | undefined;
        } | null | undefined;
        RequestedAt?: string | null | undefined;
        Status?: string | null | undefined;
        StatusV2?: string | null | undefined;
    } | null | undefined;
    GameMode?: string | null | undefined;
    IsFull?: boolean | null | undefined;
    LeaderID?: string | null | undefined;
    MatchPool?: string | null | undefined;
    Members?: {
        Status?: string | null | undefined;
        StatusV2?: string | null | undefined;
        ID?: string | null | undefined;
        PlatformID?: string | null | undefined;
        PlatformUserID?: string | null | undefined;
        UpdatedAt?: string | null | undefined;
    }[] | null | undefined;
    Namespace?: string | null | undefined;
    ProcessingTime?: number | null | undefined;
    Teams?: {
        userIDs?: string[] | null | undefined;
        parties?: {
            partyID?: string | null | undefined;
            userIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }[] | null | undefined;
    TicketIDs?: string[] | null | undefined;
    Version?: number | null | undefined;
    isActive?: boolean | null | undefined;
}>;
interface GameSession extends z.TypeOf<typeof GameSession> {
}

declare const GameSessionTeam: z.ZodObject<{
    parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        partyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    }, "strip", z.ZodTypeAny, {
        partyID?: string | null | undefined;
        userIDs?: string[] | null | undefined;
    }, {
        partyID?: string | null | undefined;
        userIDs?: string[] | null | undefined;
    }>, "many">>>;
    userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
}, "strip", z.ZodTypeAny, {
    userIDs?: string[] | null | undefined;
    parties?: {
        partyID?: string | null | undefined;
        userIDs?: string[] | null | undefined;
    }[] | null | undefined;
}, {
    userIDs?: string[] | null | undefined;
    parties?: {
        partyID?: string | null | undefined;
        userIDs?: string[] | null | undefined;
    }[] | null | undefined;
}>;
interface GameSessionTeam extends z.TypeOf<typeof GameSessionTeam> {
}

declare const History: z.ZodObject<{
    eventName: z.ZodString;
    payload: z.ZodObject<{
        Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        BackfillTicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Code: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Configuration: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            ClientVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Deployment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            InactiveTimeout: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            InviteTimeout: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            Joinability: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            MaxPlayers: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            MinPlayers: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            Name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Persistent: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            RequestedRegions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            Type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            ClientVersion?: string | null | undefined;
            Deployment?: string | null | undefined;
            InactiveTimeout?: number | null | undefined;
            InviteTimeout?: number | null | undefined;
            Joinability?: string | null | undefined;
            MaxPlayers?: number | null | undefined;
            MinPlayers?: number | null | undefined;
            Name?: string | null | undefined;
            Persistent?: boolean | null | undefined;
            RequestedRegions?: string[] | null | undefined;
            Type?: string | null | undefined;
        }, {
            ClientVersion?: string | null | undefined;
            Deployment?: string | null | undefined;
            InactiveTimeout?: number | null | undefined;
            InviteTimeout?: number | null | undefined;
            Joinability?: string | null | undefined;
            MaxPlayers?: number | null | undefined;
            MinPlayers?: number | null | undefined;
            Name?: string | null | undefined;
            Persistent?: boolean | null | undefined;
            RequestedRegions?: string[] | null | undefined;
            Type?: string | null | undefined;
        }>>>;
        ConfigurationName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        CreatedBy: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        DSInformation: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            RequestedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Server: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                alternate_ips: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
                custom_attribute: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                deployment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                game_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                image_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                ip: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                is_override_game_version: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
                last_update: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                pod_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                port: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                ports: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
                protocol: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                provider: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                region: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                session_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                namespace?: string | null | undefined;
                status?: string | null | undefined;
                alternate_ips?: string[] | null | undefined;
                custom_attribute?: string | null | undefined;
                deployment?: string | null | undefined;
                game_version?: string | null | undefined;
                image_version?: string | null | undefined;
                ip?: string | null | undefined;
                is_override_game_version?: boolean | null | undefined;
                last_update?: string | null | undefined;
                pod_name?: string | null | undefined;
                port?: number | null | undefined;
                ports?: Record<string, number> | null | undefined;
                protocol?: string | null | undefined;
                provider?: string | null | undefined;
                region?: string | null | undefined;
                session_id?: string | null | undefined;
            }, {
                namespace?: string | null | undefined;
                status?: string | null | undefined;
                alternate_ips?: string[] | null | undefined;
                custom_attribute?: string | null | undefined;
                deployment?: string | null | undefined;
                game_version?: string | null | undefined;
                image_version?: string | null | undefined;
                ip?: string | null | undefined;
                is_override_game_version?: boolean | null | undefined;
                last_update?: string | null | undefined;
                pod_name?: string | null | undefined;
                port?: number | null | undefined;
                ports?: Record<string, number> | null | undefined;
                protocol?: string | null | undefined;
                provider?: string | null | undefined;
                region?: string | null | undefined;
                session_id?: string | null | undefined;
            }>>>;
            Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            StatusV2: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            Server?: {
                namespace?: string | null | undefined;
                status?: string | null | undefined;
                alternate_ips?: string[] | null | undefined;
                custom_attribute?: string | null | undefined;
                deployment?: string | null | undefined;
                game_version?: string | null | undefined;
                image_version?: string | null | undefined;
                ip?: string | null | undefined;
                is_override_game_version?: boolean | null | undefined;
                last_update?: string | null | undefined;
                pod_name?: string | null | undefined;
                port?: number | null | undefined;
                ports?: Record<string, number> | null | undefined;
                protocol?: string | null | undefined;
                provider?: string | null | undefined;
                region?: string | null | undefined;
                session_id?: string | null | undefined;
            } | null | undefined;
            RequestedAt?: string | null | undefined;
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
        }, {
            Server?: {
                namespace?: string | null | undefined;
                status?: string | null | undefined;
                alternate_ips?: string[] | null | undefined;
                custom_attribute?: string | null | undefined;
                deployment?: string | null | undefined;
                game_version?: string | null | undefined;
                image_version?: string | null | undefined;
                ip?: string | null | undefined;
                is_override_game_version?: boolean | null | undefined;
                last_update?: string | null | undefined;
                pod_name?: string | null | undefined;
                port?: number | null | undefined;
                ports?: Record<string, number> | null | undefined;
                protocol?: string | null | undefined;
                provider?: string | null | undefined;
                region?: string | null | undefined;
                session_id?: string | null | undefined;
            } | null | undefined;
            RequestedAt?: string | null | undefined;
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
        }>>>;
        GameMode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        ID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        IsFull: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        LeaderID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Members: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            ID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PlatformUserID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            StatusV2: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            UpdatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
            ID?: string | null | undefined;
            PlatformID?: string | null | undefined;
            PlatformUserID?: string | null | undefined;
            UpdatedAt?: string | null | undefined;
        }, {
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
            ID?: string | null | undefined;
            PlatformID?: string | null | undefined;
            PlatformUserID?: string | null | undefined;
            UpdatedAt?: string | null | undefined;
        }>, "many">>>;
        Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        ProcessingTime: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        Teams: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                partyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            }, "strip", z.ZodTypeAny, {
                partyID?: string | null | undefined;
                userIDs?: string[] | null | undefined;
            }, {
                partyID?: string | null | undefined;
                userIDs?: string[] | null | undefined;
            }>, "many">>>;
            userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strip", z.ZodTypeAny, {
            userIDs?: string[] | null | undefined;
            parties?: {
                partyID?: string | null | undefined;
                userIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }, {
            userIDs?: string[] | null | undefined;
            parties?: {
                partyID?: string | null | undefined;
                userIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }>, "many">>>;
        TicketIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        UpdatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Version: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        isActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    }, "strip", z.ZodTypeAny, {
        Configuration?: {
            ClientVersion?: string | null | undefined;
            Deployment?: string | null | undefined;
            InactiveTimeout?: number | null | undefined;
            InviteTimeout?: number | null | undefined;
            Joinability?: string | null | undefined;
            MaxPlayers?: number | null | undefined;
            MinPlayers?: number | null | undefined;
            Name?: string | null | undefined;
            Persistent?: boolean | null | undefined;
            RequestedRegions?: string[] | null | undefined;
            Type?: string | null | undefined;
        } | null | undefined;
        ID?: string | null | undefined;
        UpdatedAt?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        BackfillTicketID?: string | null | undefined;
        Code?: string | null | undefined;
        ConfigurationName?: string | null | undefined;
        CreatedAt?: string | null | undefined;
        CreatedBy?: string | null | undefined;
        DSInformation?: {
            Server?: {
                namespace?: string | null | undefined;
                status?: string | null | undefined;
                alternate_ips?: string[] | null | undefined;
                custom_attribute?: string | null | undefined;
                deployment?: string | null | undefined;
                game_version?: string | null | undefined;
                image_version?: string | null | undefined;
                ip?: string | null | undefined;
                is_override_game_version?: boolean | null | undefined;
                last_update?: string | null | undefined;
                pod_name?: string | null | undefined;
                port?: number | null | undefined;
                ports?: Record<string, number> | null | undefined;
                protocol?: string | null | undefined;
                provider?: string | null | undefined;
                region?: string | null | undefined;
                session_id?: string | null | undefined;
            } | null | undefined;
            RequestedAt?: string | null | undefined;
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
        } | null | undefined;
        GameMode?: string | null | undefined;
        IsFull?: boolean | null | undefined;
        LeaderID?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Members?: {
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
            ID?: string | null | undefined;
            PlatformID?: string | null | undefined;
            PlatformUserID?: string | null | undefined;
            UpdatedAt?: string | null | undefined;
        }[] | null | undefined;
        Namespace?: string | null | undefined;
        ProcessingTime?: number | null | undefined;
        Teams?: {
            userIDs?: string[] | null | undefined;
            parties?: {
                partyID?: string | null | undefined;
                userIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        TicketIDs?: string[] | null | undefined;
        Version?: number | null | undefined;
        isActive?: boolean | null | undefined;
    }, {
        Configuration?: {
            ClientVersion?: string | null | undefined;
            Deployment?: string | null | undefined;
            InactiveTimeout?: number | null | undefined;
            InviteTimeout?: number | null | undefined;
            Joinability?: string | null | undefined;
            MaxPlayers?: number | null | undefined;
            MinPlayers?: number | null | undefined;
            Name?: string | null | undefined;
            Persistent?: boolean | null | undefined;
            RequestedRegions?: string[] | null | undefined;
            Type?: string | null | undefined;
        } | null | undefined;
        ID?: string | null | undefined;
        UpdatedAt?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        BackfillTicketID?: string | null | undefined;
        Code?: string | null | undefined;
        ConfigurationName?: string | null | undefined;
        CreatedAt?: string | null | undefined;
        CreatedBy?: string | null | undefined;
        DSInformation?: {
            Server?: {
                namespace?: string | null | undefined;
                status?: string | null | undefined;
                alternate_ips?: string[] | null | undefined;
                custom_attribute?: string | null | undefined;
                deployment?: string | null | undefined;
                game_version?: string | null | undefined;
                image_version?: string | null | undefined;
                ip?: string | null | undefined;
                is_override_game_version?: boolean | null | undefined;
                last_update?: string | null | undefined;
                pod_name?: string | null | undefined;
                port?: number | null | undefined;
                ports?: Record<string, number> | null | undefined;
                protocol?: string | null | undefined;
                provider?: string | null | undefined;
                region?: string | null | undefined;
                session_id?: string | null | undefined;
            } | null | undefined;
            RequestedAt?: string | null | undefined;
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
        } | null | undefined;
        GameMode?: string | null | undefined;
        IsFull?: boolean | null | undefined;
        LeaderID?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Members?: {
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
            ID?: string | null | undefined;
            PlatformID?: string | null | undefined;
            PlatformUserID?: string | null | undefined;
            UpdatedAt?: string | null | undefined;
        }[] | null | undefined;
        Namespace?: string | null | undefined;
        ProcessingTime?: number | null | undefined;
        Teams?: {
            userIDs?: string[] | null | undefined;
            parties?: {
                partyID?: string | null | undefined;
                userIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        TicketIDs?: string[] | null | undefined;
        Version?: number | null | undefined;
        isActive?: boolean | null | undefined;
    }>;
    requesterClientID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    requesterUserID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    timestamp: z.ZodString;
}, "strip", z.ZodTypeAny, {
    eventName: string;
    payload: {
        Configuration?: {
            ClientVersion?: string | null | undefined;
            Deployment?: string | null | undefined;
            InactiveTimeout?: number | null | undefined;
            InviteTimeout?: number | null | undefined;
            Joinability?: string | null | undefined;
            MaxPlayers?: number | null | undefined;
            MinPlayers?: number | null | undefined;
            Name?: string | null | undefined;
            Persistent?: boolean | null | undefined;
            RequestedRegions?: string[] | null | undefined;
            Type?: string | null | undefined;
        } | null | undefined;
        ID?: string | null | undefined;
        UpdatedAt?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        BackfillTicketID?: string | null | undefined;
        Code?: string | null | undefined;
        ConfigurationName?: string | null | undefined;
        CreatedAt?: string | null | undefined;
        CreatedBy?: string | null | undefined;
        DSInformation?: {
            Server?: {
                namespace?: string | null | undefined;
                status?: string | null | undefined;
                alternate_ips?: string[] | null | undefined;
                custom_attribute?: string | null | undefined;
                deployment?: string | null | undefined;
                game_version?: string | null | undefined;
                image_version?: string | null | undefined;
                ip?: string | null | undefined;
                is_override_game_version?: boolean | null | undefined;
                last_update?: string | null | undefined;
                pod_name?: string | null | undefined;
                port?: number | null | undefined;
                ports?: Record<string, number> | null | undefined;
                protocol?: string | null | undefined;
                provider?: string | null | undefined;
                region?: string | null | undefined;
                session_id?: string | null | undefined;
            } | null | undefined;
            RequestedAt?: string | null | undefined;
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
        } | null | undefined;
        GameMode?: string | null | undefined;
        IsFull?: boolean | null | undefined;
        LeaderID?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Members?: {
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
            ID?: string | null | undefined;
            PlatformID?: string | null | undefined;
            PlatformUserID?: string | null | undefined;
            UpdatedAt?: string | null | undefined;
        }[] | null | undefined;
        Namespace?: string | null | undefined;
        ProcessingTime?: number | null | undefined;
        Teams?: {
            userIDs?: string[] | null | undefined;
            parties?: {
                partyID?: string | null | undefined;
                userIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        TicketIDs?: string[] | null | undefined;
        Version?: number | null | undefined;
        isActive?: boolean | null | undefined;
    };
    timestamp: string;
    requesterClientID?: string | null | undefined;
    requesterUserID?: string | null | undefined;
}, {
    eventName: string;
    payload: {
        Configuration?: {
            ClientVersion?: string | null | undefined;
            Deployment?: string | null | undefined;
            InactiveTimeout?: number | null | undefined;
            InviteTimeout?: number | null | undefined;
            Joinability?: string | null | undefined;
            MaxPlayers?: number | null | undefined;
            MinPlayers?: number | null | undefined;
            Name?: string | null | undefined;
            Persistent?: boolean | null | undefined;
            RequestedRegions?: string[] | null | undefined;
            Type?: string | null | undefined;
        } | null | undefined;
        ID?: string | null | undefined;
        UpdatedAt?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        BackfillTicketID?: string | null | undefined;
        Code?: string | null | undefined;
        ConfigurationName?: string | null | undefined;
        CreatedAt?: string | null | undefined;
        CreatedBy?: string | null | undefined;
        DSInformation?: {
            Server?: {
                namespace?: string | null | undefined;
                status?: string | null | undefined;
                alternate_ips?: string[] | null | undefined;
                custom_attribute?: string | null | undefined;
                deployment?: string | null | undefined;
                game_version?: string | null | undefined;
                image_version?: string | null | undefined;
                ip?: string | null | undefined;
                is_override_game_version?: boolean | null | undefined;
                last_update?: string | null | undefined;
                pod_name?: string | null | undefined;
                port?: number | null | undefined;
                ports?: Record<string, number> | null | undefined;
                protocol?: string | null | undefined;
                provider?: string | null | undefined;
                region?: string | null | undefined;
                session_id?: string | null | undefined;
            } | null | undefined;
            RequestedAt?: string | null | undefined;
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
        } | null | undefined;
        GameMode?: string | null | undefined;
        IsFull?: boolean | null | undefined;
        LeaderID?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Members?: {
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
            ID?: string | null | undefined;
            PlatformID?: string | null | undefined;
            PlatformUserID?: string | null | undefined;
            UpdatedAt?: string | null | undefined;
        }[] | null | undefined;
        Namespace?: string | null | undefined;
        ProcessingTime?: number | null | undefined;
        Teams?: {
            userIDs?: string[] | null | undefined;
            parties?: {
                partyID?: string | null | undefined;
                userIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        TicketIDs?: string[] | null | undefined;
        Version?: number | null | undefined;
        isActive?: boolean | null | undefined;
    };
    timestamp: string;
    requesterClientID?: string | null | undefined;
    requesterUserID?: string | null | undefined;
}>;
interface History extends z.TypeOf<typeof History> {
}

declare const Match: z.ZodObject<{
    Backfill: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    ClientVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    MatchAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    PivotID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    RegionPreference: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    ServerName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Teams: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        Parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strip", z.ZodTypeAny, {
            PartyID?: string | null | undefined;
            UserIDs?: string[] | null | undefined;
        }, {
            PartyID?: string | null | undefined;
            UserIDs?: string[] | null | undefined;
        }>, "many">>>;
        UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    }, "strip", z.ZodTypeAny, {
        UserIDs?: string[] | null | undefined;
        Parties?: {
            PartyID?: string | null | undefined;
            UserIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }, {
        UserIDs?: string[] | null | undefined;
        Parties?: {
            PartyID?: string | null | undefined;
            UserIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }>, "many">>>;
    Tickets: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        IsPivot: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        Latencies: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
        MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        MatchedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        PartySessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PlayerID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }, {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }>, "many">>>;
        ProposedProposal: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            BackfillID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            ProposalID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        }, {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        }>>>;
        RegionPreference: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        TicketAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        TicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        TimeToMatch: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
        IsPivot?: boolean | null | undefined;
        RegionPreference?: string[] | null | undefined;
        TimeToMatch?: number | null | undefined;
    }, {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
        IsPivot?: boolean | null | undefined;
        RegionPreference?: string[] | null | undefined;
        TimeToMatch?: number | null | undefined;
    }>, "many">>>;
    Timestamp: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    ClientVersion?: string | null | undefined;
    Teams?: {
        UserIDs?: string[] | null | undefined;
        Parties?: {
            PartyID?: string | null | undefined;
            UserIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }[] | null | undefined;
    RegionPreference?: string[] | null | undefined;
    Backfill?: boolean | null | undefined;
    MatchAttributes?: Record<string, any> | null | undefined;
    PivotID?: string | null | undefined;
    ServerName?: string | null | undefined;
    Tickets?: {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
        IsPivot?: boolean | null | undefined;
        RegionPreference?: string[] | null | undefined;
        TimeToMatch?: number | null | undefined;
    }[] | null | undefined;
    Timestamp?: string | null | undefined;
}, {
    ClientVersion?: string | null | undefined;
    Teams?: {
        UserIDs?: string[] | null | undefined;
        Parties?: {
            PartyID?: string | null | undefined;
            UserIDs?: string[] | null | undefined;
        }[] | null | undefined;
    }[] | null | undefined;
    RegionPreference?: string[] | null | undefined;
    Backfill?: boolean | null | undefined;
    MatchAttributes?: Record<string, any> | null | undefined;
    PivotID?: string | null | undefined;
    ServerName?: string | null | undefined;
    Tickets?: {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
        IsPivot?: boolean | null | undefined;
        RegionPreference?: string[] | null | undefined;
        TimeToMatch?: number | null | undefined;
    }[] | null | undefined;
    Timestamp?: string | null | undefined;
}>;
interface Match extends z.TypeOf<typeof Match> {
}

declare const MatchingAlly: z.ZodObject<{
    matching_parties: z.ZodArray<z.ZodObject<{
        first_ticket_created_at: z.ZodNumber;
        party_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        party_id: z.ZodString;
        party_members: z.ZodArray<z.ZodObject<{
            extra_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            user_id: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            user_id: string;
            extra_attributes?: Record<string, any> | null | undefined;
        }, {
            user_id: string;
            extra_attributes?: Record<string, any> | null | undefined;
        }>, "many">;
        ticket_id: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        first_ticket_created_at: number;
        party_id: string;
        party_members: {
            user_id: string;
            extra_attributes?: Record<string, any> | null | undefined;
        }[];
        ticket_id: string;
        party_attributes?: Record<string, any> | null | undefined;
    }, {
        first_ticket_created_at: number;
        party_id: string;
        party_members: {
            user_id: string;
            extra_attributes?: Record<string, any> | null | undefined;
        }[];
        ticket_id: string;
        party_attributes?: Record<string, any> | null | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    matching_parties: {
        first_ticket_created_at: number;
        party_id: string;
        party_members: {
            user_id: string;
            extra_attributes?: Record<string, any> | null | undefined;
        }[];
        ticket_id: string;
        party_attributes?: Record<string, any> | null | undefined;
    }[];
}, {
    matching_parties: {
        first_ticket_created_at: number;
        party_id: string;
        party_members: {
            user_id: string;
            extra_attributes?: Record<string, any> | null | undefined;
        }[];
        ticket_id: string;
        party_attributes?: Record<string, any> | null | undefined;
    }[];
}>;
interface MatchingAlly extends z.TypeOf<typeof MatchingAlly> {
}

declare const MatchingParty: z.ZodObject<{
    first_ticket_created_at: z.ZodNumber;
    party_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    party_id: z.ZodString;
    party_members: z.ZodArray<z.ZodObject<{
        extra_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        user_id: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        user_id: string;
        extra_attributes?: Record<string, any> | null | undefined;
    }, {
        user_id: string;
        extra_attributes?: Record<string, any> | null | undefined;
    }>, "many">;
    ticket_id: z.ZodString;
}, "strip", z.ZodTypeAny, {
    first_ticket_created_at: number;
    party_id: string;
    party_members: {
        user_id: string;
        extra_attributes?: Record<string, any> | null | undefined;
    }[];
    ticket_id: string;
    party_attributes?: Record<string, any> | null | undefined;
}, {
    first_ticket_created_at: number;
    party_id: string;
    party_members: {
        user_id: string;
        extra_attributes?: Record<string, any> | null | undefined;
    }[];
    ticket_id: string;
    party_attributes?: Record<string, any> | null | undefined;
}>;
interface MatchingParty extends z.TypeOf<typeof MatchingParty> {
}

declare const MatchingRule: z.ZodObject<{
    attribute: z.ZodString;
    criteria: z.ZodString;
    reference: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    attribute: string;
    criteria: string;
    reference: number;
}, {
    attribute: string;
    criteria: string;
    reference: number;
}>;
interface MatchingRule extends z.TypeOf<typeof MatchingRule> {
}

declare const MatchLengthDuration: z.ZodObject<{
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    matchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    value: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}>;
interface MatchLengthDuration extends z.TypeOf<typeof MatchLengthDuration> {
}

declare const MatchmakingHistory: z.ZodObject<{
    backfillProposal: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        AddedTickets: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Latencies: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
            MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            MatchedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PartySessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                PlayerID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }, {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }>, "many">>>;
            ProposedProposal: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                BackfillID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                ProposalID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            }, {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            }>>>;
            TicketAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            TicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
        }, {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
        }>, "many">>>;
        BackfillTicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        MatchSessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        ProposalID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        ProposedTeams: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            Parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            }, "strip", z.ZodTypeAny, {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }, {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }>, "many">>>;
            UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strip", z.ZodTypeAny, {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }, {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }>, "many">>>;
    }, "strip", z.ZodTypeAny, {
        BackfillTicketID?: string | null | undefined;
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        ProposalID?: string | null | undefined;
        AddedTickets?: {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
        }[] | null | undefined;
        MatchSessionID?: string | null | undefined;
        ProposedTeams?: {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
    }, {
        BackfillTicketID?: string | null | undefined;
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        ProposalID?: string | null | undefined;
        AddedTickets?: {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
        }[] | null | undefined;
        MatchSessionID?: string | null | undefined;
        ProposedTeams?: {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
    }>>>;
    backfillTicket: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        MatchSessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        MatchSessionVersion: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        PartialMatch: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            Backfill: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            ClientVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            MatchAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            PivotID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            RegionPreference: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            ServerName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Teams: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                Parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                    PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
                }, "strip", z.ZodTypeAny, {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }, {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }>, "many">>>;
                UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            }, "strip", z.ZodTypeAny, {
                UserIDs?: string[] | null | undefined;
                Parties?: {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }[] | null | undefined;
            }, {
                UserIDs?: string[] | null | undefined;
                Parties?: {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }[] | null | undefined;
            }>, "many">>>;
            Tickets: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                IsPivot: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
                Latencies: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
                MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                MatchedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                PartySessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                Players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                    Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                    PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    PlayerID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                }, "strip", z.ZodTypeAny, {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }, {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }>, "many">>>;
                ProposedProposal: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    BackfillID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    ProposalID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                }, "strip", z.ZodTypeAny, {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                }, {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                }>>>;
                RegionPreference: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
                TicketAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                TicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                TimeToMatch: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                CreatedAt?: string | null | undefined;
                MatchPool?: string | null | undefined;
                Namespace?: string | null | undefined;
                Latencies?: Record<string, number> | null | undefined;
                MatchedAt?: string | null | undefined;
                PartySessionID?: string | null | undefined;
                Players?: {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }[] | null | undefined;
                ProposedProposal?: {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                } | null | undefined;
                TicketAttributes?: Record<string, any> | null | undefined;
                TicketID?: string | null | undefined;
                IsPivot?: boolean | null | undefined;
                RegionPreference?: string[] | null | undefined;
                TimeToMatch?: number | null | undefined;
            }, {
                CreatedAt?: string | null | undefined;
                MatchPool?: string | null | undefined;
                Namespace?: string | null | undefined;
                Latencies?: Record<string, number> | null | undefined;
                MatchedAt?: string | null | undefined;
                PartySessionID?: string | null | undefined;
                Players?: {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }[] | null | undefined;
                ProposedProposal?: {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                } | null | undefined;
                TicketAttributes?: Record<string, any> | null | undefined;
                TicketID?: string | null | undefined;
                IsPivot?: boolean | null | undefined;
                RegionPreference?: string[] | null | undefined;
                TimeToMatch?: number | null | undefined;
            }>, "many">>>;
            Timestamp: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            ClientVersion?: string | null | undefined;
            Teams?: {
                UserIDs?: string[] | null | undefined;
                Parties?: {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            RegionPreference?: string[] | null | undefined;
            Backfill?: boolean | null | undefined;
            MatchAttributes?: Record<string, any> | null | undefined;
            PivotID?: string | null | undefined;
            ServerName?: string | null | undefined;
            Tickets?: {
                CreatedAt?: string | null | undefined;
                MatchPool?: string | null | undefined;
                Namespace?: string | null | undefined;
                Latencies?: Record<string, number> | null | undefined;
                MatchedAt?: string | null | undefined;
                PartySessionID?: string | null | undefined;
                Players?: {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }[] | null | undefined;
                ProposedProposal?: {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                } | null | undefined;
                TicketAttributes?: Record<string, any> | null | undefined;
                TicketID?: string | null | undefined;
                IsPivot?: boolean | null | undefined;
                RegionPreference?: string[] | null | undefined;
                TimeToMatch?: number | null | undefined;
            }[] | null | undefined;
            Timestamp?: string | null | undefined;
        }, {
            ClientVersion?: string | null | undefined;
            Teams?: {
                UserIDs?: string[] | null | undefined;
                Parties?: {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            RegionPreference?: string[] | null | undefined;
            Backfill?: boolean | null | undefined;
            MatchAttributes?: Record<string, any> | null | undefined;
            PivotID?: string | null | undefined;
            ServerName?: string | null | undefined;
            Tickets?: {
                CreatedAt?: string | null | undefined;
                MatchPool?: string | null | undefined;
                Namespace?: string | null | undefined;
                Latencies?: Record<string, number> | null | undefined;
                MatchedAt?: string | null | undefined;
                PartySessionID?: string | null | undefined;
                Players?: {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }[] | null | undefined;
                ProposedProposal?: {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                } | null | undefined;
                TicketAttributes?: Record<string, any> | null | undefined;
                TicketID?: string | null | undefined;
                IsPivot?: boolean | null | undefined;
                RegionPreference?: string[] | null | undefined;
                TimeToMatch?: number | null | undefined;
            }[] | null | undefined;
            Timestamp?: string | null | undefined;
        }>>>;
        TicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        TicketID?: string | null | undefined;
        MatchSessionID?: string | null | undefined;
        MatchSessionVersion?: number | null | undefined;
        PartialMatch?: {
            ClientVersion?: string | null | undefined;
            Teams?: {
                UserIDs?: string[] | null | undefined;
                Parties?: {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            RegionPreference?: string[] | null | undefined;
            Backfill?: boolean | null | undefined;
            MatchAttributes?: Record<string, any> | null | undefined;
            PivotID?: string | null | undefined;
            ServerName?: string | null | undefined;
            Tickets?: {
                CreatedAt?: string | null | undefined;
                MatchPool?: string | null | undefined;
                Namespace?: string | null | undefined;
                Latencies?: Record<string, number> | null | undefined;
                MatchedAt?: string | null | undefined;
                PartySessionID?: string | null | undefined;
                Players?: {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }[] | null | undefined;
                ProposedProposal?: {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                } | null | undefined;
                TicketAttributes?: Record<string, any> | null | undefined;
                TicketID?: string | null | undefined;
                IsPivot?: boolean | null | undefined;
                RegionPreference?: string[] | null | undefined;
                TimeToMatch?: number | null | undefined;
            }[] | null | undefined;
            Timestamp?: string | null | undefined;
        } | null | undefined;
    }, {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        TicketID?: string | null | undefined;
        MatchSessionID?: string | null | undefined;
        MatchSessionVersion?: number | null | undefined;
        PartialMatch?: {
            ClientVersion?: string | null | undefined;
            Teams?: {
                UserIDs?: string[] | null | undefined;
                Parties?: {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            RegionPreference?: string[] | null | undefined;
            Backfill?: boolean | null | undefined;
            MatchAttributes?: Record<string, any> | null | undefined;
            PivotID?: string | null | undefined;
            ServerName?: string | null | undefined;
            Tickets?: {
                CreatedAt?: string | null | undefined;
                MatchPool?: string | null | undefined;
                Namespace?: string | null | undefined;
                Latencies?: Record<string, number> | null | undefined;
                MatchedAt?: string | null | undefined;
                PartySessionID?: string | null | undefined;
                Players?: {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }[] | null | undefined;
                ProposedProposal?: {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                } | null | undefined;
                TicketAttributes?: Record<string, any> | null | undefined;
                TicketID?: string | null | undefined;
                IsPivot?: boolean | null | undefined;
                RegionPreference?: string[] | null | undefined;
                TimeToMatch?: number | null | undefined;
            }[] | null | undefined;
            Timestamp?: string | null | undefined;
        } | null | undefined;
    }>>>;
    eventName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    requestedUserID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ticket: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Latencies: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
        MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        MatchedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        PartySessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PlayerID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }, {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }>, "many">>>;
        ProposedProposal: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            BackfillID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            ProposalID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        }, {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        }>>>;
        TicketAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        TicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
    }, {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
    }>>>;
    timestamp: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    unbackfillReason: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    eventName?: string | null | undefined;
    timestamp?: string | null | undefined;
    backfillProposal?: {
        BackfillTicketID?: string | null | undefined;
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        ProposalID?: string | null | undefined;
        AddedTickets?: {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
        }[] | null | undefined;
        MatchSessionID?: string | null | undefined;
        ProposedTeams?: {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
    } | null | undefined;
    backfillTicket?: {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        TicketID?: string | null | undefined;
        MatchSessionID?: string | null | undefined;
        MatchSessionVersion?: number | null | undefined;
        PartialMatch?: {
            ClientVersion?: string | null | undefined;
            Teams?: {
                UserIDs?: string[] | null | undefined;
                Parties?: {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            RegionPreference?: string[] | null | undefined;
            Backfill?: boolean | null | undefined;
            MatchAttributes?: Record<string, any> | null | undefined;
            PivotID?: string | null | undefined;
            ServerName?: string | null | undefined;
            Tickets?: {
                CreatedAt?: string | null | undefined;
                MatchPool?: string | null | undefined;
                Namespace?: string | null | undefined;
                Latencies?: Record<string, number> | null | undefined;
                MatchedAt?: string | null | undefined;
                PartySessionID?: string | null | undefined;
                Players?: {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }[] | null | undefined;
                ProposedProposal?: {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                } | null | undefined;
                TicketAttributes?: Record<string, any> | null | undefined;
                TicketID?: string | null | undefined;
                IsPivot?: boolean | null | undefined;
                RegionPreference?: string[] | null | undefined;
                TimeToMatch?: number | null | undefined;
            }[] | null | undefined;
            Timestamp?: string | null | undefined;
        } | null | undefined;
    } | null | undefined;
    requestedUserID?: string | null | undefined;
    ticket?: {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
    } | null | undefined;
    unbackfillReason?: string | null | undefined;
}, {
    eventName?: string | null | undefined;
    timestamp?: string | null | undefined;
    backfillProposal?: {
        BackfillTicketID?: string | null | undefined;
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        ProposalID?: string | null | undefined;
        AddedTickets?: {
            CreatedAt?: string | null | undefined;
            MatchPool?: string | null | undefined;
            Namespace?: string | null | undefined;
            Latencies?: Record<string, number> | null | undefined;
            MatchedAt?: string | null | undefined;
            PartySessionID?: string | null | undefined;
            Players?: {
                PlatformID?: string | null | undefined;
                Attributes?: Record<string, any> | null | undefined;
                PartyID?: string | null | undefined;
                PlayerID?: string | null | undefined;
            }[] | null | undefined;
            ProposedProposal?: {
                Status?: string | null | undefined;
                BackfillID?: string | null | undefined;
                ProposalID?: string | null | undefined;
            } | null | undefined;
            TicketAttributes?: Record<string, any> | null | undefined;
            TicketID?: string | null | undefined;
        }[] | null | undefined;
        MatchSessionID?: string | null | undefined;
        ProposedTeams?: {
            UserIDs?: string[] | null | undefined;
            Parties?: {
                PartyID?: string | null | undefined;
                UserIDs?: string[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
    } | null | undefined;
    backfillTicket?: {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        TicketID?: string | null | undefined;
        MatchSessionID?: string | null | undefined;
        MatchSessionVersion?: number | null | undefined;
        PartialMatch?: {
            ClientVersion?: string | null | undefined;
            Teams?: {
                UserIDs?: string[] | null | undefined;
                Parties?: {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            RegionPreference?: string[] | null | undefined;
            Backfill?: boolean | null | undefined;
            MatchAttributes?: Record<string, any> | null | undefined;
            PivotID?: string | null | undefined;
            ServerName?: string | null | undefined;
            Tickets?: {
                CreatedAt?: string | null | undefined;
                MatchPool?: string | null | undefined;
                Namespace?: string | null | undefined;
                Latencies?: Record<string, number> | null | undefined;
                MatchedAt?: string | null | undefined;
                PartySessionID?: string | null | undefined;
                Players?: {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }[] | null | undefined;
                ProposedProposal?: {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                } | null | undefined;
                TicketAttributes?: Record<string, any> | null | undefined;
                TicketID?: string | null | undefined;
                IsPivot?: boolean | null | undefined;
                RegionPreference?: string[] | null | undefined;
                TimeToMatch?: number | null | undefined;
            }[] | null | undefined;
            Timestamp?: string | null | undefined;
        } | null | undefined;
    } | null | undefined;
    requestedUserID?: string | null | undefined;
    ticket?: {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
    } | null | undefined;
    unbackfillReason?: string | null | undefined;
}>;
interface MatchmakingHistory extends z.TypeOf<typeof MatchmakingHistory> {
}

declare const MatchmakingResult: z.ZodObject<{
    channel: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    client_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    deployment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    error_code: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    error_message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    game_mode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    joinable: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    match_id: z.ZodString;
    match_session_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    matching_allies: z.ZodArray<z.ZodObject<{
        matching_parties: z.ZodArray<z.ZodObject<{
            first_ticket_created_at: z.ZodNumber;
            party_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            party_id: z.ZodString;
            party_members: z.ZodArray<z.ZodObject<{
                extra_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                user_id: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                user_id: string;
                extra_attributes?: Record<string, any> | null | undefined;
            }, {
                user_id: string;
                extra_attributes?: Record<string, any> | null | undefined;
            }>, "many">;
            ticket_id: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            first_ticket_created_at: number;
            party_id: string;
            party_members: {
                user_id: string;
                extra_attributes?: Record<string, any> | null | undefined;
            }[];
            ticket_id: string;
            party_attributes?: Record<string, any> | null | undefined;
        }, {
            first_ticket_created_at: number;
            party_id: string;
            party_members: {
                user_id: string;
                extra_attributes?: Record<string, any> | null | undefined;
            }[];
            ticket_id: string;
            party_attributes?: Record<string, any> | null | undefined;
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        matching_parties: {
            first_ticket_created_at: number;
            party_id: string;
            party_members: {
                user_id: string;
                extra_attributes?: Record<string, any> | null | undefined;
            }[];
            ticket_id: string;
            party_attributes?: Record<string, any> | null | undefined;
        }[];
    }, {
        matching_parties: {
            first_ticket_created_at: number;
            party_id: string;
            party_members: {
                user_id: string;
                extra_attributes?: Record<string, any> | null | undefined;
            }[];
            ticket_id: string;
            party_attributes?: Record<string, any> | null | undefined;
        }[];
    }>, "many">;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    party_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    party_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    queued_at: z.ZodNumber;
    region: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    server_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ticket_id: z.ZodString;
    updated_at: z.ZodString;
}, "strip", z.ZodTypeAny, {
    ticket_id: string;
    match_id: string;
    matching_allies: {
        matching_parties: {
            first_ticket_created_at: number;
            party_id: string;
            party_members: {
                user_id: string;
                extra_attributes?: Record<string, any> | null | undefined;
            }[];
            ticket_id: string;
            party_attributes?: Record<string, any> | null | undefined;
        }[];
    }[];
    queued_at: number;
    updated_at: string;
    namespace?: string | null | undefined;
    status?: string | null | undefined;
    deployment?: string | null | undefined;
    region?: string | null | undefined;
    party_attributes?: Record<string, any> | null | undefined;
    party_id?: string | null | undefined;
    channel?: string | null | undefined;
    client_version?: string | null | undefined;
    error_code?: number | null | undefined;
    error_message?: string | null | undefined;
    game_mode?: string | null | undefined;
    joinable?: boolean | null | undefined;
    match_session_id?: string | null | undefined;
    server_name?: string | null | undefined;
}, {
    ticket_id: string;
    match_id: string;
    matching_allies: {
        matching_parties: {
            first_ticket_created_at: number;
            party_id: string;
            party_members: {
                user_id: string;
                extra_attributes?: Record<string, any> | null | undefined;
            }[];
            ticket_id: string;
            party_attributes?: Record<string, any> | null | undefined;
        }[];
    }[];
    queued_at: number;
    updated_at: string;
    namespace?: string | null | undefined;
    status?: string | null | undefined;
    deployment?: string | null | undefined;
    region?: string | null | undefined;
    party_attributes?: Record<string, any> | null | undefined;
    party_id?: string | null | undefined;
    channel?: string | null | undefined;
    client_version?: string | null | undefined;
    error_code?: number | null | undefined;
    error_message?: string | null | undefined;
    game_mode?: string | null | undefined;
    joinable?: boolean | null | undefined;
    match_session_id?: string | null | undefined;
    server_name?: string | null | undefined;
}>;
interface MatchmakingResult extends z.TypeOf<typeof MatchmakingResult> {
}

declare const MatchMatchmaking: z.ZodObject<{
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    matchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    value: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}>;
interface MatchMatchmaking extends z.TypeOf<typeof MatchMatchmaking> {
}

declare const MatchMatchmakingTicket: z.ZodObject<{
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    matchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    value: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}>;
interface MatchMatchmakingTicket extends z.TypeOf<typeof MatchMatchmakingTicket> {
}

declare const MatchTicket: z.ZodObject<{
    CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    IsPivot: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    Latencies: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
    MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    MatchedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    PartySessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        PlayerID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        PlatformID?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        PartyID?: string | null | undefined;
        PlayerID?: string | null | undefined;
    }, {
        PlatformID?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        PartyID?: string | null | undefined;
        PlayerID?: string | null | undefined;
    }>, "many">>>;
    ProposedProposal: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        BackfillID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        ProposalID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        Status?: string | null | undefined;
        BackfillID?: string | null | undefined;
        ProposalID?: string | null | undefined;
    }, {
        Status?: string | null | undefined;
        BackfillID?: string | null | undefined;
        ProposalID?: string | null | undefined;
    }>>>;
    RegionPreference: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    TicketAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    TicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    TimeToMatch: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    CreatedAt?: string | null | undefined;
    MatchPool?: string | null | undefined;
    Namespace?: string | null | undefined;
    Latencies?: Record<string, number> | null | undefined;
    MatchedAt?: string | null | undefined;
    PartySessionID?: string | null | undefined;
    Players?: {
        PlatformID?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        PartyID?: string | null | undefined;
        PlayerID?: string | null | undefined;
    }[] | null | undefined;
    ProposedProposal?: {
        Status?: string | null | undefined;
        BackfillID?: string | null | undefined;
        ProposalID?: string | null | undefined;
    } | null | undefined;
    TicketAttributes?: Record<string, any> | null | undefined;
    TicketID?: string | null | undefined;
    IsPivot?: boolean | null | undefined;
    RegionPreference?: string[] | null | undefined;
    TimeToMatch?: number | null | undefined;
}, {
    CreatedAt?: string | null | undefined;
    MatchPool?: string | null | undefined;
    Namespace?: string | null | undefined;
    Latencies?: Record<string, number> | null | undefined;
    MatchedAt?: string | null | undefined;
    PartySessionID?: string | null | undefined;
    Players?: {
        PlatformID?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        PartyID?: string | null | undefined;
        PlayerID?: string | null | undefined;
    }[] | null | undefined;
    ProposedProposal?: {
        Status?: string | null | undefined;
        BackfillID?: string | null | undefined;
        ProposalID?: string | null | undefined;
    } | null | undefined;
    TicketAttributes?: Record<string, any> | null | undefined;
    TicketID?: string | null | undefined;
    IsPivot?: boolean | null | undefined;
    RegionPreference?: string[] | null | undefined;
    TimeToMatch?: number | null | undefined;
}>;
interface MatchTicket extends z.TypeOf<typeof MatchTicket> {
}

declare const Pagination: z.ZodObject<{
    first: z.ZodString;
    last: z.ZodString;
    next: z.ZodString;
    previous: z.ZodString;
}, "strip", z.ZodTypeAny, {
    first: string;
    last: string;
    next: string;
    previous: string;
}, {
    first: string;
    last: string;
    next: string;
    previous: string;
}>;
interface Pagination extends z.TypeOf<typeof Pagination> {
}

declare const Party: z.ZodObject<{
    Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    Code: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Configuration: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        ClientVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Deployment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        InactiveTimeout: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        InviteTimeout: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        Joinability: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        MaxPlayers: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        MinPlayers: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        Persistent: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        RequestedRegions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        TextChat: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        Type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        ClientVersion?: string | null | undefined;
        Deployment?: string | null | undefined;
        InactiveTimeout?: number | null | undefined;
        InviteTimeout?: number | null | undefined;
        Joinability?: string | null | undefined;
        MaxPlayers?: number | null | undefined;
        MinPlayers?: number | null | undefined;
        Persistent?: boolean | null | undefined;
        RequestedRegions?: string[] | null | undefined;
        Type?: string | null | undefined;
        TextChat?: boolean | null | undefined;
    }, {
        ClientVersion?: string | null | undefined;
        Deployment?: string | null | undefined;
        InactiveTimeout?: number | null | undefined;
        InviteTimeout?: number | null | undefined;
        Joinability?: string | null | undefined;
        MaxPlayers?: number | null | undefined;
        MinPlayers?: number | null | undefined;
        Persistent?: boolean | null | undefined;
        RequestedRegions?: string[] | null | undefined;
        Type?: string | null | undefined;
        TextChat?: boolean | null | undefined;
    }>>>;
    ConfigurationName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    CreatedBy: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ExpiredAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    IsActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    IsFull: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    LeaderID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Members: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        ID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        PlatformUserID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        StatusV2: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        UpdatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        Status?: string | null | undefined;
        StatusV2?: string | null | undefined;
        ID?: string | null | undefined;
        PlatformID?: string | null | undefined;
        PlatformUserID?: string | null | undefined;
        UpdatedAt?: string | null | undefined;
    }, {
        Status?: string | null | undefined;
        StatusV2?: string | null | undefined;
        ID?: string | null | undefined;
        PlatformID?: string | null | undefined;
        PlatformUserID?: string | null | undefined;
        UpdatedAt?: string | null | undefined;
    }>, "many">>>;
    Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    UpdatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Version: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    Configuration?: {
        ClientVersion?: string | null | undefined;
        Deployment?: string | null | undefined;
        InactiveTimeout?: number | null | undefined;
        InviteTimeout?: number | null | undefined;
        Joinability?: string | null | undefined;
        MaxPlayers?: number | null | undefined;
        MinPlayers?: number | null | undefined;
        Persistent?: boolean | null | undefined;
        RequestedRegions?: string[] | null | undefined;
        Type?: string | null | undefined;
        TextChat?: boolean | null | undefined;
    } | null | undefined;
    ID?: string | null | undefined;
    UpdatedAt?: string | null | undefined;
    Attributes?: Record<string, any> | null | undefined;
    Code?: string | null | undefined;
    ConfigurationName?: string | null | undefined;
    CreatedAt?: string | null | undefined;
    CreatedBy?: string | null | undefined;
    IsFull?: boolean | null | undefined;
    LeaderID?: string | null | undefined;
    Members?: {
        Status?: string | null | undefined;
        StatusV2?: string | null | undefined;
        ID?: string | null | undefined;
        PlatformID?: string | null | undefined;
        PlatformUserID?: string | null | undefined;
        UpdatedAt?: string | null | undefined;
    }[] | null | undefined;
    Namespace?: string | null | undefined;
    Version?: number | null | undefined;
    ExpiredAt?: string | null | undefined;
    IsActive?: boolean | null | undefined;
}, {
    Configuration?: {
        ClientVersion?: string | null | undefined;
        Deployment?: string | null | undefined;
        InactiveTimeout?: number | null | undefined;
        InviteTimeout?: number | null | undefined;
        Joinability?: string | null | undefined;
        MaxPlayers?: number | null | undefined;
        MinPlayers?: number | null | undefined;
        Persistent?: boolean | null | undefined;
        RequestedRegions?: string[] | null | undefined;
        Type?: string | null | undefined;
        TextChat?: boolean | null | undefined;
    } | null | undefined;
    ID?: string | null | undefined;
    UpdatedAt?: string | null | undefined;
    Attributes?: Record<string, any> | null | undefined;
    Code?: string | null | undefined;
    ConfigurationName?: string | null | undefined;
    CreatedAt?: string | null | undefined;
    CreatedBy?: string | null | undefined;
    IsFull?: boolean | null | undefined;
    LeaderID?: string | null | undefined;
    Members?: {
        Status?: string | null | undefined;
        StatusV2?: string | null | undefined;
        ID?: string | null | undefined;
        PlatformID?: string | null | undefined;
        PlatformUserID?: string | null | undefined;
        UpdatedAt?: string | null | undefined;
    }[] | null | undefined;
    Namespace?: string | null | undefined;
    Version?: number | null | undefined;
    ExpiredAt?: string | null | undefined;
    IsActive?: boolean | null | undefined;
}>;
interface Party extends z.TypeOf<typeof Party> {
}

declare const PartyHistory: z.ZodObject<{
    eventName: z.ZodString;
    payload: z.ZodObject<{
        Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        Code: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Configuration: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            ClientVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Deployment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            InactiveTimeout: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            InviteTimeout: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            Joinability: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            MaxPlayers: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            MinPlayers: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            Persistent: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            RequestedRegions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            TextChat: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            Type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            ClientVersion?: string | null | undefined;
            Deployment?: string | null | undefined;
            InactiveTimeout?: number | null | undefined;
            InviteTimeout?: number | null | undefined;
            Joinability?: string | null | undefined;
            MaxPlayers?: number | null | undefined;
            MinPlayers?: number | null | undefined;
            Persistent?: boolean | null | undefined;
            RequestedRegions?: string[] | null | undefined;
            Type?: string | null | undefined;
            TextChat?: boolean | null | undefined;
        }, {
            ClientVersion?: string | null | undefined;
            Deployment?: string | null | undefined;
            InactiveTimeout?: number | null | undefined;
            InviteTimeout?: number | null | undefined;
            Joinability?: string | null | undefined;
            MaxPlayers?: number | null | undefined;
            MinPlayers?: number | null | undefined;
            Persistent?: boolean | null | undefined;
            RequestedRegions?: string[] | null | undefined;
            Type?: string | null | undefined;
            TextChat?: boolean | null | undefined;
        }>>>;
        ConfigurationName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        CreatedBy: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        ExpiredAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        ID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        IsActive: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        IsFull: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        LeaderID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Members: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            ID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PlatformUserID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            StatusV2: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            UpdatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
            ID?: string | null | undefined;
            PlatformID?: string | null | undefined;
            PlatformUserID?: string | null | undefined;
            UpdatedAt?: string | null | undefined;
        }, {
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
            ID?: string | null | undefined;
            PlatformID?: string | null | undefined;
            PlatformUserID?: string | null | undefined;
            UpdatedAt?: string | null | undefined;
        }>, "many">>>;
        Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        UpdatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Version: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        Configuration?: {
            ClientVersion?: string | null | undefined;
            Deployment?: string | null | undefined;
            InactiveTimeout?: number | null | undefined;
            InviteTimeout?: number | null | undefined;
            Joinability?: string | null | undefined;
            MaxPlayers?: number | null | undefined;
            MinPlayers?: number | null | undefined;
            Persistent?: boolean | null | undefined;
            RequestedRegions?: string[] | null | undefined;
            Type?: string | null | undefined;
            TextChat?: boolean | null | undefined;
        } | null | undefined;
        ID?: string | null | undefined;
        UpdatedAt?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        Code?: string | null | undefined;
        ConfigurationName?: string | null | undefined;
        CreatedAt?: string | null | undefined;
        CreatedBy?: string | null | undefined;
        IsFull?: boolean | null | undefined;
        LeaderID?: string | null | undefined;
        Members?: {
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
            ID?: string | null | undefined;
            PlatformID?: string | null | undefined;
            PlatformUserID?: string | null | undefined;
            UpdatedAt?: string | null | undefined;
        }[] | null | undefined;
        Namespace?: string | null | undefined;
        Version?: number | null | undefined;
        ExpiredAt?: string | null | undefined;
        IsActive?: boolean | null | undefined;
    }, {
        Configuration?: {
            ClientVersion?: string | null | undefined;
            Deployment?: string | null | undefined;
            InactiveTimeout?: number | null | undefined;
            InviteTimeout?: number | null | undefined;
            Joinability?: string | null | undefined;
            MaxPlayers?: number | null | undefined;
            MinPlayers?: number | null | undefined;
            Persistent?: boolean | null | undefined;
            RequestedRegions?: string[] | null | undefined;
            Type?: string | null | undefined;
            TextChat?: boolean | null | undefined;
        } | null | undefined;
        ID?: string | null | undefined;
        UpdatedAt?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        Code?: string | null | undefined;
        ConfigurationName?: string | null | undefined;
        CreatedAt?: string | null | undefined;
        CreatedBy?: string | null | undefined;
        IsFull?: boolean | null | undefined;
        LeaderID?: string | null | undefined;
        Members?: {
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
            ID?: string | null | undefined;
            PlatformID?: string | null | undefined;
            PlatformUserID?: string | null | undefined;
            UpdatedAt?: string | null | undefined;
        }[] | null | undefined;
        Namespace?: string | null | undefined;
        Version?: number | null | undefined;
        ExpiredAt?: string | null | undefined;
        IsActive?: boolean | null | undefined;
    }>;
    requesterClientID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    requesterUserID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    timestamp: z.ZodString;
}, "strip", z.ZodTypeAny, {
    eventName: string;
    payload: {
        Configuration?: {
            ClientVersion?: string | null | undefined;
            Deployment?: string | null | undefined;
            InactiveTimeout?: number | null | undefined;
            InviteTimeout?: number | null | undefined;
            Joinability?: string | null | undefined;
            MaxPlayers?: number | null | undefined;
            MinPlayers?: number | null | undefined;
            Persistent?: boolean | null | undefined;
            RequestedRegions?: string[] | null | undefined;
            Type?: string | null | undefined;
            TextChat?: boolean | null | undefined;
        } | null | undefined;
        ID?: string | null | undefined;
        UpdatedAt?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        Code?: string | null | undefined;
        ConfigurationName?: string | null | undefined;
        CreatedAt?: string | null | undefined;
        CreatedBy?: string | null | undefined;
        IsFull?: boolean | null | undefined;
        LeaderID?: string | null | undefined;
        Members?: {
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
            ID?: string | null | undefined;
            PlatformID?: string | null | undefined;
            PlatformUserID?: string | null | undefined;
            UpdatedAt?: string | null | undefined;
        }[] | null | undefined;
        Namespace?: string | null | undefined;
        Version?: number | null | undefined;
        ExpiredAt?: string | null | undefined;
        IsActive?: boolean | null | undefined;
    };
    timestamp: string;
    requesterClientID?: string | null | undefined;
    requesterUserID?: string | null | undefined;
}, {
    eventName: string;
    payload: {
        Configuration?: {
            ClientVersion?: string | null | undefined;
            Deployment?: string | null | undefined;
            InactiveTimeout?: number | null | undefined;
            InviteTimeout?: number | null | undefined;
            Joinability?: string | null | undefined;
            MaxPlayers?: number | null | undefined;
            MinPlayers?: number | null | undefined;
            Persistent?: boolean | null | undefined;
            RequestedRegions?: string[] | null | undefined;
            Type?: string | null | undefined;
            TextChat?: boolean | null | undefined;
        } | null | undefined;
        ID?: string | null | undefined;
        UpdatedAt?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        Code?: string | null | undefined;
        ConfigurationName?: string | null | undefined;
        CreatedAt?: string | null | undefined;
        CreatedBy?: string | null | undefined;
        IsFull?: boolean | null | undefined;
        LeaderID?: string | null | undefined;
        Members?: {
            Status?: string | null | undefined;
            StatusV2?: string | null | undefined;
            ID?: string | null | undefined;
            PlatformID?: string | null | undefined;
            PlatformUserID?: string | null | undefined;
            UpdatedAt?: string | null | undefined;
        }[] | null | undefined;
        Namespace?: string | null | undefined;
        Version?: number | null | undefined;
        ExpiredAt?: string | null | undefined;
        IsActive?: boolean | null | undefined;
    };
    timestamp: string;
    requesterClientID?: string | null | undefined;
    requesterUserID?: string | null | undefined;
}>;
interface PartyHistory extends z.TypeOf<typeof PartyHistory> {
}

declare const PartyMember: z.ZodObject<{
    extra_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    user_id: z.ZodString;
}, "strip", z.ZodTypeAny, {
    user_id: string;
    extra_attributes?: Record<string, any> | null | undefined;
}, {
    user_id: string;
    extra_attributes?: Record<string, any> | null | undefined;
}>;
interface PartyMember extends z.TypeOf<typeof PartyMember> {
}

declare const PartyMembers: z.ZodObject<{
    partyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    userIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
}, "strip", z.ZodTypeAny, {
    partyID?: string | null | undefined;
    userIDs?: string[] | null | undefined;
}, {
    partyID?: string | null | undefined;
    userIDs?: string[] | null | undefined;
}>;
interface PartyMembers extends z.TypeOf<typeof PartyMembers> {
}

declare const PartyTeam: z.ZodObject<{
    PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
}, "strip", z.ZodTypeAny, {
    PartyID?: string | null | undefined;
    UserIDs?: string[] | null | undefined;
}, {
    PartyID?: string | null | undefined;
    UserIDs?: string[] | null | undefined;
}>;
interface PartyTeam extends z.TypeOf<typeof PartyTeam> {
}

declare const PlayerData: z.ZodObject<{
    Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    PlayerID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    PlatformID?: string | null | undefined;
    Attributes?: Record<string, any> | null | undefined;
    PartyID?: string | null | undefined;
    PlayerID?: string | null | undefined;
}, {
    PlatformID?: string | null | undefined;
    Attributes?: Record<string, any> | null | undefined;
    PartyID?: string | null | undefined;
    PlayerID?: string | null | undefined;
}>;
interface PlayerData extends z.TypeOf<typeof PlayerData> {
}

declare const ProposedProposal: z.ZodObject<{
    BackfillID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ProposalID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    Status?: string | null | undefined;
    BackfillID?: string | null | undefined;
    ProposalID?: string | null | undefined;
}, {
    Status?: string | null | undefined;
    BackfillID?: string | null | undefined;
    ProposalID?: string | null | undefined;
}>;
interface ProposedProposal extends z.TypeOf<typeof ProposedProposal> {
}

declare const SessionConfig: z.ZodObject<{
    ClientVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Deployment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    InactiveTimeout: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    InviteTimeout: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    Joinability: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    MaxPlayers: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    MinPlayers: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    Name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Persistent: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    RequestedRegions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    Type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    ClientVersion?: string | null | undefined;
    Deployment?: string | null | undefined;
    InactiveTimeout?: number | null | undefined;
    InviteTimeout?: number | null | undefined;
    Joinability?: string | null | undefined;
    MaxPlayers?: number | null | undefined;
    MinPlayers?: number | null | undefined;
    Name?: string | null | undefined;
    Persistent?: boolean | null | undefined;
    RequestedRegions?: string[] | null | undefined;
    Type?: string | null | undefined;
}, {
    ClientVersion?: string | null | undefined;
    Deployment?: string | null | undefined;
    InactiveTimeout?: number | null | undefined;
    InviteTimeout?: number | null | undefined;
    Joinability?: string | null | undefined;
    MaxPlayers?: number | null | undefined;
    MinPlayers?: number | null | undefined;
    Name?: string | null | undefined;
    Persistent?: boolean | null | undefined;
    RequestedRegions?: string[] | null | undefined;
    Type?: string | null | undefined;
}>;
interface SessionConfig extends z.TypeOf<typeof SessionConfig> {
}

declare const SessionConfiguration: z.ZodObject<{
    ClientVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Deployment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    InactiveTimeout: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    InviteTimeout: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    Joinability: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    MaxPlayers: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    MinPlayers: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    Persistent: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    RequestedRegions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    TextChat: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    Type: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    ClientVersion?: string | null | undefined;
    Deployment?: string | null | undefined;
    InactiveTimeout?: number | null | undefined;
    InviteTimeout?: number | null | undefined;
    Joinability?: string | null | undefined;
    MaxPlayers?: number | null | undefined;
    MinPlayers?: number | null | undefined;
    Persistent?: boolean | null | undefined;
    RequestedRegions?: string[] | null | undefined;
    Type?: string | null | undefined;
    TextChat?: boolean | null | undefined;
}, {
    ClientVersion?: string | null | undefined;
    Deployment?: string | null | undefined;
    InactiveTimeout?: number | null | undefined;
    InviteTimeout?: number | null | undefined;
    Joinability?: string | null | undefined;
    MaxPlayers?: number | null | undefined;
    MinPlayers?: number | null | undefined;
    Persistent?: boolean | null | undefined;
    RequestedRegions?: string[] | null | undefined;
    Type?: string | null | undefined;
    TextChat?: boolean | null | undefined;
}>;
interface SessionConfiguration extends z.TypeOf<typeof SessionConfiguration> {
}

declare const Team: z.ZodObject<{
    Parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    }, "strip", z.ZodTypeAny, {
        PartyID?: string | null | undefined;
        UserIDs?: string[] | null | undefined;
    }, {
        PartyID?: string | null | undefined;
        UserIDs?: string[] | null | undefined;
    }>, "many">>>;
    UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
}, "strip", z.ZodTypeAny, {
    UserIDs?: string[] | null | undefined;
    Parties?: {
        PartyID?: string | null | undefined;
        UserIDs?: string[] | null | undefined;
    }[] | null | undefined;
}, {
    UserIDs?: string[] | null | undefined;
    Parties?: {
        PartyID?: string | null | undefined;
        UserIDs?: string[] | null | undefined;
    }[] | null | undefined;
}>;
interface Team extends z.TypeOf<typeof Team> {
}

declare const Ticket: z.ZodObject<{
    CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Latencies: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
    MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    MatchedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    PartySessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        PlayerID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        PlatformID?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        PartyID?: string | null | undefined;
        PlayerID?: string | null | undefined;
    }, {
        PlatformID?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        PartyID?: string | null | undefined;
        PlayerID?: string | null | undefined;
    }>, "many">>>;
    ProposedProposal: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        BackfillID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        ProposalID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        Status?: string | null | undefined;
        BackfillID?: string | null | undefined;
        ProposalID?: string | null | undefined;
    }, {
        Status?: string | null | undefined;
        BackfillID?: string | null | undefined;
        ProposalID?: string | null | undefined;
    }>>>;
    TicketAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    TicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    CreatedAt?: string | null | undefined;
    MatchPool?: string | null | undefined;
    Namespace?: string | null | undefined;
    Latencies?: Record<string, number> | null | undefined;
    MatchedAt?: string | null | undefined;
    PartySessionID?: string | null | undefined;
    Players?: {
        PlatformID?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        PartyID?: string | null | undefined;
        PlayerID?: string | null | undefined;
    }[] | null | undefined;
    ProposedProposal?: {
        Status?: string | null | undefined;
        BackfillID?: string | null | undefined;
        ProposalID?: string | null | undefined;
    } | null | undefined;
    TicketAttributes?: Record<string, any> | null | undefined;
    TicketID?: string | null | undefined;
}, {
    CreatedAt?: string | null | undefined;
    MatchPool?: string | null | undefined;
    Namespace?: string | null | undefined;
    Latencies?: Record<string, number> | null | undefined;
    MatchedAt?: string | null | undefined;
    PartySessionID?: string | null | undefined;
    Players?: {
        PlatformID?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        PartyID?: string | null | undefined;
        PlayerID?: string | null | undefined;
    }[] | null | undefined;
    ProposedProposal?: {
        Status?: string | null | undefined;
        BackfillID?: string | null | undefined;
        ProposalID?: string | null | undefined;
    } | null | undefined;
    TicketAttributes?: Record<string, any> | null | undefined;
    TicketID?: string | null | undefined;
}>;
interface Ticket extends z.TypeOf<typeof Ticket> {
}

declare const TicketData: z.ZodObject<{
    action: z.ZodString;
    activeAllianceRule: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        max_number: z.ZodNumber;
        min_number: z.ZodNumber;
        player_max_number: z.ZodNumber;
        player_min_number: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        max_number: number;
        min_number: number;
        player_max_number: number;
        player_min_number: number;
    }, {
        max_number: number;
        min_number: number;
        player_max_number: number;
        player_min_number: number;
    }>>>;
    activeMatchingRule: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        attribute: z.ZodString;
        criteria: z.ZodString;
        reference: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        attribute: string;
        criteria: string;
        reference: number;
    }, {
        attribute: string;
        criteria: string;
        reference: number;
    }>, "many">>>;
    elapsedTime: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    gameMode: z.ZodString;
    isBackfillMatch: z.ZodBoolean;
    isPivot: z.ZodBoolean;
    isRuleSetFlexed: z.ZodBoolean;
    iteration: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    matchID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    matchedRegion: z.ZodString;
    memberAttributes: z.ZodRecord<z.ZodString, z.ZodAny>;
    namespace: z.ZodString;
    partyID: z.ZodString;
    podName: z.ZodString;
    remainingPlayersPerTicket: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodNumber, "many">>>;
    remainingTickets: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    session: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        channel: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        client_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        deployment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        error_code: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        error_message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        game_mode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        joinable: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        match_id: z.ZodString;
        match_session_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        matching_allies: z.ZodArray<z.ZodObject<{
            matching_parties: z.ZodArray<z.ZodObject<{
                first_ticket_created_at: z.ZodNumber;
                party_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                party_id: z.ZodString;
                party_members: z.ZodArray<z.ZodObject<{
                    extra_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                    user_id: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }, {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }>, "many">;
                ticket_id: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                first_ticket_created_at: number;
                party_id: string;
                party_members: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[];
                ticket_id: string;
                party_attributes?: Record<string, any> | null | undefined;
            }, {
                first_ticket_created_at: number;
                party_id: string;
                party_members: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[];
                ticket_id: string;
                party_attributes?: Record<string, any> | null | undefined;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            matching_parties: {
                first_ticket_created_at: number;
                party_id: string;
                party_members: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[];
                ticket_id: string;
                party_attributes?: Record<string, any> | null | undefined;
            }[];
        }, {
            matching_parties: {
                first_ticket_created_at: number;
                party_id: string;
                party_members: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[];
                ticket_id: string;
                party_attributes?: Record<string, any> | null | undefined;
            }[];
        }>, "many">;
        namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        party_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        party_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        queued_at: z.ZodNumber;
        region: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        server_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        ticket_id: z.ZodString;
        updated_at: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        ticket_id: string;
        match_id: string;
        matching_allies: {
            matching_parties: {
                first_ticket_created_at: number;
                party_id: string;
                party_members: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[];
                ticket_id: string;
                party_attributes?: Record<string, any> | null | undefined;
            }[];
        }[];
        queued_at: number;
        updated_at: string;
        namespace?: string | null | undefined;
        status?: string | null | undefined;
        deployment?: string | null | undefined;
        region?: string | null | undefined;
        party_attributes?: Record<string, any> | null | undefined;
        party_id?: string | null | undefined;
        channel?: string | null | undefined;
        client_version?: string | null | undefined;
        error_code?: number | null | undefined;
        error_message?: string | null | undefined;
        game_mode?: string | null | undefined;
        joinable?: boolean | null | undefined;
        match_session_id?: string | null | undefined;
        server_name?: string | null | undefined;
    }, {
        ticket_id: string;
        match_id: string;
        matching_allies: {
            matching_parties: {
                first_ticket_created_at: number;
                party_id: string;
                party_members: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[];
                ticket_id: string;
                party_attributes?: Record<string, any> | null | undefined;
            }[];
        }[];
        queued_at: number;
        updated_at: string;
        namespace?: string | null | undefined;
        status?: string | null | undefined;
        deployment?: string | null | undefined;
        region?: string | null | undefined;
        party_attributes?: Record<string, any> | null | undefined;
        party_id?: string | null | undefined;
        channel?: string | null | undefined;
        client_version?: string | null | undefined;
        error_code?: number | null | undefined;
        error_message?: string | null | undefined;
        game_mode?: string | null | undefined;
        joinable?: boolean | null | undefined;
        match_session_id?: string | null | undefined;
        server_name?: string | null | undefined;
    }>>>;
    sessionTickID: z.ZodString;
    tickID: z.ZodNumber;
    timeToMatchSec: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    timestamp: z.ZodString;
    totalPlayers: z.ZodNumber;
    unbackfillReason: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    unmatchReason: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    action: string;
    partyID: string;
    timestamp: string;
    gameMode: string;
    isBackfillMatch: boolean;
    isPivot: boolean;
    isRuleSetFlexed: boolean;
    matchedRegion: string;
    memberAttributes: Record<string, any>;
    podName: string;
    sessionTickID: string;
    tickID: number;
    totalPlayers: number;
    function?: string | null | undefined;
    unbackfillReason?: string | null | undefined;
    activeAllianceRule?: {
        max_number: number;
        min_number: number;
        player_max_number: number;
        player_min_number: number;
    } | null | undefined;
    activeMatchingRule?: {
        attribute: string;
        criteria: string;
        reference: number;
    }[] | null | undefined;
    elapsedTime?: number | null | undefined;
    iteration?: number | null | undefined;
    matchID?: string | null | undefined;
    remainingPlayersPerTicket?: number[] | null | undefined;
    remainingTickets?: number | null | undefined;
    session?: {
        ticket_id: string;
        match_id: string;
        matching_allies: {
            matching_parties: {
                first_ticket_created_at: number;
                party_id: string;
                party_members: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[];
                ticket_id: string;
                party_attributes?: Record<string, any> | null | undefined;
            }[];
        }[];
        queued_at: number;
        updated_at: string;
        namespace?: string | null | undefined;
        status?: string | null | undefined;
        deployment?: string | null | undefined;
        region?: string | null | undefined;
        party_attributes?: Record<string, any> | null | undefined;
        party_id?: string | null | undefined;
        channel?: string | null | undefined;
        client_version?: string | null | undefined;
        error_code?: number | null | undefined;
        error_message?: string | null | undefined;
        game_mode?: string | null | undefined;
        joinable?: boolean | null | undefined;
        match_session_id?: string | null | undefined;
        server_name?: string | null | undefined;
    } | null | undefined;
    timeToMatchSec?: number | null | undefined;
    unmatchReason?: string | null | undefined;
}, {
    namespace: string;
    action: string;
    partyID: string;
    timestamp: string;
    gameMode: string;
    isBackfillMatch: boolean;
    isPivot: boolean;
    isRuleSetFlexed: boolean;
    matchedRegion: string;
    memberAttributes: Record<string, any>;
    podName: string;
    sessionTickID: string;
    tickID: number;
    totalPlayers: number;
    function?: string | null | undefined;
    unbackfillReason?: string | null | undefined;
    activeAllianceRule?: {
        max_number: number;
        min_number: number;
        player_max_number: number;
        player_min_number: number;
    } | null | undefined;
    activeMatchingRule?: {
        attribute: string;
        criteria: string;
        reference: number;
    }[] | null | undefined;
    elapsedTime?: number | null | undefined;
    iteration?: number | null | undefined;
    matchID?: string | null | undefined;
    remainingPlayersPerTicket?: number[] | null | undefined;
    remainingTickets?: number | null | undefined;
    session?: {
        ticket_id: string;
        match_id: string;
        matching_allies: {
            matching_parties: {
                first_ticket_created_at: number;
                party_id: string;
                party_members: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[];
                ticket_id: string;
                party_attributes?: Record<string, any> | null | undefined;
            }[];
        }[];
        queued_at: number;
        updated_at: string;
        namespace?: string | null | undefined;
        status?: string | null | undefined;
        deployment?: string | null | undefined;
        region?: string | null | undefined;
        party_attributes?: Record<string, any> | null | undefined;
        party_id?: string | null | undefined;
        channel?: string | null | undefined;
        client_version?: string | null | undefined;
        error_code?: number | null | undefined;
        error_message?: string | null | undefined;
        game_mode?: string | null | undefined;
        joinable?: boolean | null | undefined;
        match_session_id?: string | null | undefined;
        server_name?: string | null | undefined;
    } | null | undefined;
    timeToMatchSec?: number | null | undefined;
    unmatchReason?: string | null | undefined;
}>;
interface TicketData extends z.TypeOf<typeof TicketData> {
}

declare const TicketObservability: z.ZodObject<{
    ticket: z.ZodObject<{
        action: z.ZodString;
        activeAllianceRule: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            max_number: z.ZodNumber;
            min_number: z.ZodNumber;
            player_max_number: z.ZodNumber;
            player_min_number: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            max_number: number;
            min_number: number;
            player_max_number: number;
            player_min_number: number;
        }, {
            max_number: number;
            min_number: number;
            player_max_number: number;
            player_min_number: number;
        }>>>;
        activeMatchingRule: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            attribute: z.ZodString;
            criteria: z.ZodString;
            reference: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            attribute: string;
            criteria: string;
            reference: number;
        }, {
            attribute: string;
            criteria: string;
            reference: number;
        }>, "many">>>;
        elapsedTime: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        function: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        gameMode: z.ZodString;
        isBackfillMatch: z.ZodBoolean;
        isPivot: z.ZodBoolean;
        isRuleSetFlexed: z.ZodBoolean;
        iteration: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        matchID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        matchedRegion: z.ZodString;
        memberAttributes: z.ZodRecord<z.ZodString, z.ZodAny>;
        namespace: z.ZodString;
        partyID: z.ZodString;
        podName: z.ZodString;
        remainingPlayersPerTicket: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodNumber, "many">>>;
        remainingTickets: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        session: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            channel: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            client_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            deployment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            error_code: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            error_message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            game_mode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            joinable: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            match_id: z.ZodString;
            match_session_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            matching_allies: z.ZodArray<z.ZodObject<{
                matching_parties: z.ZodArray<z.ZodObject<{
                    first_ticket_created_at: z.ZodNumber;
                    party_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                    party_id: z.ZodString;
                    party_members: z.ZodArray<z.ZodObject<{
                        extra_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                        user_id: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }, {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }>, "many">;
                    ticket_id: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    first_ticket_created_at: number;
                    party_id: string;
                    party_members: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[];
                    ticket_id: string;
                    party_attributes?: Record<string, any> | null | undefined;
                }, {
                    first_ticket_created_at: number;
                    party_id: string;
                    party_members: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[];
                    ticket_id: string;
                    party_attributes?: Record<string, any> | null | undefined;
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                matching_parties: {
                    first_ticket_created_at: number;
                    party_id: string;
                    party_members: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[];
                    ticket_id: string;
                    party_attributes?: Record<string, any> | null | undefined;
                }[];
            }, {
                matching_parties: {
                    first_ticket_created_at: number;
                    party_id: string;
                    party_members: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[];
                    ticket_id: string;
                    party_attributes?: Record<string, any> | null | undefined;
                }[];
            }>, "many">;
            namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            party_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            party_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            queued_at: z.ZodNumber;
            region: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            server_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            ticket_id: z.ZodString;
            updated_at: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            ticket_id: string;
            match_id: string;
            matching_allies: {
                matching_parties: {
                    first_ticket_created_at: number;
                    party_id: string;
                    party_members: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[];
                    ticket_id: string;
                    party_attributes?: Record<string, any> | null | undefined;
                }[];
            }[];
            queued_at: number;
            updated_at: string;
            namespace?: string | null | undefined;
            status?: string | null | undefined;
            deployment?: string | null | undefined;
            region?: string | null | undefined;
            party_attributes?: Record<string, any> | null | undefined;
            party_id?: string | null | undefined;
            channel?: string | null | undefined;
            client_version?: string | null | undefined;
            error_code?: number | null | undefined;
            error_message?: string | null | undefined;
            game_mode?: string | null | undefined;
            joinable?: boolean | null | undefined;
            match_session_id?: string | null | undefined;
            server_name?: string | null | undefined;
        }, {
            ticket_id: string;
            match_id: string;
            matching_allies: {
                matching_parties: {
                    first_ticket_created_at: number;
                    party_id: string;
                    party_members: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[];
                    ticket_id: string;
                    party_attributes?: Record<string, any> | null | undefined;
                }[];
            }[];
            queued_at: number;
            updated_at: string;
            namespace?: string | null | undefined;
            status?: string | null | undefined;
            deployment?: string | null | undefined;
            region?: string | null | undefined;
            party_attributes?: Record<string, any> | null | undefined;
            party_id?: string | null | undefined;
            channel?: string | null | undefined;
            client_version?: string | null | undefined;
            error_code?: number | null | undefined;
            error_message?: string | null | undefined;
            game_mode?: string | null | undefined;
            joinable?: boolean | null | undefined;
            match_session_id?: string | null | undefined;
            server_name?: string | null | undefined;
        }>>>;
        sessionTickID: z.ZodString;
        tickID: z.ZodNumber;
        timeToMatchSec: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        timestamp: z.ZodString;
        totalPlayers: z.ZodNumber;
        unbackfillReason: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        unmatchReason: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        namespace: string;
        action: string;
        partyID: string;
        timestamp: string;
        gameMode: string;
        isBackfillMatch: boolean;
        isPivot: boolean;
        isRuleSetFlexed: boolean;
        matchedRegion: string;
        memberAttributes: Record<string, any>;
        podName: string;
        sessionTickID: string;
        tickID: number;
        totalPlayers: number;
        function?: string | null | undefined;
        unbackfillReason?: string | null | undefined;
        activeAllianceRule?: {
            max_number: number;
            min_number: number;
            player_max_number: number;
            player_min_number: number;
        } | null | undefined;
        activeMatchingRule?: {
            attribute: string;
            criteria: string;
            reference: number;
        }[] | null | undefined;
        elapsedTime?: number | null | undefined;
        iteration?: number | null | undefined;
        matchID?: string | null | undefined;
        remainingPlayersPerTicket?: number[] | null | undefined;
        remainingTickets?: number | null | undefined;
        session?: {
            ticket_id: string;
            match_id: string;
            matching_allies: {
                matching_parties: {
                    first_ticket_created_at: number;
                    party_id: string;
                    party_members: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[];
                    ticket_id: string;
                    party_attributes?: Record<string, any> | null | undefined;
                }[];
            }[];
            queued_at: number;
            updated_at: string;
            namespace?: string | null | undefined;
            status?: string | null | undefined;
            deployment?: string | null | undefined;
            region?: string | null | undefined;
            party_attributes?: Record<string, any> | null | undefined;
            party_id?: string | null | undefined;
            channel?: string | null | undefined;
            client_version?: string | null | undefined;
            error_code?: number | null | undefined;
            error_message?: string | null | undefined;
            game_mode?: string | null | undefined;
            joinable?: boolean | null | undefined;
            match_session_id?: string | null | undefined;
            server_name?: string | null | undefined;
        } | null | undefined;
        timeToMatchSec?: number | null | undefined;
        unmatchReason?: string | null | undefined;
    }, {
        namespace: string;
        action: string;
        partyID: string;
        timestamp: string;
        gameMode: string;
        isBackfillMatch: boolean;
        isPivot: boolean;
        isRuleSetFlexed: boolean;
        matchedRegion: string;
        memberAttributes: Record<string, any>;
        podName: string;
        sessionTickID: string;
        tickID: number;
        totalPlayers: number;
        function?: string | null | undefined;
        unbackfillReason?: string | null | undefined;
        activeAllianceRule?: {
            max_number: number;
            min_number: number;
            player_max_number: number;
            player_min_number: number;
        } | null | undefined;
        activeMatchingRule?: {
            attribute: string;
            criteria: string;
            reference: number;
        }[] | null | undefined;
        elapsedTime?: number | null | undefined;
        iteration?: number | null | undefined;
        matchID?: string | null | undefined;
        remainingPlayersPerTicket?: number[] | null | undefined;
        remainingTickets?: number | null | undefined;
        session?: {
            ticket_id: string;
            match_id: string;
            matching_allies: {
                matching_parties: {
                    first_ticket_created_at: number;
                    party_id: string;
                    party_members: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[];
                    ticket_id: string;
                    party_attributes?: Record<string, any> | null | undefined;
                }[];
            }[];
            queued_at: number;
            updated_at: string;
            namespace?: string | null | undefined;
            status?: string | null | undefined;
            deployment?: string | null | undefined;
            region?: string | null | undefined;
            party_attributes?: Record<string, any> | null | undefined;
            party_id?: string | null | undefined;
            channel?: string | null | undefined;
            client_version?: string | null | undefined;
            error_code?: number | null | undefined;
            error_message?: string | null | undefined;
            game_mode?: string | null | undefined;
            joinable?: boolean | null | undefined;
            match_session_id?: string | null | undefined;
            server_name?: string | null | undefined;
        } | null | undefined;
        timeToMatchSec?: number | null | undefined;
        unmatchReason?: string | null | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    ticket: {
        namespace: string;
        action: string;
        partyID: string;
        timestamp: string;
        gameMode: string;
        isBackfillMatch: boolean;
        isPivot: boolean;
        isRuleSetFlexed: boolean;
        matchedRegion: string;
        memberAttributes: Record<string, any>;
        podName: string;
        sessionTickID: string;
        tickID: number;
        totalPlayers: number;
        function?: string | null | undefined;
        unbackfillReason?: string | null | undefined;
        activeAllianceRule?: {
            max_number: number;
            min_number: number;
            player_max_number: number;
            player_min_number: number;
        } | null | undefined;
        activeMatchingRule?: {
            attribute: string;
            criteria: string;
            reference: number;
        }[] | null | undefined;
        elapsedTime?: number | null | undefined;
        iteration?: number | null | undefined;
        matchID?: string | null | undefined;
        remainingPlayersPerTicket?: number[] | null | undefined;
        remainingTickets?: number | null | undefined;
        session?: {
            ticket_id: string;
            match_id: string;
            matching_allies: {
                matching_parties: {
                    first_ticket_created_at: number;
                    party_id: string;
                    party_members: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[];
                    ticket_id: string;
                    party_attributes?: Record<string, any> | null | undefined;
                }[];
            }[];
            queued_at: number;
            updated_at: string;
            namespace?: string | null | undefined;
            status?: string | null | undefined;
            deployment?: string | null | undefined;
            region?: string | null | undefined;
            party_attributes?: Record<string, any> | null | undefined;
            party_id?: string | null | undefined;
            channel?: string | null | undefined;
            client_version?: string | null | undefined;
            error_code?: number | null | undefined;
            error_message?: string | null | undefined;
            game_mode?: string | null | undefined;
            joinable?: boolean | null | undefined;
            match_session_id?: string | null | undefined;
            server_name?: string | null | undefined;
        } | null | undefined;
        timeToMatchSec?: number | null | undefined;
        unmatchReason?: string | null | undefined;
    };
}, {
    ticket: {
        namespace: string;
        action: string;
        partyID: string;
        timestamp: string;
        gameMode: string;
        isBackfillMatch: boolean;
        isPivot: boolean;
        isRuleSetFlexed: boolean;
        matchedRegion: string;
        memberAttributes: Record<string, any>;
        podName: string;
        sessionTickID: string;
        tickID: number;
        totalPlayers: number;
        function?: string | null | undefined;
        unbackfillReason?: string | null | undefined;
        activeAllianceRule?: {
            max_number: number;
            min_number: number;
            player_max_number: number;
            player_min_number: number;
        } | null | undefined;
        activeMatchingRule?: {
            attribute: string;
            criteria: string;
            reference: number;
        }[] | null | undefined;
        elapsedTime?: number | null | undefined;
        iteration?: number | null | undefined;
        matchID?: string | null | undefined;
        remainingPlayersPerTicket?: number[] | null | undefined;
        remainingTickets?: number | null | undefined;
        session?: {
            ticket_id: string;
            match_id: string;
            matching_allies: {
                matching_parties: {
                    first_ticket_created_at: number;
                    party_id: string;
                    party_members: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[];
                    ticket_id: string;
                    party_attributes?: Record<string, any> | null | undefined;
                }[];
            }[];
            queued_at: number;
            updated_at: string;
            namespace?: string | null | undefined;
            status?: string | null | undefined;
            deployment?: string | null | undefined;
            region?: string | null | undefined;
            party_attributes?: Record<string, any> | null | undefined;
            party_id?: string | null | undefined;
            channel?: string | null | undefined;
            client_version?: string | null | undefined;
            error_code?: number | null | undefined;
            error_message?: string | null | undefined;
            game_mode?: string | null | undefined;
            joinable?: boolean | null | undefined;
            match_session_id?: string | null | undefined;
            server_name?: string | null | undefined;
        } | null | undefined;
        timeToMatchSec?: number | null | undefined;
        unmatchReason?: string | null | undefined;
    };
}>;
interface TicketObservability extends z.TypeOf<typeof TicketObservability> {
}

declare const TicketObservabilityHistory: z.ZodObject<{
    Action: z.ZodString;
    ExpiredAt: z.ZodString;
    ID: z.ZodString;
    Payload: z.ZodRecord<z.ZodString, z.ZodAny>;
    PodName: z.ZodString;
    TickID: z.ZodNumber;
    Timestamp: z.ZodString;
    party_id: z.ZodString;
    ticket_id: z.ZodString;
}, "strip", z.ZodTypeAny, {
    ID: string;
    Timestamp: string;
    ExpiredAt: string;
    party_id: string;
    ticket_id: string;
    Action: string;
    Payload: Record<string, any>;
    PodName: string;
    TickID: number;
}, {
    ID: string;
    Timestamp: string;
    ExpiredAt: string;
    party_id: string;
    ticket_id: string;
    Action: string;
    Payload: Record<string, any>;
    PodName: string;
    TickID: number;
}>;
interface TicketObservabilityHistory extends z.TypeOf<typeof TicketObservabilityHistory> {
}

declare const TicketStatus: z.ZodObject<{
    matched: z.ZodBoolean;
    ticket: z.ZodObject<{
        CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Latencies: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
        MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        MatchedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        PartySessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PlayerID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }, {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }>, "many">>>;
        ProposedProposal: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            BackfillID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            ProposalID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        }, {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        }>>>;
        TicketAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        TicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
    }, {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    ticket: {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
    };
    matched: boolean;
}, {
    ticket: {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
    };
    matched: boolean;
}>;
interface TicketStatus extends z.TypeOf<typeof TicketStatus> {
}

declare const TotalActiveSession: z.ZodObject<{
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    matchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    region: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    value: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    region?: string | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    region?: string | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}>;
interface TotalActiveSession extends z.TypeOf<typeof TotalActiveSession> {
}

declare const TotalPlayerPersession: z.ZodObject<{
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    matchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    region: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    value: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    region?: string | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}, {
    namespace?: string | null | undefined;
    value?: number | null | undefined;
    region?: string | null | undefined;
    createdAt?: string | null | undefined;
    matchPool?: string | null | undefined;
}>;
interface TotalPlayerPersession extends z.TypeOf<typeof TotalPlayerPersession> {
}

declare const User: z.ZodObject<{
    ID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    PlatformUserID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    StatusV2: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    UpdatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    Status?: string | null | undefined;
    StatusV2?: string | null | undefined;
    ID?: string | null | undefined;
    PlatformID?: string | null | undefined;
    PlatformUserID?: string | null | undefined;
    UpdatedAt?: string | null | undefined;
}, {
    Status?: string | null | undefined;
    StatusV2?: string | null | undefined;
    ID?: string | null | undefined;
    PlatformID?: string | null | undefined;
    PlatformUserID?: string | null | undefined;
    UpdatedAt?: string | null | undefined;
}>;
interface User extends z.TypeOf<typeof User> {
}

declare const XRayMatchPoolPodTickResult: z.ZodObject<{
    podName: z.ZodString;
    tickId: z.ZodString;
    timestamp: z.ZodString;
    totalMatchBackfilled: z.ZodNumber;
    totalMatchCreated: z.ZodNumber;
    totalMatchToBackfill: z.ZodNumber;
    totalTicketBackfilled: z.ZodNumber;
    totalTicketForBackfill: z.ZodNumber;
    totalTicketForMatch: z.ZodNumber;
    totalTicketInQueue: z.ZodNumber;
    totalTicketMatched: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    timestamp: string;
    podName: string;
    tickId: string;
    totalMatchBackfilled: number;
    totalMatchCreated: number;
    totalMatchToBackfill: number;
    totalTicketBackfilled: number;
    totalTicketForBackfill: number;
    totalTicketForMatch: number;
    totalTicketInQueue: number;
    totalTicketMatched: number;
}, {
    timestamp: string;
    podName: string;
    tickId: string;
    totalMatchBackfilled: number;
    totalMatchCreated: number;
    totalMatchToBackfill: number;
    totalTicketBackfilled: number;
    totalTicketForBackfill: number;
    totalTicketForMatch: number;
    totalTicketInQueue: number;
    totalTicketMatched: number;
}>;
interface XRayMatchPoolPodTickResult extends z.TypeOf<typeof XRayMatchPoolPodTickResult> {
}

declare const XRayMatchPoolResult: z.ZodObject<{
    podName: z.ZodString;
}, "strip", z.ZodTypeAny, {
    podName: string;
}, {
    podName: string;
}>;
interface XRayMatchPoolResult extends z.TypeOf<typeof XRayMatchPoolResult> {
}

declare const XRayMatchTicketHistory: z.ZodObject<{
    action: z.ZodString;
    match: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        action: z.ZodString;
        match: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            Backfill: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            ClientVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            MatchAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            PivotID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            RegionPreference: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            ServerName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Teams: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                Parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                    PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
                }, "strip", z.ZodTypeAny, {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }, {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }>, "many">>>;
                UserIDs: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            }, "strip", z.ZodTypeAny, {
                UserIDs?: string[] | null | undefined;
                Parties?: {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }[] | null | undefined;
            }, {
                UserIDs?: string[] | null | undefined;
                Parties?: {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }[] | null | undefined;
            }>, "many">>>;
            Tickets: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                IsPivot: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
                Latencies: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
                MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                MatchedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                PartySessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                Players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                    Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                    PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    PlayerID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                }, "strip", z.ZodTypeAny, {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }, {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }>, "many">>>;
                ProposedProposal: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    BackfillID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    ProposalID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                }, "strip", z.ZodTypeAny, {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                }, {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                }>>>;
                RegionPreference: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
                TicketAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                TicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                TimeToMatch: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                CreatedAt?: string | null | undefined;
                MatchPool?: string | null | undefined;
                Namespace?: string | null | undefined;
                Latencies?: Record<string, number> | null | undefined;
                MatchedAt?: string | null | undefined;
                PartySessionID?: string | null | undefined;
                Players?: {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }[] | null | undefined;
                ProposedProposal?: {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                } | null | undefined;
                TicketAttributes?: Record<string, any> | null | undefined;
                TicketID?: string | null | undefined;
                IsPivot?: boolean | null | undefined;
                RegionPreference?: string[] | null | undefined;
                TimeToMatch?: number | null | undefined;
            }, {
                CreatedAt?: string | null | undefined;
                MatchPool?: string | null | undefined;
                Namespace?: string | null | undefined;
                Latencies?: Record<string, number> | null | undefined;
                MatchedAt?: string | null | undefined;
                PartySessionID?: string | null | undefined;
                Players?: {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }[] | null | undefined;
                ProposedProposal?: {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                } | null | undefined;
                TicketAttributes?: Record<string, any> | null | undefined;
                TicketID?: string | null | undefined;
                IsPivot?: boolean | null | undefined;
                RegionPreference?: string[] | null | undefined;
                TimeToMatch?: number | null | undefined;
            }>, "many">>>;
            Timestamp: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            ClientVersion?: string | null | undefined;
            Teams?: {
                UserIDs?: string[] | null | undefined;
                Parties?: {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            RegionPreference?: string[] | null | undefined;
            Backfill?: boolean | null | undefined;
            MatchAttributes?: Record<string, any> | null | undefined;
            PivotID?: string | null | undefined;
            ServerName?: string | null | undefined;
            Tickets?: {
                CreatedAt?: string | null | undefined;
                MatchPool?: string | null | undefined;
                Namespace?: string | null | undefined;
                Latencies?: Record<string, number> | null | undefined;
                MatchedAt?: string | null | undefined;
                PartySessionID?: string | null | undefined;
                Players?: {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }[] | null | undefined;
                ProposedProposal?: {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                } | null | undefined;
                TicketAttributes?: Record<string, any> | null | undefined;
                TicketID?: string | null | undefined;
                IsPivot?: boolean | null | undefined;
                RegionPreference?: string[] | null | undefined;
                TimeToMatch?: number | null | undefined;
            }[] | null | undefined;
            Timestamp?: string | null | undefined;
        }, {
            ClientVersion?: string | null | undefined;
            Teams?: {
                UserIDs?: string[] | null | undefined;
                Parties?: {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            RegionPreference?: string[] | null | undefined;
            Backfill?: boolean | null | undefined;
            MatchAttributes?: Record<string, any> | null | undefined;
            PivotID?: string | null | undefined;
            ServerName?: string | null | undefined;
            Tickets?: {
                CreatedAt?: string | null | undefined;
                MatchPool?: string | null | undefined;
                Namespace?: string | null | undefined;
                Latencies?: Record<string, number> | null | undefined;
                MatchedAt?: string | null | undefined;
                PartySessionID?: string | null | undefined;
                Players?: {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }[] | null | undefined;
                ProposedProposal?: {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                } | null | undefined;
                TicketAttributes?: Record<string, any> | null | undefined;
                TicketID?: string | null | undefined;
                IsPivot?: boolean | null | undefined;
                RegionPreference?: string[] | null | undefined;
                TimeToMatch?: number | null | undefined;
            }[] | null | undefined;
            Timestamp?: string | null | undefined;
        }>>>;
        matchID: z.ZodString;
        matchpool: z.ZodString;
        namespace: z.ZodString;
        podName: z.ZodString;
        ruleSet: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        tickID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        timestamp: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        namespace: string;
        action: string;
        timestamp: string;
        matchID: string;
        podName: string;
        matchpool: string;
        tickID?: string | null | undefined;
        match?: {
            ClientVersion?: string | null | undefined;
            Teams?: {
                UserIDs?: string[] | null | undefined;
                Parties?: {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            RegionPreference?: string[] | null | undefined;
            Backfill?: boolean | null | undefined;
            MatchAttributes?: Record<string, any> | null | undefined;
            PivotID?: string | null | undefined;
            ServerName?: string | null | undefined;
            Tickets?: {
                CreatedAt?: string | null | undefined;
                MatchPool?: string | null | undefined;
                Namespace?: string | null | undefined;
                Latencies?: Record<string, number> | null | undefined;
                MatchedAt?: string | null | undefined;
                PartySessionID?: string | null | undefined;
                Players?: {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }[] | null | undefined;
                ProposedProposal?: {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                } | null | undefined;
                TicketAttributes?: Record<string, any> | null | undefined;
                TicketID?: string | null | undefined;
                IsPivot?: boolean | null | undefined;
                RegionPreference?: string[] | null | undefined;
                TimeToMatch?: number | null | undefined;
            }[] | null | undefined;
            Timestamp?: string | null | undefined;
        } | null | undefined;
        ruleSet?: string | null | undefined;
    }, {
        namespace: string;
        action: string;
        timestamp: string;
        matchID: string;
        podName: string;
        matchpool: string;
        tickID?: string | null | undefined;
        match?: {
            ClientVersion?: string | null | undefined;
            Teams?: {
                UserIDs?: string[] | null | undefined;
                Parties?: {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            RegionPreference?: string[] | null | undefined;
            Backfill?: boolean | null | undefined;
            MatchAttributes?: Record<string, any> | null | undefined;
            PivotID?: string | null | undefined;
            ServerName?: string | null | undefined;
            Tickets?: {
                CreatedAt?: string | null | undefined;
                MatchPool?: string | null | undefined;
                Namespace?: string | null | undefined;
                Latencies?: Record<string, number> | null | undefined;
                MatchedAt?: string | null | undefined;
                PartySessionID?: string | null | undefined;
                Players?: {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }[] | null | undefined;
                ProposedProposal?: {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                } | null | undefined;
                TicketAttributes?: Record<string, any> | null | undefined;
                TicketID?: string | null | undefined;
                IsPivot?: boolean | null | undefined;
                RegionPreference?: string[] | null | undefined;
                TimeToMatch?: number | null | undefined;
            }[] | null | undefined;
            Timestamp?: string | null | undefined;
        } | null | undefined;
        ruleSet?: string | null | undefined;
    }>>>;
    ticket: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Latencies: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
        MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        MatchedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        PartySessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            PlayerID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }, {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }>, "many">>>;
        ProposedProposal: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            BackfillID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            ProposalID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        }, {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        }>>>;
        TicketAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        TicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
    }, {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
    }>>>;
    timestamp: z.ZodString;
}, "strip", z.ZodTypeAny, {
    action: string;
    timestamp: string;
    ticket?: {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
    } | null | undefined;
    match?: {
        namespace: string;
        action: string;
        timestamp: string;
        matchID: string;
        podName: string;
        matchpool: string;
        tickID?: string | null | undefined;
        match?: {
            ClientVersion?: string | null | undefined;
            Teams?: {
                UserIDs?: string[] | null | undefined;
                Parties?: {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            RegionPreference?: string[] | null | undefined;
            Backfill?: boolean | null | undefined;
            MatchAttributes?: Record<string, any> | null | undefined;
            PivotID?: string | null | undefined;
            ServerName?: string | null | undefined;
            Tickets?: {
                CreatedAt?: string | null | undefined;
                MatchPool?: string | null | undefined;
                Namespace?: string | null | undefined;
                Latencies?: Record<string, number> | null | undefined;
                MatchedAt?: string | null | undefined;
                PartySessionID?: string | null | undefined;
                Players?: {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }[] | null | undefined;
                ProposedProposal?: {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                } | null | undefined;
                TicketAttributes?: Record<string, any> | null | undefined;
                TicketID?: string | null | undefined;
                IsPivot?: boolean | null | undefined;
                RegionPreference?: string[] | null | undefined;
                TimeToMatch?: number | null | undefined;
            }[] | null | undefined;
            Timestamp?: string | null | undefined;
        } | null | undefined;
        ruleSet?: string | null | undefined;
    } | null | undefined;
}, {
    action: string;
    timestamp: string;
    ticket?: {
        CreatedAt?: string | null | undefined;
        MatchPool?: string | null | undefined;
        Namespace?: string | null | undefined;
        Latencies?: Record<string, number> | null | undefined;
        MatchedAt?: string | null | undefined;
        PartySessionID?: string | null | undefined;
        Players?: {
            PlatformID?: string | null | undefined;
            Attributes?: Record<string, any> | null | undefined;
            PartyID?: string | null | undefined;
            PlayerID?: string | null | undefined;
        }[] | null | undefined;
        ProposedProposal?: {
            Status?: string | null | undefined;
            BackfillID?: string | null | undefined;
            ProposalID?: string | null | undefined;
        } | null | undefined;
        TicketAttributes?: Record<string, any> | null | undefined;
        TicketID?: string | null | undefined;
    } | null | undefined;
    match?: {
        namespace: string;
        action: string;
        timestamp: string;
        matchID: string;
        podName: string;
        matchpool: string;
        tickID?: string | null | undefined;
        match?: {
            ClientVersion?: string | null | undefined;
            Teams?: {
                UserIDs?: string[] | null | undefined;
                Parties?: {
                    PartyID?: string | null | undefined;
                    UserIDs?: string[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            RegionPreference?: string[] | null | undefined;
            Backfill?: boolean | null | undefined;
            MatchAttributes?: Record<string, any> | null | undefined;
            PivotID?: string | null | undefined;
            ServerName?: string | null | undefined;
            Tickets?: {
                CreatedAt?: string | null | undefined;
                MatchPool?: string | null | undefined;
                Namespace?: string | null | undefined;
                Latencies?: Record<string, number> | null | undefined;
                MatchedAt?: string | null | undefined;
                PartySessionID?: string | null | undefined;
                Players?: {
                    PlatformID?: string | null | undefined;
                    Attributes?: Record<string, any> | null | undefined;
                    PartyID?: string | null | undefined;
                    PlayerID?: string | null | undefined;
                }[] | null | undefined;
                ProposedProposal?: {
                    Status?: string | null | undefined;
                    BackfillID?: string | null | undefined;
                    ProposalID?: string | null | undefined;
                } | null | undefined;
                TicketAttributes?: Record<string, any> | null | undefined;
                TicketID?: string | null | undefined;
                IsPivot?: boolean | null | undefined;
                RegionPreference?: string[] | null | undefined;
                TimeToMatch?: number | null | undefined;
            }[] | null | undefined;
            Timestamp?: string | null | undefined;
        } | null | undefined;
        ruleSet?: string | null | undefined;
    } | null | undefined;
}>;
interface XRayMatchTicketHistory extends z.TypeOf<typeof XRayMatchTicketHistory> {
}

declare const XRayTicketMatchesResult: z.ZodObject<{
    CreatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    IsPivot: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    Latencies: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
    MatchPool: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    MatchedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    PartySessionID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    Players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        Attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        PartyID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        PlatformID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        PlayerID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        PlatformID?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        PartyID?: string | null | undefined;
        PlayerID?: string | null | undefined;
    }, {
        PlatformID?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        PartyID?: string | null | undefined;
        PlayerID?: string | null | undefined;
    }>, "many">>>;
    ProposedProposal: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        BackfillID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        ProposalID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        Status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        Status?: string | null | undefined;
        BackfillID?: string | null | undefined;
        ProposalID?: string | null | undefined;
    }, {
        Status?: string | null | undefined;
        BackfillID?: string | null | undefined;
        ProposalID?: string | null | undefined;
    }>>>;
    RegionPreference: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    TicketAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    TicketID: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    TimeToMatch: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    CreatedAt?: string | null | undefined;
    MatchPool?: string | null | undefined;
    Namespace?: string | null | undefined;
    Latencies?: Record<string, number> | null | undefined;
    MatchedAt?: string | null | undefined;
    PartySessionID?: string | null | undefined;
    Players?: {
        PlatformID?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        PartyID?: string | null | undefined;
        PlayerID?: string | null | undefined;
    }[] | null | undefined;
    ProposedProposal?: {
        Status?: string | null | undefined;
        BackfillID?: string | null | undefined;
        ProposalID?: string | null | undefined;
    } | null | undefined;
    TicketAttributes?: Record<string, any> | null | undefined;
    TicketID?: string | null | undefined;
    IsPivot?: boolean | null | undefined;
    RegionPreference?: string[] | null | undefined;
    TimeToMatch?: number | null | undefined;
}, {
    CreatedAt?: string | null | undefined;
    MatchPool?: string | null | undefined;
    Namespace?: string | null | undefined;
    Latencies?: Record<string, number> | null | undefined;
    MatchedAt?: string | null | undefined;
    PartySessionID?: string | null | undefined;
    Players?: {
        PlatformID?: string | null | undefined;
        Attributes?: Record<string, any> | null | undefined;
        PartyID?: string | null | undefined;
        PlayerID?: string | null | undefined;
    }[] | null | undefined;
    ProposedProposal?: {
        Status?: string | null | undefined;
        BackfillID?: string | null | undefined;
        ProposalID?: string | null | undefined;
    } | null | undefined;
    TicketAttributes?: Record<string, any> | null | undefined;
    TicketID?: string | null | undefined;
    IsPivot?: boolean | null | undefined;
    RegionPreference?: string[] | null | undefined;
    TimeToMatch?: number | null | undefined;
}>;
interface XRayTicketMatchesResult extends z.TypeOf<typeof XRayTicketMatchesResult> {
}

declare const XRayTicketResult: z.ZodObject<{
    elapsedTime: z.ZodNumber;
    id: z.ZodString;
    isBackfill: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    isPivot: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    matchpool: z.ZodString;
    memberAttributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    podName: z.ZodString;
    reason: z.ZodString;
    region: z.ZodString;
    tickId: z.ZodString;
    ticketId: z.ZodString;
    ticketStatus: z.ZodString;
    timestamp: z.ZodString;
    totalPlayers: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    region: string;
    timestamp: string;
    elapsedTime: number;
    podName: string;
    matchpool: string;
    tickId: string;
    id: string;
    reason: string;
    ticketId: string;
    ticketStatus: string;
    isPivot?: boolean | null | undefined;
    memberAttributes?: Record<string, any> | null | undefined;
    totalPlayers?: number | null | undefined;
    isBackfill?: boolean | null | undefined;
}, {
    region: string;
    timestamp: string;
    elapsedTime: number;
    podName: string;
    matchpool: string;
    tickId: string;
    id: string;
    reason: string;
    ticketId: string;
    ticketStatus: string;
    isPivot?: boolean | null | undefined;
    memberAttributes?: Record<string, any> | null | undefined;
    totalPlayers?: number | null | undefined;
    isBackfill?: boolean | null | undefined;
}>;
interface XRayTicketResult extends z.TypeOf<typeof XRayTicketResult> {
}

/**
 * AUTO GENERATED
 */

declare class GameSessionDetail$ {
    private axiosInstance;
    private namespace;
    private useSchemaValidation;
    constructor(axiosInstance: AxiosInstance, namespace: string, useSchemaValidation?: boolean);
    /**
     * Get all game sessions history for current user.
     */
    getUsersMeGamesessions(queryParams?: {
        limit?: number;
        offset?: number;
        order?: string | null;
    }): Promise<Response<GameSessionDetailQueryResponse>>;
}

/**
 * AUTO GENERATED
 */

declare function GameSessionDetailApi(sdk: AccelByteSDK, args?: SdkSetConfigParam): {
    /**
     * Get all game sessions history for current user.
     */
    getUsersMeGamesessions: (queryParams?: {
        limit?: number;
        offset?: number;
        order?: string | null;
    }) => Promise<AxiosResponse<GameSessionDetailQueryResponse>>;
};

/**
 * AUTO GENERATED
 */

declare const SessionHistory: {
    ConfigAdminApi: typeof ConfigAdminApi;
    GameSessionDetailAdminApi: typeof GameSessionDetailAdminApi;
    XRayAdminApi: typeof XRayAdminApi;
    GameSessionDetailApi: typeof GameSessionDetailApi;
    version: () => void;
};

export { AcquiringDs, AcquiringDsWaitTime, AllianceRule, BackfillProposal, BackfillTicket, CanceledMatchmakingTicket, ConfigAdmin$, ConfigAdminApi, Configuration, CreatedMatchmakingTicket, DsInformation, Error, EventMatchHistory, ExpiredMatchmakingTicket, GameServer, GameSession, GameSessionDetail, GameSessionDetail$, GameSessionDetailAdmin$, GameSessionDetailAdminApi, GameSessionDetailApi, GameSessionDetailQueryResponse, GameSessionTeam, History, Match, MatchLengthDuration, MatchMatchmaking, MatchMatchmakingTicket, MatchTicket, MatchingAlly, MatchingParty, MatchingRule, MatchmakingDetail, MatchmakingDetailQueryResponse, MatchmakingHistory, MatchmakingResult, Pagination, Party, PartyDetail, PartyDetailQueryResponse, PartyHistory, PartyMember, PartyMembers, PartyTeam, PlayerData, ProposedProposal, SessionConfig, SessionConfiguration, SessionHistory, Team, Ticket, TicketData, TicketDetailQueryResponse, TicketObservability, TicketObservabilityDetail, TicketObservabilityHistory, TicketStatus, TotalActiveSession, TotalPlayerPersession, User, XRayAcquiringDsQueryResponse, XRayAcquiringDsWaitTimeQueryResponse, XRayAdmin$, XRayAdminApi, XRayBulkTicketObservabilityRequest, XRayBulkTicketObservabilityResponse, XRayCanceledMatchmakingTicketQueryResponse, XRayCreatedMatchmakingTicketQueryResponse, XRayExpiredMatchmakingTicketQueryResponse, XRayMatchHistorQueryResponse, XRayMatchLengthDurationQueryResponse, XRayMatchMatchmakingQueryResponse, XRayMatchMatchmakingTicketQueryResponse, XRayMatchPoolPodTickMatchResponse, XRayMatchPoolPodTickQueryResponse, XRayMatchPoolPodTickResult, XRayMatchPoolPodTickTicketResponse, XRayMatchPoolQueryResponse, XRayMatchPoolResult, XRayMatchTicketHistory, XRayMatchTicketHistoryQueryResponse, XRayMatchesQueryResponse, XRayTicketMatchesResult, XRayTicketObservabilityRequest, XRayTicketObservabilityResponse, XRayTicketQueryResponse, XRayTicketResult, XRayTotalActiveSessionQueryResponse, XRayTotalPlayerPersessionAvgQueryResponse };
