import { z } from 'zod';

declare const ValidateEmailErrorType: z.ZodEnum<["empty", "lessThanLengthLimit", "exceedLengthLimit", "invalidFormat", "containsForbiddenWords"]>;
type ValidateEmailErrorType = z.infer<typeof ValidateEmailErrorType>;
interface ValidateEmailOptions {
    blockedWord?: string[];
    isRequired?: boolean;
    customRegex?: string;
    maxLength?: number;
    minLength?: number;
}
declare const validateEmail: (value: string, { blockedWord, isRequired, customRegex, maxLength, minLength }?: ValidateEmailOptions) => "empty" | "lessThanLengthLimit" | "exceedLengthLimit" | "invalidFormat" | "containsForbiddenWords" | null;

export { ValidateEmailErrorType, type ValidateEmailOptions, validateEmail };
