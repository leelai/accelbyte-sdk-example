import { z } from 'zod';

type CommonValidationErrorType = z.infer<typeof CommonValidationErrorType>;
declare const CommonValidationErrorType: z.ZodEnum<["empty", "lessThanLengthLimit", "exceedLengthLimit", "invalidFormat", "lessThanMinimumValue", "exceedMaximumValue", "invalidValue", "notContainsLetterAndNumber", "notContainsUpperCaseAndLowerCase", "containsTwoCharactersInArrow", "containsBadWords", "containsForbiddenWords", "containsProfanityWords", "containsDecimal", "invalidFileExtensions", "exceedMaximumFileSize", "alreadyUsed", "nameIsNotAllowed", "exceedPageTitleLength", "emptyPageTitle", "emptyRetryDuration", "exceedRetryDuration", "invalidElementSelector", "elementSelectorNotExist", "customClassNotExist", "invalidCustomClassName", "invalidHTML", "invalidHTMLCSS", "invalidCSS"]>;
type ThrownErrorType = z.infer<typeof ThrownErrorType>;
declare const ThrownErrorType: z.ZodEnum<["invalidOption"]>;

export { CommonValidationErrorType, ThrownErrorType };
