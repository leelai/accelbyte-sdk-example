{"version":3,"sources":["../../../src/input-validation/Validation.ts"],"names":[],"mappings":"AAMO,MAAM,UAAc,CAAA;AAAA,EAApB,WAAA,GAAA;AACL,IAAQ,IAAA,CAAA,aAAA,uBAAqD,GAAI,EAAA,CAAA;AACjE,IAAQ,IAAA,CAAA,UAAA,uBAAqC,GAAI,EAAA,CAAA;AAAA,GAAA;AAAA,EAE1C,GAAA,CAAI,KAAc,KAA6B,EAAA;AACpD,IAAK,IAAA,CAAA,aAAA,CAAc,GAAI,CAAA,GAAA,EAAK,KAAK,CAAA,CAAA;AACjC,IAAA,IAAA,CAAK,iBAAkB,EAAA,CAAA;AAAA,GACzB;AAAA,EAEO,IAAI,GAAoC,EAAA;AAC7C,IAAA,OAAO,IAAK,CAAA,aAAA,CAAc,GAAI,CAAA,GAAG,CAAK,IAAA,IAAA,CAAA;AAAA,GACxC;AAAA,EAEO,OAAO,GAAc,EAAA;AAC1B,IAAO,OAAA,IAAA,CAAK,aAAc,CAAA,MAAA,CAAO,GAAG,CAAA,CAAA;AAAA,GACtC;AAAA,EAEO,KAAQ,GAAA;AACb,IAAK,IAAA,CAAA,aAAA,uBAAoB,GAAI,EAAA,CAAA;AAC7B,IAAA,IAAA,CAAK,iBAAkB,EAAA,CAAA;AAAA,GACzB;AAAA,EAEO,OAAO,QAAyB,EAAA;AACrC,IAAK,IAAA,CAAA,UAAA,CAAW,IAAI,QAAQ,CAAA,CAAA;AAAA,GAC9B;AAAA,EAEO,SAAS,QAAyB,EAAA;AACvC,IAAK,IAAA,CAAA,UAAA,CAAW,OAAO,QAAQ,CAAA,CAAA;AAAA,GACjC;AAAA,EAEO,eAAkB,GAAA;AACvB,IAAK,IAAA,CAAA,UAAA,uBAAiB,GAAI,EAAA,CAAA;AAAA,GAC5B;AAAA,EAEO,QAAQ,GAAc,EAAA;AAC3B,IAAA,OAAO,CAAC,IAAA,CAAK,aAAc,CAAA,GAAA,CAAI,GAAG,CAAA,CAAA;AAAA,GACpC;AAAA,EAEO,UAAa,GAAA;AAClB,IAAI,IAAA,IAAA,CAAK,aAAc,CAAA,IAAA,KAAS,CAAG,EAAA;AACjC,MAAO,OAAA,IAAA,CAAA;AAAA,KACT;AACA,IAAA,MAAM,WAAW,KAAM,CAAA,IAAA,CAAK,IAAK,CAAA,aAAA,CAAc,QAAQ,CAAA,CAAA;AACvD,IAAO,OAAA,QAAA,CAAS,MAAM,CAAS,KAAA,KAAA;AAC7B,MAAA,OAAO,KAAU,KAAA,IAAA,CAAA;AAAA,KAClB,CAAA,CAAA;AAAA,GACH;AAAA,EAEQ,iBAAoB,GAAA;AAC1B,IAAA,KAAA,CAAM,KAAK,IAAK,CAAA,UAAU,EAAE,OAAQ,CAAA,CAAA,CAAA,KAAK,GAAG,CAAA,CAAA;AAAA,GAC9C;AACF","file":"Validation.js","sourcesContent":["/*\n * Copyright (c) 2019. AccelByte Inc. All Rights Reserved\n * This is licensed software from AccelByte Inc, for limitations\n * and restrictions contact your company contract manager.\n */\n\nexport class Validation<T> {\n  private validationMap: Map<keyof T, T[keyof T] | null> = new Map()\n  private subscriber: Set<() => unknown> = new Set()\n\n  public set(key: keyof T, value: T[typeof key] | null) {\n    this.validationMap.set(key, value)\n    this.notifySubscribers()\n  }\n\n  public get(key: keyof T): T[typeof key] | null {\n    return this.validationMap.get(key) || null\n  }\n\n  public delete(key: keyof T) {\n    return this.validationMap.delete(key)\n  }\n\n  public clear() {\n    this.validationMap = new Map()\n    this.notifySubscribers()\n  }\n\n  public listen(listener: () => unknown) {\n    this.subscriber.add(listener)\n  }\n\n  public unlisten(listener: () => unknown) {\n    this.subscriber.delete(listener)\n  }\n\n  public clearSubscriber() {\n    this.subscriber = new Set()\n  }\n\n  public isValid(key: keyof T) {\n    return !this.validationMap.get(key)\n  }\n\n  public isAllValid() {\n    if (this.validationMap.size === 0) {\n      return true\n    }\n    const mapArray = Array.from(this.validationMap.values())\n    return mapArray.every(value => {\n      return value === null\n    })\n  }\n\n  private notifySubscribers() {\n    Array.from(this.subscriber).forEach(a => a())\n  }\n}\n"]}