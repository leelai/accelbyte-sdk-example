import {
  AdminGameRecordResponse,
  AdminPlayerRecordKeyInfo,
  AdminPlayerRecordResponse,
  AppConfig,
  BinaryInfoResponse,
  BulkGetAdminGameRecordResponse,
  BulkGetAdminPlayerRecordResponse,
  BulkGetGameBinaryRecordResponse,
  BulkGetGameRecordResponse,
  BulkGetPlayerBinaryRecordResponse,
  BulkGetPlayerRecordResponse,
  BulkGetPlayerRecordSizeResponse,
  BulkUpdatePlayerRecordByKeyResponse,
  BulkUpdatePlayerRecordByKeyResponseArray,
  BulkUpdatePlayerRecordResponse,
  BulkUpdatePlayerRecordResponseArray,
  ConcurrentRecord$,
  ConcurrentRecordAdmin$,
  ConcurrentRecordAdminApi,
  ConcurrentRecordApi,
  CustomConfig,
  CustomFunction,
  GameBinaryRecordAdmin$,
  GameBinaryRecordAdminApi,
  GameBinaryRecordAdminResponse,
  GameBinaryRecordResponse,
  GameRecordAdmin$,
  GameRecordAdminApi,
  GameRecordAdminResponse,
  GameRecordResponse,
  ListAdminGameRecordKeysResponse,
  ListAdminPlayerRecordKeysResponse,
  ListGameBinaryRecordsAdminResponse,
  ListGameBinaryRecordsResponse,
  ListGameRecordKeysResponse,
  ListPlayerBinaryRecordsResponse,
  ListPlayerRecordKeysResponse,
  ListTagsResponse,
  Pagination,
  PlayerBinaryRecordAdmin$,
  PlayerBinaryRecordAdminApi,
  PlayerBinaryRecordResponse,
  PlayerRecordAdmin$,
  PlayerRecordAdminApi,
  PlayerRecordConcurrentUpdateResponse,
  PlayerRecordKeyInfo,
  PlayerRecordResponse,
  PlayerRecordSizeResponse,
  PluginConfigAdmin$,
  PluginConfigAdminApi,
  PluginResponse,
  PublicGameBinaryRecord$,
  PublicGameBinaryRecordApi,
  PublicGameRecord$,
  PublicGameRecordApi,
  PublicPlayerBinaryRecord$,
  PublicPlayerBinaryRecordApi,
  PublicPlayerRecord$,
  PublicPlayerRecordApi,
  PublicTags$,
  PublicTagsApi,
  RecordAdmin$,
  RecordAdminApi,
  TagInfo,
  TagsAdmin$,
  TagsAdminApi,
  TtlConfigAdmin$,
  TtlConfigAdminApi,
  TtlConfigDto,
  UploadBinaryRecordResponse
} from "./chunk-G7XEGMZE.js";

// package.json
var name = "@accelbyte/sdk-cloudsave";
var version = "6.0.0";
var author = "AccelByte Inc";

// src/Cloudsave.ts
console.log(`${name}@${version}`);
var apis = {
  TagsAdminApi,
  PluginConfigAdminApi,
  GameRecordAdminApi,
  GameBinaryRecordAdminApi,
  RecordAdminApi,
  PlayerRecordAdminApi,
  TtlConfigAdminApi,
  PlayerBinaryRecordAdminApi,
  ConcurrentRecordAdminApi,
  PublicTagsApi,
  PublicGameBinaryRecordApi,
  PublicGameRecordApi,
  PublicPlayerRecordApi,
  PublicPlayerBinaryRecordApi,
  ConcurrentRecordApi,
  version: () => console.log({
    version,
    name,
    author
  })
};
var Cloudsave = apis;

// src/generated-definitions/AdminConcurrentRecordRequest.ts
import { z } from "zod";
var AdminConcurrentRecordRequest = z.object({
  set_by: z.enum(["CLIENT", "SERVER"]),
  tags: z.array(z.string()).nullish(),
  ttl_config: TtlConfigDto.nullish(),
  updatedAt: z.string(),
  value: z.record(z.any())
});

// src/generated-definitions/AdminGameConcurrentRecordRequest.ts
import { z as z2 } from "zod";
var AdminGameConcurrentRecordRequest = z2.object({
  tags: z2.array(z2.string()).nullish(),
  updatedAt: z2.string(),
  value: z2.record(z2.any())
});

// src/generated-definitions/AdminGameRecordRequest.ts
import { z as z3 } from "zod";
var AdminGameRecordRequest = z3.any();

// src/generated-definitions/AdminPlayerConcurrentRecordRequest.ts
import { z as z4 } from "zod";
var AdminPlayerConcurrentRecordRequest = z4.object({
  tags: z4.array(z4.string()).nullish(),
  updatedAt: z4.string(),
  value: z4.record(z4.any())
});

// src/generated-definitions/AdminPlayerRecordRequest.ts
import { z as z5 } from "zod";
var AdminPlayerRecordRequest = z5.any();

// src/generated-definitions/BinaryRecordRequest.ts
import { z as z6 } from "zod";
var BinaryRecordRequest = z6.object({ content_type: z6.string(), file_location: z6.string() });

// src/generated-definitions/BulkGetAdminGameRecordRequest.ts
import { z as z7 } from "zod";
var BulkGetAdminGameRecordRequest = z7.object({ keys: z7.array(z7.string()) });

// src/generated-definitions/BulkGetAdminPlayerRecordRequest.ts
import { z as z8 } from "zod";
var BulkGetAdminPlayerRecordRequest = z8.object({ keys: z8.array(z8.string()) });

// src/generated-definitions/BulkGetGameRecordRequest.ts
import { z as z9 } from "zod";
var BulkGetGameRecordRequest = z9.object({ keys: z9.array(z9.string()) });

// src/generated-definitions/BulkGetPlayerRecordsRequest.ts
import { z as z10 } from "zod";
var BulkGetPlayerRecordsRequest = z10.object({ keys: z10.array(z10.string()) });

// src/generated-definitions/BulkUpdatePlayerRecordByKeyRequestDetail.ts
import { z as z11 } from "zod";
var BulkUpdatePlayerRecordByKeyRequestDetail = z11.object({ user_id: z11.string(), value: z11.record(z11.any()) });

// src/generated-definitions/BulkUpdatePlayerRecordRequestDetail.ts
import { z as z12 } from "zod";
var BulkUpdatePlayerRecordRequestDetail = z12.object({ key: z12.string(), value: z12.record(z12.any()) });

// src/generated-definitions/BulkUpdatePlayerRecordsByKeyRequest.ts
import { z as z13 } from "zod";
var BulkUpdatePlayerRecordsByKeyRequest = z13.object({ data: z13.array(BulkUpdatePlayerRecordByKeyRequestDetail) });

// src/generated-definitions/BulkUpdatePlayerRecordsRequest.ts
import { z as z14 } from "zod";
var BulkUpdatePlayerRecordsRequest = z14.object({ data: z14.array(BulkUpdatePlayerRecordRequestDetail) });

// src/generated-definitions/BulkUserIDsRequest.ts
import { z as z15 } from "zod";
var BulkUserIDsRequest = z15.object({ userIds: z15.array(z15.string()) });

// src/generated-definitions/BulkUserKeyRequest.ts
import { z as z17 } from "zod";

// src/generated-definitions/UserKeyRequest.ts
import { z as z16 } from "zod";
var UserKeyRequest = z16.object({ keys: z16.array(z16.string()), user_id: z16.string() });

// src/generated-definitions/BulkUserKeyRequest.ts
var BulkUserKeyRequest = z17.object({ data: z17.array(UserKeyRequest) });

// src/generated-definitions/ConcurrentRecordRequest.ts
import { z as z18 } from "zod";
var ConcurrentRecordRequest = z18.object({ updatedAt: z18.string(), value: z18.record(z18.any()) });

// src/generated-definitions/GameBinaryRecordCreate.ts
import { z as z19 } from "zod";
var GameBinaryRecordCreate = z19.object({
  file_type: z19.string(),
  key: z19.string(),
  set_by: z19.enum(["CLIENT", "SERVER"]),
  ttl_config: TtlConfigDto.nullish()
});

// src/generated-definitions/GameBinaryRecordMetadataRequest.ts
import { z as z20 } from "zod";
var GameBinaryRecordMetadataRequest = z20.object({
  set_by: z20.enum(["CLIENT", "SERVER"]),
  tags: z20.array(z20.string()).nullish(),
  ttl_config: TtlConfigDto.nullish()
});

// src/generated-definitions/GameRecordRequest.ts
import { z as z21 } from "zod";
var GameRecordRequest = z21.any();

// src/generated-definitions/PlayerBinaryRecordCreate.ts
import { z as z22 } from "zod";
var PlayerBinaryRecordCreate = z22.object({
  file_type: z22.string(),
  is_public: z22.boolean().nullish(),
  key: z22.string(),
  set_by: z22.enum(["CLIENT", "SERVER"])
});

// src/generated-definitions/PlayerBinaryRecordMetadataPublicRequest.ts
import { z as z23 } from "zod";
var PlayerBinaryRecordMetadataPublicRequest = z23.object({ is_public: z23.boolean().nullish() });

// src/generated-definitions/PlayerBinaryRecordMetadataRequest.ts
import { z as z24 } from "zod";
var PlayerBinaryRecordMetadataRequest = z24.object({
  is_public: z24.boolean().nullish(),
  set_by: z24.enum(["CLIENT", "SERVER"]).nullish(),
  tags: z24.array(z24.string()).nullish()
});

// src/generated-definitions/PlayerRecordRequest.ts
import { z as z25 } from "zod";
var PlayerRecordRequest = z25.any();

// src/generated-definitions/PluginRequest.ts
import { z as z26 } from "zod";
var PluginRequest = z26.object({
  appConfig: AppConfig.nullish(),
  customConfig: CustomConfig.nullish(),
  customFunction: CustomFunction,
  extendType: z26.enum(["APP", "CUSTOM"])
});

// src/generated-definitions/PublicGameBinaryRecordCreate.ts
import { z as z27 } from "zod";
var PublicGameBinaryRecordCreate = z27.object({ file_type: z27.string(), key: z27.string() });

// src/generated-definitions/PublicPlayerBinaryRecordCreate.ts
import { z as z28 } from "zod";
var PublicPlayerBinaryRecordCreate = z28.object({ file_type: z28.string(), is_public: z28.boolean().nullish(), key: z28.string() });

// src/generated-definitions/ResponseError.ts
import { z as z29 } from "zod";
var ResponseError = z29.object({ errorCode: z29.number().int(), errorMessage: z29.string() });

// src/generated-definitions/TagRequest.ts
import { z as z30 } from "zod";
var TagRequest = z30.object({ tag: z30.string() });

// src/generated-definitions/UploadBinaryRecordRequest.ts
import { z as z31 } from "zod";
var UploadBinaryRecordRequest = z31.object({ file_type: z31.string() });
export {
  AdminConcurrentRecordRequest,
  AdminGameConcurrentRecordRequest,
  AdminGameRecordRequest,
  AdminGameRecordResponse,
  AdminPlayerConcurrentRecordRequest,
  AdminPlayerRecordKeyInfo,
  AdminPlayerRecordRequest,
  AdminPlayerRecordResponse,
  AppConfig,
  BinaryInfoResponse,
  BinaryRecordRequest,
  BulkGetAdminGameRecordRequest,
  BulkGetAdminGameRecordResponse,
  BulkGetAdminPlayerRecordRequest,
  BulkGetAdminPlayerRecordResponse,
  BulkGetGameBinaryRecordResponse,
  BulkGetGameRecordRequest,
  BulkGetGameRecordResponse,
  BulkGetPlayerBinaryRecordResponse,
  BulkGetPlayerRecordResponse,
  BulkGetPlayerRecordSizeResponse,
  BulkGetPlayerRecordsRequest,
  BulkUpdatePlayerRecordByKeyRequestDetail,
  BulkUpdatePlayerRecordByKeyResponse,
  BulkUpdatePlayerRecordByKeyResponseArray,
  BulkUpdatePlayerRecordRequestDetail,
  BulkUpdatePlayerRecordResponse,
  BulkUpdatePlayerRecordResponseArray,
  BulkUpdatePlayerRecordsByKeyRequest,
  BulkUpdatePlayerRecordsRequest,
  BulkUserIDsRequest,
  BulkUserKeyRequest,
  Cloudsave,
  ConcurrentRecord$,
  ConcurrentRecordAdmin$,
  ConcurrentRecordAdminApi,
  ConcurrentRecordApi,
  ConcurrentRecordRequest,
  CustomConfig,
  CustomFunction,
  GameBinaryRecordAdmin$,
  GameBinaryRecordAdminApi,
  GameBinaryRecordAdminResponse,
  GameBinaryRecordCreate,
  GameBinaryRecordMetadataRequest,
  GameBinaryRecordResponse,
  GameRecordAdmin$,
  GameRecordAdminApi,
  GameRecordAdminResponse,
  GameRecordRequest,
  GameRecordResponse,
  ListAdminGameRecordKeysResponse,
  ListAdminPlayerRecordKeysResponse,
  ListGameBinaryRecordsAdminResponse,
  ListGameBinaryRecordsResponse,
  ListGameRecordKeysResponse,
  ListPlayerBinaryRecordsResponse,
  ListPlayerRecordKeysResponse,
  ListTagsResponse,
  Pagination,
  PlayerBinaryRecordAdmin$,
  PlayerBinaryRecordAdminApi,
  PlayerBinaryRecordCreate,
  PlayerBinaryRecordMetadataPublicRequest,
  PlayerBinaryRecordMetadataRequest,
  PlayerBinaryRecordResponse,
  PlayerRecordAdmin$,
  PlayerRecordAdminApi,
  PlayerRecordConcurrentUpdateResponse,
  PlayerRecordKeyInfo,
  PlayerRecordRequest,
  PlayerRecordResponse,
  PlayerRecordSizeResponse,
  PluginConfigAdmin$,
  PluginConfigAdminApi,
  PluginRequest,
  PluginResponse,
  PublicGameBinaryRecord$,
  PublicGameBinaryRecordApi,
  PublicGameBinaryRecordCreate,
  PublicGameRecord$,
  PublicGameRecordApi,
  PublicPlayerBinaryRecord$,
  PublicPlayerBinaryRecordApi,
  PublicPlayerBinaryRecordCreate,
  PublicPlayerRecord$,
  PublicPlayerRecordApi,
  PublicTags$,
  PublicTagsApi,
  RecordAdmin$,
  RecordAdminApi,
  ResponseError,
  TagInfo,
  TagRequest,
  TagsAdmin$,
  TagsAdminApi,
  TtlConfigAdmin$,
  TtlConfigAdminApi,
  TtlConfigDto,
  UploadBinaryRecordRequest,
  UploadBinaryRecordResponse,
  UserKeyRequest
};
