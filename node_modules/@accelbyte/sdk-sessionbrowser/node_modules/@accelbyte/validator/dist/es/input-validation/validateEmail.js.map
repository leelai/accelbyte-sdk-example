{"version":3,"sources":["../../../src/input-validation/validateEmail.ts"],"names":[],"mappings":";;;;;;;;AAca,MAAA,sBAAA,GAAyB,EAAE,IAAK,CAAA;AAAA,EAC3C,GAAG,uBAAwB,CAAA,OAAA;AAAA,EAC3B,0BAA0B,IAAK,CAAA,aAAA;AAAA,EAC/B,0BAA0B,IAAK,CAAA,sBAAA;AACjC,CAAC,EAAA;AAWM,MAAM,aAAgB,GAAA,CAC3B,KACA,EAAA,EAAE,cAAc,EAAC,EAAG,UAAa,GAAA,IAAA,EAAM,WAAa,EAAA,SAAA,EAAW,SAAU,EAAA,GAA0B,EAChG,KAAA;AACH,EAAA,MAAM,KAAQ,GAAA,kFAAA,CAAA;AACd,EAAA,IAAI,cAAc,OAAQ,CAAA,KAAK,CAAG,EAAA,OAAO,uBAAuB,IAAK,CAAA,KAAA,CAAA;AAErE,EAAI,IAAA,WAAA,CAAY,SAAS,CAAG,EAAA;AAC1B,IAAA,IAAI,uBAAuB,KAAO,EAAA,WAAW,CAAG,EAAA,OAAO,uBAAuB,IAAK,CAAA,sBAAA,CAAA;AAAA,GACrF;AAEA,EAAI,IAAA,CAAC,QAAQ,KAAO,EAAA,WAAA,IAAe,KAAK,CAAG,EAAA,OAAO,uBAAuB,IAAK,CAAA,aAAA,CAAA;AAE9E,EAAO,OAAA,cAAA,CAAe,OAAO,EAAE,GAAA,EAAK,aAAa,gBAAkB,EAAA,GAAA,EAAK,WAAW,CAAA,CAAA;AACrF","file":"validateEmail.js","sourcesContent":["/*\n * Copyright (c) 2019-2024 AccelByte Inc. All Rights Reserved\n * This is licensed software from AccelByte Inc, for limitations\n * and restrictions contact your company contract manager.\n */\n\nimport isEmpty from 'validator/lib/isEmpty.js'\nimport matches from 'validator/lib/matches.js'\nimport { z } from 'zod'\nimport { CommonValidationErrorType } from './constant/errorType'\nimport { MAX_EMAIL_LENGTH } from './constant/numbers'\nimport { validateLength, ValidateLengthErrorType } from './validateLength'\nimport { validateForbiddenWords } from './validateForbiddenWords'\n\nexport const ValidateEmailErrorType = z.enum([\n  ...ValidateLengthErrorType.options,\n  CommonValidationErrorType.enum.invalidFormat,\n  CommonValidationErrorType.enum.containsForbiddenWords\n])\nexport type ValidateEmailErrorType = z.infer<typeof ValidateEmailErrorType>\n\nexport interface ValidateEmailOptions {\n  blockedWord?: string[]\n  isRequired?: boolean\n  customRegex?: string\n  maxLength?: number\n  minLength?: number\n}\n\nexport const validateEmail = (\n  value: string,\n  { blockedWord = [], isRequired = true, customRegex, maxLength, minLength }: ValidateEmailOptions = {}\n) => {\n  const REGEX = '^[a-zA-Z0-9_+&*-]+(?:\\\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,15}$'\n  if (isRequired && isEmpty(value)) return ValidateEmailErrorType.enum.empty\n\n  if (blockedWord.length > 0) {\n    if (validateForbiddenWords(value, blockedWord)) return ValidateEmailErrorType.enum.containsForbiddenWords\n  }\n\n  if (!matches(value, customRegex || REGEX)) return ValidateEmailErrorType.enum.invalidFormat\n\n  return validateLength(value, { max: maxLength || MAX_EMAIL_LENGTH, min: minLength })\n}\n"]}