{"version":3,"sources":["../../../src/input-validation/validateLegalDocumentName.ts"],"names":[],"mappings":";;;;;;;AAaa,MAAA,kCAAA,GAAqC,CAAE,CAAA,IAAA,CAAK,CAAC,GAAG,wBAAwB,OAAS,EAAA,yBAAA,CAA0B,IAAK,CAAA,aAAa,CAAC,EAAA;AAiB9H,MAAA,yBAAA,GAA4B,CACvC,KAAA,EACA,EAAE,UAAA,GAAa,MAAM,SAAY,GAAA,qBAAA,EAA4D,GAAA,EAC1F,KAAA;AACH,EAAA,MAAM,KAAQ,GAAA,6BAAA,CAAA;AAEd,EAAI,IAAA,OAAA,CAAQ,KAAK,CAAG,EAAA;AAClB,IAAA,IAAI,CAAC,UAAY,EAAA;AACf,MAAO,OAAA,IAAA,CAAA;AAAA,KACT;AACA,IAAA,OAAO,mCAAmC,IAAK,CAAA,KAAA,CAAA;AAAA,GACjD;AAEA,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,KAAK,CAAG,EAAA;AAC1B,IAAA,OAAO,mCAAmC,IAAK,CAAA,aAAA,CAAA;AAAA,GACjD;AAEA,EAAA,OAAO,eAAe,KAAO,EAAA;AAAA,IAC3B,GAAK,EAAA,SAAA;AAAA,GACN,CAAA,CAAA;AACH","file":"validateLegalDocumentName.js","sourcesContent":["/*\n * Copyright (c) 2020-2023 AccelByte Inc. All Rights Reserved\n * This is licensed software from AccelByte Inc, for limitations\n * and restrictions contact your company contract manager.\n */\n\nimport isEmpty from 'validator/lib/isEmpty.js'\nimport matches from 'validator/lib/matches.js'\nimport { z } from 'zod'\nimport { CommonValidationErrorType } from './constant/errorType'\nimport { MAX_SHORT_TEXT_LENGTH } from './constant/numbers'\nimport { validateLength, ValidateLengthErrorType } from './validateLength'\n\nexport const ValidateLegalDocumentNameErrorType = z.enum([...ValidateLengthErrorType.options, CommonValidationErrorType.enum.invalidFormat])\nexport type ValidateLegalDocumentNameErrorType = z.infer<typeof ValidateLegalDocumentNameErrorType>\n\nexport interface ValidateLegalDocumentNameOptions {\n  isRequired?: boolean\n  maxLength?: number\n}\n\n/**\n *\n * @param value\n * @param isRequired\n * @param maxLength\n *\n * @default isRequired true\n * @default maxLength MAX_SHORT_TEXT_LENGTH\n */\nexport const validateLegalDocumentName = (\n  value: string,\n  { isRequired = true, maxLength = MAX_SHORT_TEXT_LENGTH }: ValidateLegalDocumentNameOptions = {}\n) => {\n  const REGEX = /^[a-zA-Z]+([\\s][a-zA-Z]+)*$/\n\n  if (isEmpty(value)) {\n    if (!isRequired) {\n      return null\n    }\n    return ValidateLegalDocumentNameErrorType.enum.empty\n  }\n\n  if (!matches(value, REGEX)) {\n    return ValidateLegalDocumentNameErrorType.enum.invalidFormat\n  }\n\n  return validateLength(value, {\n    max: maxLength\n  })\n}\n"]}