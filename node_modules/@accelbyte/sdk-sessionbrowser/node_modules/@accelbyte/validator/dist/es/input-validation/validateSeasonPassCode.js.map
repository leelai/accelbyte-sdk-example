{"version":3,"sources":["../../../src/input-validation/validateSeasonPassCode.ts"],"names":[],"mappings":";;;;;;AAYa,MAAA,+BAAA,GAAkC,EAAE,IAAK,CAAA;AAAA,EACpD,GAAG,uBAAwB,CAAA,OAAA;AAAA,EAC3B,0BAA0B,IAAK,CAAA,aAAA;AAAA,EAC/B,0BAA0B,IAAK,CAAA,WAAA;AACjC,CAAC,EAAA;AAOY,MAAA,sBAAA,GAAyB,CAAC,KAAe,EAAA,EAAE,aAAa,IAAK,EAAA,GAAmC,EAAO,KAAA;AAClH,EAAA,MAAM,KAAQ,GAAA,iCAAA,CAAA;AACd,EAAI,IAAA,OAAA,CAAQ,KAAK,CAAG,EAAA;AAClB,IAAA,IAAI,CAAC,UAAY,EAAA;AACf,MAAO,OAAA,IAAA,CAAA;AAAA,KACT;AACA,IAAA,OAAO,gCAAgC,IAAK,CAAA,KAAA,CAAA;AAAA,GAC9C;AACA,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,KAAK,CAAG,EAAA;AAC1B,IAAA,OAAO,gCAAgC,IAAK,CAAA,aAAA,CAAA;AAAA,GAC9C;AACA,EAAA,OAAO,eAAe,KAAK,CAAA,CAAA;AAC7B","file":"validateSeasonPassCode.js","sourcesContent":["/*\n * Copyright (c) 2020-2023 AccelByte Inc. All Rights Reserved\n * This is licensed software from AccelByte Inc, for limitations\n * and restrictions contact your company contract manager.\n */\n\nimport isEmpty from 'validator/lib/isEmpty.js'\nimport matches from 'validator/lib/matches.js'\nimport { z } from 'zod'\nimport { CommonValidationErrorType } from './constant/errorType'\nimport { validateLength, ValidateLengthErrorType } from './validateLength'\n\nexport const ValidateSeasonPassCodeErrorType = z.enum([\n  ...ValidateLengthErrorType.options,\n  CommonValidationErrorType.enum.invalidFormat,\n  CommonValidationErrorType.enum.alreadyUsed\n])\nexport type ValidateSeasonPassCodeErrorType = z.infer<typeof ValidateSeasonPassCodeErrorType>\n\nexport interface ValidateSeasonPassCodeOptions {\n  isRequired?: boolean\n}\n\nexport const validateSeasonPassCode = (value: string, { isRequired = true }: ValidateSeasonPassCodeOptions = {}) => {\n  const REGEX = '^[a-z0-9]+([_:-]{1}[a-z0-9]+)*$'\n  if (isEmpty(value)) {\n    if (!isRequired) {\n      return null\n    }\n    return ValidateSeasonPassCodeErrorType.enum.empty\n  }\n  if (!matches(value, REGEX)) {\n    return ValidateSeasonPassCodeErrorType.enum.invalidFormat\n  }\n  return validateLength(value)\n}\n"]}