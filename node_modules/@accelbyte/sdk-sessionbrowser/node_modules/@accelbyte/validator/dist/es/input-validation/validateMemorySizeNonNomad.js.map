{"version":3,"sources":["../../../src/input-validation/validateMemorySizeNonNomad.ts"],"names":[],"mappings":";;;;;;AAaa,MAAA,mCAAA,GAAsC,EAAE,IAAK,CAAA;AAAA,EACxD,GAAG,uBAAwB,CAAA,OAAA;AAAA,EAC3B,0BAA0B,IAAK,CAAA,aAAA;AACjC,CAAC,EAAA;AAOY,MAAA,0BAAA,GAA6B,CAAC,KAAe,EAAA,EAAE,aAAa,IAAK,EAAA,GAAuC,EAAO,KAAA;AAC1H,EAAA,MAAM,UAAa,GAAA,CAAA,CAAA;AACnB,EAAA,MAAM,KAAQ,GAAA,YAAA,CAAA;AACd,EAAI,IAAA,OAAA,CAAQ,KAAK,CAAG,EAAA;AAClB,IAAA,IAAI,CAAC,UAAY,EAAA;AACf,MAAO,OAAA,IAAA,CAAA;AAAA,KACT;AACA,IAAA,OAAO,oCAAoC,IAAK,CAAA,KAAA,CAAA;AAAA,GAClD;AACA,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,KAAK,CAAG,EAAA;AAC1B,IAAA,OAAO,oCAAoC,IAAK,CAAA,aAAA,CAAA;AAAA,GAClD;AACA,EAAA,OAAO,cAAe,CAAA,KAAA,EAAO,EAAE,GAAA,EAAK,YAAY,CAAA,CAAA;AAClD","file":"validateMemorySizeNonNomad.js","sourcesContent":["/*\n * Copyright (c) 2021-2023 AccelByte Inc. All Rights Reserved\n * This is licensed software from AccelByte Inc, for limitations\n * and restrictions contact your company contract manager.\n */\n\nimport isEmpty from 'validator/lib/isEmpty.js'\nimport matches from 'validator/lib/matches.js'\nimport { z } from 'zod'\nimport { CommonValidationErrorType } from './constant/errorType'\nimport { validateLength, ValidateLengthErrorType } from './validateLength'\n\n// tslint:disable-next-line:max-line-length\nexport const ValidateMemorySizeNonNomadErrorType = z.enum([\n  ...ValidateLengthErrorType.options,\n  CommonValidationErrorType.enum.invalidFormat\n])\nexport type ValidateMemorySizeNonNomadErrorType = z.infer<typeof ValidateMemorySizeNonNomadErrorType>\n\nexport interface ValidateMemorySizeNonNomadOptions {\n  isRequired?: boolean\n}\n// tslint:disable-next-line:max-line-length\nexport const validateMemorySizeNonNomad = (value: string, { isRequired = true }: ValidateMemorySizeNonNomadOptions = {}) => {\n  const MAX_LENGTH = 9\n  const REGEX = '^[0-9]+Mi$'\n  if (isEmpty(value)) {\n    if (!isRequired) {\n      return null\n    }\n    return ValidateMemorySizeNonNomadErrorType.enum.empty\n  }\n  if (!matches(value, REGEX)) {\n    return ValidateMemorySizeNonNomadErrorType.enum.invalidFormat\n  }\n  return validateLength(value, { max: MAX_LENGTH })\n}\n"]}