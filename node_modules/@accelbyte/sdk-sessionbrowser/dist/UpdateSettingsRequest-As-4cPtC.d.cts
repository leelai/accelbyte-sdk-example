import { z } from 'zod';

declare const ActiveCustomGameResponse: z.ZodObject<{
    pagination: z.ZodObject<{
        next: z.ZodString;
        previous: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        next: string;
        previous: string;
    }, {
        next: string;
        previous: string;
    }>;
    sessions: z.ZodArray<z.ZodObject<{
        all_players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        created_at: z.ZodString;
        game_session_setting: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            allow_join_in_progress: z.ZodBoolean;
            current_internal_player: z.ZodNumber;
            current_player: z.ZodNumber;
            map_name: z.ZodString;
            max_internal_player: z.ZodNumber;
            max_player: z.ZodNumber;
            mode: z.ZodString;
            num_bot: z.ZodNumber;
            password: z.ZodString;
            settings: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        }, "strip", z.ZodTypeAny, {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        }, {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        }>>>;
        joinable: z.ZodBoolean;
        namespace: z.ZodString;
        players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        server: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            allocation_id: z.ZodString;
            alternate_ips: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            cpu_limit: z.ZodNumber;
            cpu_request: z.ZodString;
            deployment: z.ZodString;
            game_version: z.ZodString;
            image_version: z.ZodString;
            ip: z.ZodString;
            is_override_game_version: z.ZodBoolean;
            last_update: z.ZodString;
            mem_limit: z.ZodNumber;
            mem_request: z.ZodString;
            namespace: z.ZodString;
            params: z.ZodString;
            pod_name: z.ZodString;
            port: z.ZodNumber;
            ports: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
            provider: z.ZodString;
            region: z.ZodString;
            session_id: z.ZodString;
            status: z.ZodString;
            status_history: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                status: z.ZodString;
                time_stamp: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                status: string;
                time_stamp: string;
            }, {
                status: string;
                time_stamp: string;
            }>, "many">>>;
        }, "strip", z.ZodTypeAny, {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        }, {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        }>>>;
        session_id: z.ZodString;
        session_type: z.ZodString;
        spectators: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    }, "strip", z.ZodTypeAny, {
        namespace: string;
        session_id: string;
        created_at: string;
        joinable: boolean;
        session_type: string;
        all_players?: string[] | null | undefined;
        game_session_setting?: {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        } | null | undefined;
        players?: string[] | null | undefined;
        server?: {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        } | null | undefined;
        spectators?: string[] | null | undefined;
    }, {
        namespace: string;
        session_id: string;
        created_at: string;
        joinable: boolean;
        session_type: string;
        all_players?: string[] | null | undefined;
        game_session_setting?: {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        } | null | undefined;
        players?: string[] | null | undefined;
        server?: {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        } | null | undefined;
        spectators?: string[] | null | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    pagination: {
        next: string;
        previous: string;
    };
    sessions: {
        namespace: string;
        session_id: string;
        created_at: string;
        joinable: boolean;
        session_type: string;
        all_players?: string[] | null | undefined;
        game_session_setting?: {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        } | null | undefined;
        players?: string[] | null | undefined;
        server?: {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        } | null | undefined;
        spectators?: string[] | null | undefined;
    }[];
}, {
    pagination: {
        next: string;
        previous: string;
    };
    sessions: {
        namespace: string;
        session_id: string;
        created_at: string;
        joinable: boolean;
        session_type: string;
        all_players?: string[] | null | undefined;
        game_session_setting?: {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        } | null | undefined;
        players?: string[] | null | undefined;
        server?: {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        } | null | undefined;
        spectators?: string[] | null | undefined;
    }[];
}>;
interface ActiveCustomGameResponse extends z.TypeOf<typeof ActiveCustomGameResponse> {
}

declare const ActiveMatchmakingGameResponse: z.ZodObject<{
    pagination: z.ZodObject<{
        next: z.ZodString;
        previous: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        next: string;
        previous: string;
    }, {
        next: string;
        previous: string;
    }>;
    sessions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        all_players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        created_at: z.ZodString;
        game_session_setting: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            allow_join_in_progress: z.ZodBoolean;
            current_internal_player: z.ZodNumber;
            current_player: z.ZodNumber;
            map_name: z.ZodString;
            max_internal_player: z.ZodNumber;
            max_player: z.ZodNumber;
            mode: z.ZodString;
            num_bot: z.ZodNumber;
            password: z.ZodString;
            settings: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        }, "strip", z.ZodTypeAny, {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        }, {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        }>>>;
        game_version: z.ZodString;
        joinable: z.ZodBoolean;
        match: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            channel: z.ZodString;
            client_version: z.ZodString;
            created_at: z.ZodString;
            deployment: z.ZodString;
            event: z.ZodString;
            game_mode: z.ZodString;
            joinable: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            match_id: z.ZodString;
            matching_allies: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                matching_parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                    match_attributes: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                        first_ticket_created_at: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        first_ticket_created_at: number;
                    }, {
                        first_ticket_created_at: number;
                    }>>>;
                    party_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                    party_id: z.ZodString;
                    party_members: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                        extra_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                        user_id: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }, {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }>, "many">>>;
                }, "strip", z.ZodTypeAny, {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }, {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }>, "many">>>;
            }, "strip", z.ZodTypeAny, {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }, {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }>, "many">>>;
            namespace: z.ZodString;
            party_attributes: z.ZodRecord<z.ZodString, z.ZodAny>;
            party_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            queued_at: z.ZodNumber;
            region: z.ZodString;
            server_name: z.ZodString;
            status: z.ZodString;
            sub_game_mode: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strip", z.ZodTypeAny, {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        }, {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        }>>>;
        namespace: z.ZodString;
        players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        server: z.ZodObject<{
            allocation_id: z.ZodString;
            alternate_ips: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            cpu_limit: z.ZodNumber;
            cpu_request: z.ZodString;
            deployment: z.ZodString;
            game_version: z.ZodString;
            image_version: z.ZodString;
            ip: z.ZodString;
            is_override_game_version: z.ZodBoolean;
            last_update: z.ZodString;
            mem_limit: z.ZodNumber;
            mem_request: z.ZodString;
            namespace: z.ZodString;
            params: z.ZodString;
            pod_name: z.ZodString;
            port: z.ZodNumber;
            ports: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
            provider: z.ZodString;
            region: z.ZodString;
            session_id: z.ZodString;
            status: z.ZodString;
            status_history: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                status: z.ZodString;
                time_stamp: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                status: string;
                time_stamp: string;
            }, {
                status: string;
                time_stamp: string;
            }>, "many">>>;
        }, "strip", z.ZodTypeAny, {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        }, {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        }>;
        session_id: z.ZodString;
        session_type: z.ZodString;
        spectators: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        user_id: z.ZodString;
        username: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        namespace: string;
        user_id: string;
        game_version: string;
        session_id: string;
        created_at: string;
        joinable: boolean;
        server: {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        };
        session_type: string;
        username: string;
        all_players?: string[] | null | undefined;
        game_session_setting?: {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        } | null | undefined;
        players?: string[] | null | undefined;
        spectators?: string[] | null | undefined;
        match?: {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        } | null | undefined;
    }, {
        namespace: string;
        user_id: string;
        game_version: string;
        session_id: string;
        created_at: string;
        joinable: boolean;
        server: {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        };
        session_type: string;
        username: string;
        all_players?: string[] | null | undefined;
        game_session_setting?: {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        } | null | undefined;
        players?: string[] | null | undefined;
        spectators?: string[] | null | undefined;
        match?: {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        } | null | undefined;
    }>, "many">>>;
}, "strip", z.ZodTypeAny, {
    pagination: {
        next: string;
        previous: string;
    };
    sessions?: {
        namespace: string;
        user_id: string;
        game_version: string;
        session_id: string;
        created_at: string;
        joinable: boolean;
        server: {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        };
        session_type: string;
        username: string;
        all_players?: string[] | null | undefined;
        game_session_setting?: {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        } | null | undefined;
        players?: string[] | null | undefined;
        spectators?: string[] | null | undefined;
        match?: {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        } | null | undefined;
    }[] | null | undefined;
}, {
    pagination: {
        next: string;
        previous: string;
    };
    sessions?: {
        namespace: string;
        user_id: string;
        game_version: string;
        session_id: string;
        created_at: string;
        joinable: boolean;
        server: {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        };
        session_type: string;
        username: string;
        all_players?: string[] | null | undefined;
        game_session_setting?: {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        } | null | undefined;
        players?: string[] | null | undefined;
        spectators?: string[] | null | undefined;
        match?: {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        } | null | undefined;
    }[] | null | undefined;
}>;
interface ActiveMatchmakingGameResponse extends z.TypeOf<typeof ActiveMatchmakingGameResponse> {
}

declare const AdminSessionResponse: z.ZodObject<{
    all_players: z.ZodArray<z.ZodString, "many">;
    created_at: z.ZodString;
    game_session_setting: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        allow_join_in_progress: z.ZodBoolean;
        current_internal_player: z.ZodNumber;
        current_player: z.ZodNumber;
        map_name: z.ZodString;
        max_internal_player: z.ZodNumber;
        max_player: z.ZodNumber;
        mode: z.ZodString;
        num_bot: z.ZodNumber;
        password: z.ZodString;
        settings: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    }, "strip", z.ZodTypeAny, {
        password: string;
        allow_join_in_progress: boolean;
        current_internal_player: number;
        current_player: number;
        map_name: string;
        max_internal_player: number;
        max_player: number;
        mode: string;
        num_bot: number;
        settings?: Record<string, any> | null | undefined;
    }, {
        password: string;
        allow_join_in_progress: boolean;
        current_internal_player: number;
        current_player: number;
        map_name: string;
        max_internal_player: number;
        max_player: number;
        mode: string;
        num_bot: number;
        settings?: Record<string, any> | null | undefined;
    }>>>;
    game_version: z.ZodString;
    joinable: z.ZodBoolean;
    match: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        channel: z.ZodString;
        client_version: z.ZodString;
        created_at: z.ZodString;
        deployment: z.ZodString;
        event: z.ZodString;
        game_mode: z.ZodString;
        joinable: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        match_id: z.ZodString;
        matching_allies: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            matching_parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                match_attributes: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    first_ticket_created_at: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    first_ticket_created_at: number;
                }, {
                    first_ticket_created_at: number;
                }>>>;
                party_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                party_id: z.ZodString;
                party_members: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                    extra_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                    user_id: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }, {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }>, "many">>>;
            }, "strip", z.ZodTypeAny, {
                party_id: string;
                match_attributes?: {
                    first_ticket_created_at: number;
                } | null | undefined;
                party_attributes?: Record<string, any> | null | undefined;
                party_members?: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[] | null | undefined;
            }, {
                party_id: string;
                match_attributes?: {
                    first_ticket_created_at: number;
                } | null | undefined;
                party_attributes?: Record<string, any> | null | undefined;
                party_members?: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[] | null | undefined;
            }>, "many">>>;
        }, "strip", z.ZodTypeAny, {
            matching_parties?: {
                party_id: string;
                match_attributes?: {
                    first_ticket_created_at: number;
                } | null | undefined;
                party_attributes?: Record<string, any> | null | undefined;
                party_members?: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
        }, {
            matching_parties?: {
                party_id: string;
                match_attributes?: {
                    first_ticket_created_at: number;
                } | null | undefined;
                party_attributes?: Record<string, any> | null | undefined;
                party_members?: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
        }>, "many">>>;
        namespace: z.ZodString;
        party_attributes: z.ZodRecord<z.ZodString, z.ZodAny>;
        party_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        queued_at: z.ZodNumber;
        region: z.ZodString;
        server_name: z.ZodString;
        status: z.ZodString;
        sub_game_mode: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    }, "strip", z.ZodTypeAny, {
        namespace: string;
        status: string;
        deployment: string;
        region: string;
        created_at: string;
        party_attributes: Record<string, any>;
        channel: string;
        client_version: string;
        event: string;
        game_mode: string;
        match_id: string;
        queued_at: number;
        server_name: string;
        joinable?: boolean | null | undefined;
        party_id?: string | null | undefined;
        matching_allies?: {
            matching_parties?: {
                party_id: string;
                match_attributes?: {
                    first_ticket_created_at: number;
                } | null | undefined;
                party_attributes?: Record<string, any> | null | undefined;
                party_members?: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        sub_game_mode?: string[] | null | undefined;
    }, {
        namespace: string;
        status: string;
        deployment: string;
        region: string;
        created_at: string;
        party_attributes: Record<string, any>;
        channel: string;
        client_version: string;
        event: string;
        game_mode: string;
        match_id: string;
        queued_at: number;
        server_name: string;
        joinable?: boolean | null | undefined;
        party_id?: string | null | undefined;
        matching_allies?: {
            matching_parties?: {
                party_id: string;
                match_attributes?: {
                    first_ticket_created_at: number;
                } | null | undefined;
                party_attributes?: Record<string, any> | null | undefined;
                party_members?: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        sub_game_mode?: string[] | null | undefined;
    }>>>;
    namespace: z.ZodString;
    players: z.ZodArray<z.ZodString, "many">;
    server: z.ZodObject<{
        allocation_id: z.ZodString;
        alternate_ips: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        cpu_limit: z.ZodNumber;
        cpu_request: z.ZodString;
        deployment: z.ZodString;
        game_version: z.ZodString;
        image_version: z.ZodString;
        ip: z.ZodString;
        is_override_game_version: z.ZodBoolean;
        last_update: z.ZodString;
        mem_limit: z.ZodNumber;
        mem_request: z.ZodString;
        namespace: z.ZodString;
        params: z.ZodString;
        pod_name: z.ZodString;
        port: z.ZodNumber;
        ports: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
        provider: z.ZodString;
        region: z.ZodString;
        session_id: z.ZodString;
        status: z.ZodString;
        status_history: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            status: z.ZodString;
            time_stamp: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            status: string;
            time_stamp: string;
        }, {
            status: string;
            time_stamp: string;
        }>, "many">>>;
    }, "strip", z.ZodTypeAny, {
        namespace: string;
        params: string;
        status: string;
        allocation_id: string;
        cpu_limit: number;
        cpu_request: string;
        deployment: string;
        game_version: string;
        image_version: string;
        ip: string;
        is_override_game_version: boolean;
        last_update: string;
        mem_limit: number;
        mem_request: string;
        pod_name: string;
        port: number;
        provider: string;
        region: string;
        session_id: string;
        alternate_ips?: string[] | null | undefined;
        ports?: Record<string, number> | null | undefined;
        status_history?: {
            status: string;
            time_stamp: string;
        }[] | null | undefined;
    }, {
        namespace: string;
        params: string;
        status: string;
        allocation_id: string;
        cpu_limit: number;
        cpu_request: string;
        deployment: string;
        game_version: string;
        image_version: string;
        ip: string;
        is_override_game_version: boolean;
        last_update: string;
        mem_limit: number;
        mem_request: string;
        pod_name: string;
        port: number;
        provider: string;
        region: string;
        session_id: string;
        alternate_ips?: string[] | null | undefined;
        ports?: Record<string, number> | null | undefined;
        status_history?: {
            status: string;
            time_stamp: string;
        }[] | null | undefined;
    }>;
    session_id: z.ZodString;
    session_type: z.ZodString;
    spectators: z.ZodArray<z.ZodString, "many">;
    user_id: z.ZodString;
    username: z.ZodString;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    user_id: string;
    game_version: string;
    session_id: string;
    all_players: string[];
    created_at: string;
    joinable: boolean;
    players: string[];
    server: {
        namespace: string;
        params: string;
        status: string;
        allocation_id: string;
        cpu_limit: number;
        cpu_request: string;
        deployment: string;
        game_version: string;
        image_version: string;
        ip: string;
        is_override_game_version: boolean;
        last_update: string;
        mem_limit: number;
        mem_request: string;
        pod_name: string;
        port: number;
        provider: string;
        region: string;
        session_id: string;
        alternate_ips?: string[] | null | undefined;
        ports?: Record<string, number> | null | undefined;
        status_history?: {
            status: string;
            time_stamp: string;
        }[] | null | undefined;
    };
    session_type: string;
    spectators: string[];
    username: string;
    game_session_setting?: {
        password: string;
        allow_join_in_progress: boolean;
        current_internal_player: number;
        current_player: number;
        map_name: string;
        max_internal_player: number;
        max_player: number;
        mode: string;
        num_bot: number;
        settings?: Record<string, any> | null | undefined;
    } | null | undefined;
    match?: {
        namespace: string;
        status: string;
        deployment: string;
        region: string;
        created_at: string;
        party_attributes: Record<string, any>;
        channel: string;
        client_version: string;
        event: string;
        game_mode: string;
        match_id: string;
        queued_at: number;
        server_name: string;
        joinable?: boolean | null | undefined;
        party_id?: string | null | undefined;
        matching_allies?: {
            matching_parties?: {
                party_id: string;
                match_attributes?: {
                    first_ticket_created_at: number;
                } | null | undefined;
                party_attributes?: Record<string, any> | null | undefined;
                party_members?: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        sub_game_mode?: string[] | null | undefined;
    } | null | undefined;
}, {
    namespace: string;
    user_id: string;
    game_version: string;
    session_id: string;
    all_players: string[];
    created_at: string;
    joinable: boolean;
    players: string[];
    server: {
        namespace: string;
        params: string;
        status: string;
        allocation_id: string;
        cpu_limit: number;
        cpu_request: string;
        deployment: string;
        game_version: string;
        image_version: string;
        ip: string;
        is_override_game_version: boolean;
        last_update: string;
        mem_limit: number;
        mem_request: string;
        pod_name: string;
        port: number;
        provider: string;
        region: string;
        session_id: string;
        alternate_ips?: string[] | null | undefined;
        ports?: Record<string, number> | null | undefined;
        status_history?: {
            status: string;
            time_stamp: string;
        }[] | null | undefined;
    };
    session_type: string;
    spectators: string[];
    username: string;
    game_session_setting?: {
        password: string;
        allow_join_in_progress: boolean;
        current_internal_player: number;
        current_player: number;
        map_name: string;
        max_internal_player: number;
        max_player: number;
        mode: string;
        num_bot: number;
        settings?: Record<string, any> | null | undefined;
    } | null | undefined;
    match?: {
        namespace: string;
        status: string;
        deployment: string;
        region: string;
        created_at: string;
        party_attributes: Record<string, any>;
        channel: string;
        client_version: string;
        event: string;
        game_mode: string;
        match_id: string;
        queued_at: number;
        server_name: string;
        joinable?: boolean | null | undefined;
        party_id?: string | null | undefined;
        matching_allies?: {
            matching_parties?: {
                party_id: string;
                match_attributes?: {
                    first_ticket_created_at: number;
                } | null | undefined;
                party_attributes?: Record<string, any> | null | undefined;
                party_members?: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        sub_game_mode?: string[] | null | undefined;
    } | null | undefined;
}>;
interface AdminSessionResponse extends z.TypeOf<typeof AdminSessionResponse> {
}

declare const CountActiveSessionResponse: z.ZodObject<{
    custom_game: z.ZodNumber;
    matchmaking_game: z.ZodNumber;
    total: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    custom_game: number;
    matchmaking_game: number;
    total: number;
}, {
    custom_game: number;
    matchmaking_game: number;
    total: number;
}>;
interface CountActiveSessionResponse extends z.TypeOf<typeof CountActiveSessionResponse> {
}

declare const GetSessionHistoryDetailedResponseItemArray: z.ZodArray<z.ZodObject<{
    _id: z.ZodString;
    channel: z.ZodString;
    client_version: z.ZodString;
    created_at: z.ZodString;
    event_description: z.ZodString;
    event_name: z.ZodString;
    game_mode: z.ZodString;
    joinable: z.ZodBoolean;
    joining: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        Date: z.ZodString;
        State: z.ZodString;
        UserID: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        Date: string;
        UserID: string;
        State: string;
    }, {
        Date: string;
        UserID: string;
        State: string;
    }>, "many">>>;
    match_id: z.ZodString;
    matching_allies: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        matching_parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            match_attributes: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                first_ticket_created_at: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                first_ticket_created_at: number;
            }, {
                first_ticket_created_at: number;
            }>>>;
            party_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            party_id: z.ZodString;
            party_members: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                extra_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                user_id: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                user_id: string;
                extra_attributes?: Record<string, any> | null | undefined;
            }, {
                user_id: string;
                extra_attributes?: Record<string, any> | null | undefined;
            }>, "many">>>;
        }, "strip", z.ZodTypeAny, {
            party_id: string;
            match_attributes?: {
                first_ticket_created_at: number;
            } | null | undefined;
            party_attributes?: Record<string, any> | null | undefined;
            party_members?: {
                user_id: string;
                extra_attributes?: Record<string, any> | null | undefined;
            }[] | null | undefined;
        }, {
            party_id: string;
            match_attributes?: {
                first_ticket_created_at: number;
            } | null | undefined;
            party_attributes?: Record<string, any> | null | undefined;
            party_members?: {
                user_id: string;
                extra_attributes?: Record<string, any> | null | undefined;
            }[] | null | undefined;
        }>, "many">>>;
    }, "strip", z.ZodTypeAny, {
        matching_parties?: {
            party_id: string;
            match_attributes?: {
                first_ticket_created_at: number;
            } | null | undefined;
            party_attributes?: Record<string, any> | null | undefined;
            party_members?: {
                user_id: string;
                extra_attributes?: Record<string, any> | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
    }, {
        matching_parties?: {
            party_id: string;
            match_attributes?: {
                first_ticket_created_at: number;
            } | null | undefined;
            party_attributes?: Record<string, any> | null | undefined;
            party_members?: {
                user_id: string;
                extra_attributes?: Record<string, any> | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
    }>, "many">>>;
    namespace: z.ZodString;
    party_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        Action: z.ZodString;
        Date: z.ZodString;
        UserID: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        Action: string;
        Date: string;
        UserID: string;
    }, {
        Action: string;
        Date: string;
        UserID: string;
    }>, "many">>>;
    region: z.ZodString;
    removed_reason: z.ZodString;
    server_name: z.ZodString;
    session_type: z.ZodString;
    status: z.ZodString;
    user_id: z.ZodString;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    status: string;
    user_id: string;
    region: string;
    created_at: string;
    joinable: boolean;
    session_type: string;
    channel: string;
    client_version: string;
    game_mode: string;
    match_id: string;
    server_name: string;
    _id: string;
    event_description: string;
    event_name: string;
    removed_reason: string;
    players?: {
        Action: string;
        Date: string;
        UserID: string;
    }[] | null | undefined;
    party_id?: string | null | undefined;
    matching_allies?: {
        matching_parties?: {
            party_id: string;
            match_attributes?: {
                first_ticket_created_at: number;
            } | null | undefined;
            party_attributes?: Record<string, any> | null | undefined;
            party_members?: {
                user_id: string;
                extra_attributes?: Record<string, any> | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
    }[] | null | undefined;
    joining?: {
        Date: string;
        UserID: string;
        State: string;
    }[] | null | undefined;
}, {
    namespace: string;
    status: string;
    user_id: string;
    region: string;
    created_at: string;
    joinable: boolean;
    session_type: string;
    channel: string;
    client_version: string;
    game_mode: string;
    match_id: string;
    server_name: string;
    _id: string;
    event_description: string;
    event_name: string;
    removed_reason: string;
    players?: {
        Action: string;
        Date: string;
        UserID: string;
    }[] | null | undefined;
    party_id?: string | null | undefined;
    matching_allies?: {
        matching_parties?: {
            party_id: string;
            match_attributes?: {
                first_ticket_created_at: number;
            } | null | undefined;
            party_attributes?: Record<string, any> | null | undefined;
            party_members?: {
                user_id: string;
                extra_attributes?: Record<string, any> | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
    }[] | null | undefined;
    joining?: {
        Date: string;
        UserID: string;
        State: string;
    }[] | null | undefined;
}>, "many">;
interface GetSessionHistoryDetailedResponseItemArray extends z.TypeOf<typeof GetSessionHistoryDetailedResponseItemArray> {
}

declare const GetSessionHistorySearchResponseV2: z.ZodObject<{
    data: z.ZodArray<z.ZodObject<{
        _id: z.ZodString;
        created_at: z.ZodString;
        game_mode: z.ZodString;
        joinable: z.ZodBoolean;
        joining: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            Date: z.ZodString;
            State: z.ZodString;
            UserID: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            Date: string;
            UserID: string;
            State: string;
        }, {
            Date: string;
            UserID: string;
            State: string;
        }>, "many">>>;
        match_id: z.ZodString;
        namespace: z.ZodString;
        players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            Action: z.ZodString;
            Date: z.ZodString;
            UserID: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            Action: string;
            Date: string;
            UserID: string;
        }, {
            Action: string;
            Date: string;
            UserID: string;
        }>, "many">>>;
        removed_reason: z.ZodString;
        session_type: z.ZodString;
        status: z.ZodString;
        sub_game_mode: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        user_id: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        namespace: string;
        status: string;
        user_id: string;
        created_at: string;
        joinable: boolean;
        session_type: string;
        game_mode: string;
        match_id: string;
        _id: string;
        removed_reason: string;
        players?: {
            Action: string;
            Date: string;
            UserID: string;
        }[] | null | undefined;
        sub_game_mode?: string[] | null | undefined;
        joining?: {
            Date: string;
            UserID: string;
            State: string;
        }[] | null | undefined;
    }, {
        namespace: string;
        status: string;
        user_id: string;
        created_at: string;
        joinable: boolean;
        session_type: string;
        game_mode: string;
        match_id: string;
        _id: string;
        removed_reason: string;
        players?: {
            Action: string;
            Date: string;
            UserID: string;
        }[] | null | undefined;
        sub_game_mode?: string[] | null | undefined;
        joining?: {
            Date: string;
            UserID: string;
            State: string;
        }[] | null | undefined;
    }>, "many">;
    pagination: z.ZodObject<{
        first: z.ZodString;
        last: z.ZodString;
        next: z.ZodString;
        previous: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        next: string;
        previous: string;
        first: string;
        last: string;
    }, {
        next: string;
        previous: string;
        first: string;
        last: string;
    }>;
}, "strip", z.ZodTypeAny, {
    data: {
        namespace: string;
        status: string;
        user_id: string;
        created_at: string;
        joinable: boolean;
        session_type: string;
        game_mode: string;
        match_id: string;
        _id: string;
        removed_reason: string;
        players?: {
            Action: string;
            Date: string;
            UserID: string;
        }[] | null | undefined;
        sub_game_mode?: string[] | null | undefined;
        joining?: {
            Date: string;
            UserID: string;
            State: string;
        }[] | null | undefined;
    }[];
    pagination: {
        next: string;
        previous: string;
        first: string;
        last: string;
    };
}, {
    data: {
        namespace: string;
        status: string;
        user_id: string;
        created_at: string;
        joinable: boolean;
        session_type: string;
        game_mode: string;
        match_id: string;
        _id: string;
        removed_reason: string;
        players?: {
            Action: string;
            Date: string;
            UserID: string;
        }[] | null | undefined;
        sub_game_mode?: string[] | null | undefined;
        joining?: {
            Date: string;
            UserID: string;
            State: string;
        }[] | null | undefined;
    }[];
    pagination: {
        next: string;
        previous: string;
        first: string;
        last: string;
    };
}>;
interface GetSessionHistorySearchResponseV2 extends z.TypeOf<typeof GetSessionHistorySearchResponseV2> {
}

declare const SessionQueryResponse: z.ZodObject<{
    pagination: z.ZodObject<{
        next: z.ZodString;
        previous: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        next: string;
        previous: string;
    }, {
        next: string;
        previous: string;
    }>;
    sessions: z.ZodArray<z.ZodObject<{
        all_players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        created_at: z.ZodString;
        game_session_setting: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            allow_join_in_progress: z.ZodBoolean;
            current_internal_player: z.ZodNumber;
            current_player: z.ZodNumber;
            map_name: z.ZodString;
            max_internal_player: z.ZodNumber;
            max_player: z.ZodNumber;
            mode: z.ZodString;
            num_bot: z.ZodNumber;
            password: z.ZodString;
            settings: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        }, "strip", z.ZodTypeAny, {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        }, {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        }>>>;
        game_version: z.ZodString;
        joinable: z.ZodBoolean;
        match: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            channel: z.ZodString;
            client_version: z.ZodString;
            created_at: z.ZodString;
            deployment: z.ZodString;
            event: z.ZodString;
            game_mode: z.ZodString;
            joinable: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            match_id: z.ZodString;
            matching_allies: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                matching_parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                    match_attributes: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                        first_ticket_created_at: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        first_ticket_created_at: number;
                    }, {
                        first_ticket_created_at: number;
                    }>>>;
                    party_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                    party_id: z.ZodString;
                    party_members: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                        extra_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                        user_id: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }, {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }>, "many">>>;
                }, "strip", z.ZodTypeAny, {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }, {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }>, "many">>>;
            }, "strip", z.ZodTypeAny, {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }, {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }>, "many">>>;
            namespace: z.ZodString;
            party_attributes: z.ZodRecord<z.ZodString, z.ZodAny>;
            party_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            queued_at: z.ZodNumber;
            region: z.ZodString;
            server_name: z.ZodString;
            status: z.ZodString;
            sub_game_mode: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strip", z.ZodTypeAny, {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        }, {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        }>>>;
        namespace: z.ZodString;
        players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        server: z.ZodObject<{
            allocation_id: z.ZodString;
            alternate_ips: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            cpu_limit: z.ZodNumber;
            cpu_request: z.ZodString;
            deployment: z.ZodString;
            game_version: z.ZodString;
            image_version: z.ZodString;
            ip: z.ZodString;
            is_override_game_version: z.ZodBoolean;
            last_update: z.ZodString;
            mem_limit: z.ZodNumber;
            mem_request: z.ZodString;
            namespace: z.ZodString;
            params: z.ZodString;
            pod_name: z.ZodString;
            port: z.ZodNumber;
            ports: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
            provider: z.ZodString;
            region: z.ZodString;
            session_id: z.ZodString;
            status: z.ZodString;
            status_history: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                status: z.ZodString;
                time_stamp: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                status: string;
                time_stamp: string;
            }, {
                status: string;
                time_stamp: string;
            }>, "many">>>;
        }, "strip", z.ZodTypeAny, {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        }, {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        }>;
        session_id: z.ZodString;
        session_type: z.ZodString;
        spectators: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        user_id: z.ZodString;
        username: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        namespace: string;
        user_id: string;
        game_version: string;
        session_id: string;
        created_at: string;
        joinable: boolean;
        server: {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        };
        session_type: string;
        username: string;
        all_players?: string[] | null | undefined;
        game_session_setting?: {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        } | null | undefined;
        players?: string[] | null | undefined;
        spectators?: string[] | null | undefined;
        match?: {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        } | null | undefined;
    }, {
        namespace: string;
        user_id: string;
        game_version: string;
        session_id: string;
        created_at: string;
        joinable: boolean;
        server: {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        };
        session_type: string;
        username: string;
        all_players?: string[] | null | undefined;
        game_session_setting?: {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        } | null | undefined;
        players?: string[] | null | undefined;
        spectators?: string[] | null | undefined;
        match?: {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        } | null | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    pagination: {
        next: string;
        previous: string;
    };
    sessions: {
        namespace: string;
        user_id: string;
        game_version: string;
        session_id: string;
        created_at: string;
        joinable: boolean;
        server: {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        };
        session_type: string;
        username: string;
        all_players?: string[] | null | undefined;
        game_session_setting?: {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        } | null | undefined;
        players?: string[] | null | undefined;
        spectators?: string[] | null | undefined;
        match?: {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        } | null | undefined;
    }[];
}, {
    pagination: {
        next: string;
        previous: string;
    };
    sessions: {
        namespace: string;
        user_id: string;
        game_version: string;
        session_id: string;
        created_at: string;
        joinable: boolean;
        server: {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        };
        session_type: string;
        username: string;
        all_players?: string[] | null | undefined;
        game_session_setting?: {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        } | null | undefined;
        players?: string[] | null | undefined;
        spectators?: string[] | null | undefined;
        match?: {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        } | null | undefined;
    }[];
}>;
interface SessionQueryResponse extends z.TypeOf<typeof SessionQueryResponse> {
}

declare const AddPlayerRequest: z.ZodObject<{
    as_spectator: z.ZodBoolean;
    user_id: z.ZodString;
}, "strip", z.ZodTypeAny, {
    user_id: string;
    as_spectator: boolean;
}, {
    user_id: string;
    as_spectator: boolean;
}>;
interface AddPlayerRequest extends z.TypeOf<typeof AddPlayerRequest> {
}

declare const AddPlayerResponse: z.ZodObject<{
    status: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    status: boolean;
}, {
    status: boolean;
}>;
interface AddPlayerResponse extends z.TypeOf<typeof AddPlayerResponse> {
}

declare const CreateSessionRequest: z.ZodObject<{
    game_session_setting: z.ZodObject<{
        allow_join_in_progress: z.ZodBoolean;
        current_internal_player: z.ZodNumber;
        current_player: z.ZodNumber;
        map_name: z.ZodString;
        max_internal_player: z.ZodNumber;
        max_player: z.ZodNumber;
        mode: z.ZodString;
        num_bot: z.ZodNumber;
        password: z.ZodString;
        settings: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    }, "strip", z.ZodTypeAny, {
        password: string;
        allow_join_in_progress: boolean;
        current_internal_player: number;
        current_player: number;
        map_name: string;
        max_internal_player: number;
        max_player: number;
        mode: string;
        num_bot: number;
        settings?: Record<string, any> | null | undefined;
    }, {
        password: string;
        allow_join_in_progress: boolean;
        current_internal_player: number;
        current_player: number;
        map_name: string;
        max_internal_player: number;
        max_player: number;
        mode: string;
        num_bot: number;
        settings?: Record<string, any> | null | undefined;
    }>;
    game_version: z.ZodString;
    namespace: z.ZodString;
    session_type: z.ZodString;
    username: z.ZodString;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    game_version: string;
    game_session_setting: {
        password: string;
        allow_join_in_progress: boolean;
        current_internal_player: number;
        current_player: number;
        map_name: string;
        max_internal_player: number;
        max_player: number;
        mode: string;
        num_bot: number;
        settings?: Record<string, any> | null | undefined;
    };
    session_type: string;
    username: string;
}, {
    namespace: string;
    game_version: string;
    game_session_setting: {
        password: string;
        allow_join_in_progress: boolean;
        current_internal_player: number;
        current_player: number;
        map_name: string;
        max_internal_player: number;
        max_player: number;
        mode: string;
        num_bot: number;
        settings?: Record<string, any> | null | undefined;
    };
    session_type: string;
    username: string;
}>;
interface CreateSessionRequest extends z.TypeOf<typeof CreateSessionRequest> {
}

declare const JoinGameSessionRequest: z.ZodObject<{
    password: z.ZodString;
}, "strip", z.ZodTypeAny, {
    password: string;
}, {
    password: string;
}>;
interface JoinGameSessionRequest extends z.TypeOf<typeof JoinGameSessionRequest> {
}

declare const RecentPlayerQueryResponse: z.ZodObject<{
    data: z.ZodArray<z.ZodObject<{
        created_at: z.ZodString;
        namespace: z.ZodString;
        other_display_name: z.ZodString;
        other_id: z.ZodString;
        updated_at: z.ZodString;
        user_id: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        namespace: string;
        user_id: string;
        created_at: string;
        other_display_name: string;
        other_id: string;
        updated_at: string;
    }, {
        namespace: string;
        user_id: string;
        created_at: string;
        other_display_name: string;
        other_id: string;
        updated_at: string;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    data: {
        namespace: string;
        user_id: string;
        created_at: string;
        other_display_name: string;
        other_id: string;
        updated_at: string;
    }[];
}, {
    data: {
        namespace: string;
        user_id: string;
        created_at: string;
        other_display_name: string;
        other_id: string;
        updated_at: string;
    }[];
}>;
interface RecentPlayerQueryResponse extends z.TypeOf<typeof RecentPlayerQueryResponse> {
}

declare const SessionByUserIDsResponse: z.ZodObject<{
    data: z.ZodArray<z.ZodObject<{
        all_players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        created_at: z.ZodString;
        game_session_setting: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            allow_join_in_progress: z.ZodBoolean;
            current_internal_player: z.ZodNumber;
            current_player: z.ZodNumber;
            map_name: z.ZodString;
            max_internal_player: z.ZodNumber;
            max_player: z.ZodNumber;
            mode: z.ZodString;
            num_bot: z.ZodNumber;
            password: z.ZodString;
            settings: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        }, "strip", z.ZodTypeAny, {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        }, {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        }>>>;
        game_version: z.ZodString;
        joinable: z.ZodBoolean;
        match: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            channel: z.ZodString;
            client_version: z.ZodString;
            created_at: z.ZodString;
            deployment: z.ZodString;
            event: z.ZodString;
            game_mode: z.ZodString;
            joinable: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            match_id: z.ZodString;
            matching_allies: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                matching_parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                    match_attributes: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                        first_ticket_created_at: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        first_ticket_created_at: number;
                    }, {
                        first_ticket_created_at: number;
                    }>>>;
                    party_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                    party_id: z.ZodString;
                    party_members: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                        extra_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                        user_id: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }, {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }>, "many">>>;
                }, "strip", z.ZodTypeAny, {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }, {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }>, "many">>>;
            }, "strip", z.ZodTypeAny, {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }, {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }>, "many">>>;
            namespace: z.ZodString;
            party_attributes: z.ZodRecord<z.ZodString, z.ZodAny>;
            party_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            queued_at: z.ZodNumber;
            region: z.ZodString;
            server_name: z.ZodString;
            status: z.ZodString;
            sub_game_mode: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strip", z.ZodTypeAny, {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        }, {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        }>>>;
        namespace: z.ZodString;
        players: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        server: z.ZodObject<{
            allocation_id: z.ZodString;
            alternate_ips: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            cpu_limit: z.ZodNumber;
            cpu_request: z.ZodString;
            deployment: z.ZodString;
            game_version: z.ZodString;
            image_version: z.ZodString;
            ip: z.ZodString;
            is_override_game_version: z.ZodBoolean;
            last_update: z.ZodString;
            mem_limit: z.ZodNumber;
            mem_request: z.ZodString;
            namespace: z.ZodString;
            params: z.ZodString;
            pod_name: z.ZodString;
            port: z.ZodNumber;
            ports: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
            provider: z.ZodString;
            region: z.ZodString;
            session_id: z.ZodString;
            status: z.ZodString;
            status_history: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                status: z.ZodString;
                time_stamp: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                status: string;
                time_stamp: string;
            }, {
                status: string;
                time_stamp: string;
            }>, "many">>>;
        }, "strip", z.ZodTypeAny, {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        }, {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        }>;
        session_id: z.ZodString;
        session_type: z.ZodString;
        spectators: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        user_id: z.ZodString;
        username: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        namespace: string;
        user_id: string;
        game_version: string;
        session_id: string;
        created_at: string;
        joinable: boolean;
        server: {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        };
        session_type: string;
        username: string;
        all_players?: string[] | null | undefined;
        game_session_setting?: {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        } | null | undefined;
        players?: string[] | null | undefined;
        spectators?: string[] | null | undefined;
        match?: {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        } | null | undefined;
    }, {
        namespace: string;
        user_id: string;
        game_version: string;
        session_id: string;
        created_at: string;
        joinable: boolean;
        server: {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        };
        session_type: string;
        username: string;
        all_players?: string[] | null | undefined;
        game_session_setting?: {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        } | null | undefined;
        players?: string[] | null | undefined;
        spectators?: string[] | null | undefined;
        match?: {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        } | null | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    data: {
        namespace: string;
        user_id: string;
        game_version: string;
        session_id: string;
        created_at: string;
        joinable: boolean;
        server: {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        };
        session_type: string;
        username: string;
        all_players?: string[] | null | undefined;
        game_session_setting?: {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        } | null | undefined;
        players?: string[] | null | undefined;
        spectators?: string[] | null | undefined;
        match?: {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        } | null | undefined;
    }[];
}, {
    data: {
        namespace: string;
        user_id: string;
        game_version: string;
        session_id: string;
        created_at: string;
        joinable: boolean;
        server: {
            namespace: string;
            params: string;
            status: string;
            allocation_id: string;
            cpu_limit: number;
            cpu_request: string;
            deployment: string;
            game_version: string;
            image_version: string;
            ip: string;
            is_override_game_version: boolean;
            last_update: string;
            mem_limit: number;
            mem_request: string;
            pod_name: string;
            port: number;
            provider: string;
            region: string;
            session_id: string;
            alternate_ips?: string[] | null | undefined;
            ports?: Record<string, number> | null | undefined;
            status_history?: {
                status: string;
                time_stamp: string;
            }[] | null | undefined;
        };
        session_type: string;
        username: string;
        all_players?: string[] | null | undefined;
        game_session_setting?: {
            password: string;
            allow_join_in_progress: boolean;
            current_internal_player: number;
            current_player: number;
            map_name: string;
            max_internal_player: number;
            max_player: number;
            mode: string;
            num_bot: number;
            settings?: Record<string, any> | null | undefined;
        } | null | undefined;
        players?: string[] | null | undefined;
        spectators?: string[] | null | undefined;
        match?: {
            namespace: string;
            status: string;
            deployment: string;
            region: string;
            created_at: string;
            party_attributes: Record<string, any>;
            channel: string;
            client_version: string;
            event: string;
            game_mode: string;
            match_id: string;
            queued_at: number;
            server_name: string;
            joinable?: boolean | null | undefined;
            party_id?: string | null | undefined;
            matching_allies?: {
                matching_parties?: {
                    party_id: string;
                    match_attributes?: {
                        first_ticket_created_at: number;
                    } | null | undefined;
                    party_attributes?: Record<string, any> | null | undefined;
                    party_members?: {
                        user_id: string;
                        extra_attributes?: Record<string, any> | null | undefined;
                    }[] | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
            sub_game_mode?: string[] | null | undefined;
        } | null | undefined;
    }[];
}>;
interface SessionByUserIDsResponse extends z.TypeOf<typeof SessionByUserIDsResponse> {
}

declare const SessionResponse: z.ZodObject<{
    all_players: z.ZodArray<z.ZodString, "many">;
    created_at: z.ZodString;
    game_session_setting: z.ZodObject<{
        allow_join_in_progress: z.ZodBoolean;
        current_internal_player: z.ZodNumber;
        current_player: z.ZodNumber;
        map_name: z.ZodString;
        max_internal_player: z.ZodNumber;
        max_player: z.ZodNumber;
        mode: z.ZodString;
        num_bot: z.ZodNumber;
        password: z.ZodString;
        settings: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    }, "strip", z.ZodTypeAny, {
        password: string;
        allow_join_in_progress: boolean;
        current_internal_player: number;
        current_player: number;
        map_name: string;
        max_internal_player: number;
        max_player: number;
        mode: string;
        num_bot: number;
        settings?: Record<string, any> | null | undefined;
    }, {
        password: string;
        allow_join_in_progress: boolean;
        current_internal_player: number;
        current_player: number;
        map_name: string;
        max_internal_player: number;
        max_player: number;
        mode: string;
        num_bot: number;
        settings?: Record<string, any> | null | undefined;
    }>;
    game_version: z.ZodString;
    joinable: z.ZodBoolean;
    match: z.ZodObject<{
        channel: z.ZodString;
        client_version: z.ZodString;
        created_at: z.ZodString;
        deployment: z.ZodString;
        event: z.ZodString;
        game_mode: z.ZodString;
        joinable: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        match_id: z.ZodString;
        matching_allies: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            matching_parties: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                match_attributes: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    first_ticket_created_at: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    first_ticket_created_at: number;
                }, {
                    first_ticket_created_at: number;
                }>>>;
                party_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                party_id: z.ZodString;
                party_members: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
                    extra_attributes: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                    user_id: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }, {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }>, "many">>>;
            }, "strip", z.ZodTypeAny, {
                party_id: string;
                match_attributes?: {
                    first_ticket_created_at: number;
                } | null | undefined;
                party_attributes?: Record<string, any> | null | undefined;
                party_members?: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[] | null | undefined;
            }, {
                party_id: string;
                match_attributes?: {
                    first_ticket_created_at: number;
                } | null | undefined;
                party_attributes?: Record<string, any> | null | undefined;
                party_members?: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[] | null | undefined;
            }>, "many">>>;
        }, "strip", z.ZodTypeAny, {
            matching_parties?: {
                party_id: string;
                match_attributes?: {
                    first_ticket_created_at: number;
                } | null | undefined;
                party_attributes?: Record<string, any> | null | undefined;
                party_members?: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
        }, {
            matching_parties?: {
                party_id: string;
                match_attributes?: {
                    first_ticket_created_at: number;
                } | null | undefined;
                party_attributes?: Record<string, any> | null | undefined;
                party_members?: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
        }>, "many">>>;
        namespace: z.ZodString;
        party_attributes: z.ZodRecord<z.ZodString, z.ZodAny>;
        party_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        queued_at: z.ZodNumber;
        region: z.ZodString;
        server_name: z.ZodString;
        status: z.ZodString;
        sub_game_mode: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    }, "strip", z.ZodTypeAny, {
        namespace: string;
        status: string;
        deployment: string;
        region: string;
        created_at: string;
        party_attributes: Record<string, any>;
        channel: string;
        client_version: string;
        event: string;
        game_mode: string;
        match_id: string;
        queued_at: number;
        server_name: string;
        joinable?: boolean | null | undefined;
        party_id?: string | null | undefined;
        matching_allies?: {
            matching_parties?: {
                party_id: string;
                match_attributes?: {
                    first_ticket_created_at: number;
                } | null | undefined;
                party_attributes?: Record<string, any> | null | undefined;
                party_members?: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        sub_game_mode?: string[] | null | undefined;
    }, {
        namespace: string;
        status: string;
        deployment: string;
        region: string;
        created_at: string;
        party_attributes: Record<string, any>;
        channel: string;
        client_version: string;
        event: string;
        game_mode: string;
        match_id: string;
        queued_at: number;
        server_name: string;
        joinable?: boolean | null | undefined;
        party_id?: string | null | undefined;
        matching_allies?: {
            matching_parties?: {
                party_id: string;
                match_attributes?: {
                    first_ticket_created_at: number;
                } | null | undefined;
                party_attributes?: Record<string, any> | null | undefined;
                party_members?: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        sub_game_mode?: string[] | null | undefined;
    }>;
    namespace: z.ZodString;
    players: z.ZodArray<z.ZodString, "many">;
    server: z.ZodObject<{
        allocation_id: z.ZodString;
        alternate_ips: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        cpu_limit: z.ZodNumber;
        cpu_request: z.ZodString;
        deployment: z.ZodString;
        game_version: z.ZodString;
        image_version: z.ZodString;
        ip: z.ZodString;
        is_override_game_version: z.ZodBoolean;
        last_update: z.ZodString;
        mem_limit: z.ZodNumber;
        mem_request: z.ZodString;
        namespace: z.ZodString;
        params: z.ZodString;
        pod_name: z.ZodString;
        port: z.ZodNumber;
        ports: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodNumber>>>;
        provider: z.ZodString;
        region: z.ZodString;
        session_id: z.ZodString;
        status: z.ZodString;
        status_history: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            status: z.ZodString;
            time_stamp: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            status: string;
            time_stamp: string;
        }, {
            status: string;
            time_stamp: string;
        }>, "many">>>;
    }, "strip", z.ZodTypeAny, {
        namespace: string;
        params: string;
        status: string;
        allocation_id: string;
        cpu_limit: number;
        cpu_request: string;
        deployment: string;
        game_version: string;
        image_version: string;
        ip: string;
        is_override_game_version: boolean;
        last_update: string;
        mem_limit: number;
        mem_request: string;
        pod_name: string;
        port: number;
        provider: string;
        region: string;
        session_id: string;
        alternate_ips?: string[] | null | undefined;
        ports?: Record<string, number> | null | undefined;
        status_history?: {
            status: string;
            time_stamp: string;
        }[] | null | undefined;
    }, {
        namespace: string;
        params: string;
        status: string;
        allocation_id: string;
        cpu_limit: number;
        cpu_request: string;
        deployment: string;
        game_version: string;
        image_version: string;
        ip: string;
        is_override_game_version: boolean;
        last_update: string;
        mem_limit: number;
        mem_request: string;
        pod_name: string;
        port: number;
        provider: string;
        region: string;
        session_id: string;
        alternate_ips?: string[] | null | undefined;
        ports?: Record<string, number> | null | undefined;
        status_history?: {
            status: string;
            time_stamp: string;
        }[] | null | undefined;
    }>;
    session_id: z.ZodString;
    session_type: z.ZodString;
    spectators: z.ZodArray<z.ZodString, "many">;
    user_id: z.ZodString;
    username: z.ZodString;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    user_id: string;
    game_version: string;
    session_id: string;
    all_players: string[];
    created_at: string;
    game_session_setting: {
        password: string;
        allow_join_in_progress: boolean;
        current_internal_player: number;
        current_player: number;
        map_name: string;
        max_internal_player: number;
        max_player: number;
        mode: string;
        num_bot: number;
        settings?: Record<string, any> | null | undefined;
    };
    joinable: boolean;
    players: string[];
    server: {
        namespace: string;
        params: string;
        status: string;
        allocation_id: string;
        cpu_limit: number;
        cpu_request: string;
        deployment: string;
        game_version: string;
        image_version: string;
        ip: string;
        is_override_game_version: boolean;
        last_update: string;
        mem_limit: number;
        mem_request: string;
        pod_name: string;
        port: number;
        provider: string;
        region: string;
        session_id: string;
        alternate_ips?: string[] | null | undefined;
        ports?: Record<string, number> | null | undefined;
        status_history?: {
            status: string;
            time_stamp: string;
        }[] | null | undefined;
    };
    session_type: string;
    spectators: string[];
    match: {
        namespace: string;
        status: string;
        deployment: string;
        region: string;
        created_at: string;
        party_attributes: Record<string, any>;
        channel: string;
        client_version: string;
        event: string;
        game_mode: string;
        match_id: string;
        queued_at: number;
        server_name: string;
        joinable?: boolean | null | undefined;
        party_id?: string | null | undefined;
        matching_allies?: {
            matching_parties?: {
                party_id: string;
                match_attributes?: {
                    first_ticket_created_at: number;
                } | null | undefined;
                party_attributes?: Record<string, any> | null | undefined;
                party_members?: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        sub_game_mode?: string[] | null | undefined;
    };
    username: string;
}, {
    namespace: string;
    user_id: string;
    game_version: string;
    session_id: string;
    all_players: string[];
    created_at: string;
    game_session_setting: {
        password: string;
        allow_join_in_progress: boolean;
        current_internal_player: number;
        current_player: number;
        map_name: string;
        max_internal_player: number;
        max_player: number;
        mode: string;
        num_bot: number;
        settings?: Record<string, any> | null | undefined;
    };
    joinable: boolean;
    players: string[];
    server: {
        namespace: string;
        params: string;
        status: string;
        allocation_id: string;
        cpu_limit: number;
        cpu_request: string;
        deployment: string;
        game_version: string;
        image_version: string;
        ip: string;
        is_override_game_version: boolean;
        last_update: string;
        mem_limit: number;
        mem_request: string;
        pod_name: string;
        port: number;
        provider: string;
        region: string;
        session_id: string;
        alternate_ips?: string[] | null | undefined;
        ports?: Record<string, number> | null | undefined;
        status_history?: {
            status: string;
            time_stamp: string;
        }[] | null | undefined;
    };
    session_type: string;
    spectators: string[];
    match: {
        namespace: string;
        status: string;
        deployment: string;
        region: string;
        created_at: string;
        party_attributes: Record<string, any>;
        channel: string;
        client_version: string;
        event: string;
        game_mode: string;
        match_id: string;
        queued_at: number;
        server_name: string;
        joinable?: boolean | null | undefined;
        party_id?: string | null | undefined;
        matching_allies?: {
            matching_parties?: {
                party_id: string;
                match_attributes?: {
                    first_ticket_created_at: number;
                } | null | undefined;
                party_attributes?: Record<string, any> | null | undefined;
                party_members?: {
                    user_id: string;
                    extra_attributes?: Record<string, any> | null | undefined;
                }[] | null | undefined;
            }[] | null | undefined;
        }[] | null | undefined;
        sub_game_mode?: string[] | null | undefined;
    };
    username: string;
}>;
interface SessionResponse extends z.TypeOf<typeof SessionResponse> {
}

declare const UpdateSessionRequest: z.ZodObject<{
    game_max_player: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    game_max_player: number;
}, {
    game_max_player: number;
}>;
interface UpdateSessionRequest extends z.TypeOf<typeof UpdateSessionRequest> {
}

declare const UpdateSettingsRequest: z.ZodAny;
interface UpdateSettingsRequest extends z.TypeOf<typeof UpdateSettingsRequest> {
}

export { AdminSessionResponse as A, CountActiveSessionResponse as C, GetSessionHistorySearchResponseV2 as G, JoinGameSessionRequest as J, RecentPlayerQueryResponse as R, SessionQueryResponse as S, UpdateSessionRequest as U, ActiveCustomGameResponse as a, ActiveMatchmakingGameResponse as b, GetSessionHistoryDetailedResponseItemArray as c, CreateSessionRequest as d, SessionResponse as e, SessionByUserIDsResponse as f, AddPlayerRequest as g, AddPlayerResponse as h, UpdateSettingsRequest as i };
