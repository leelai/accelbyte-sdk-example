{"version":3,"sources":["../../../src/input-validation/validateImageName.ts"],"names":[],"mappings":";;;;;;;AAaa,MAAA,0BAAA,GAA6B,EAAE,IAAK,CAAA;AAAA,EAC/C,0BAA0B,IAAK,CAAA,gBAAA;AAAA,EAC/B,0BAA0B,IAAK,CAAA,WAAA;AACjC,CAAC,EAAA;AAOY,MAAA,sBAAA,GAAyB,CAAC,KAAe,EAAA,KAAA,EAAe,EAAE,YAAe,GAAA,KAAA,EAAoC,GAAA,EAAO,KAAA;AAC/H,EAAA,IAAI,OAAQ,CAAA,KAAK,CAAG,EAAA,OAAO,uBAAuB,IAAK,CAAA,KAAA,CAAA;AAEvD,EAAA,IAAI,gBAAgB,CAAC,OAAA,CAAQ,KAAK,CAAE,CAAA,IAAA,CAAK,KAAK,CAAG,EAAA;AAC/C,IAAA,OAAO,2BAA2B,IAAK,CAAA,gBAAA,CAAA;AAAA,GACzC;AAEA,EAAA,IAAI,CAAC,YAAgB,IAAA,CAAC,OAAQ,CAAA,KAAA,EAAO,KAAK,CAAG,EAAA;AAC3C,IAAA,OAAO,2BAA2B,IAAK,CAAA,gBAAA,CAAA;AAAA,GACzC;AAEA,EAAO,OAAA,IAAA,CAAA;AACT","file":"validateImageName.js","sourcesContent":["/*\n * Copyright (c) 2022-2023 AccelByte Inc. All Rights Reserved\n * This is licensed software from AccelByte Inc, for limitations\n * and restrictions contact your company contract manager.\n */\n\nimport isEmpty from 'validator/lib/isEmpty.js'\nimport matches from 'validator/lib/matches.js'\nimport XRegExp from 'xregexp'\nimport { z } from 'zod'\nimport { CommonValidationErrorType } from './constant/errorType'\nimport { ValidateAlphaErrorType } from './validateAlpha'\n\nexport const ValidateImageNameErrorType = z.enum([\n  CommonValidationErrorType.enum.nameIsNotAllowed,\n  CommonValidationErrorType.enum.alreadyUsed\n])\nexport type ValidateImageNameErrorType = z.infer<typeof ValidateImageNameErrorType>\n\nexport interface ValidateNameRegexOptions {\n  allowUnicode?: boolean\n}\n\nexport const validateImageNameRegex = (value: string, regex: string, { allowUnicode = false }: ValidateNameRegexOptions = {}) => {\n  if (isEmpty(value)) return ValidateAlphaErrorType.enum.empty\n\n  if (allowUnicode && !XRegExp(regex).test(value)) {\n    return ValidateImageNameErrorType.enum.nameIsNotAllowed\n  }\n\n  if (!allowUnicode && !matches(value, regex)) {\n    return ValidateImageNameErrorType.enum.nameIsNotAllowed\n  }\n\n  return null\n}\n"]}