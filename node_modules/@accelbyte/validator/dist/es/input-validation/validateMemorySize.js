import isEmpty from 'validator/lib/isEmpty.js';
import matches from 'validator/lib/matches.js';
import { z } from 'zod';
import { CommonValidationErrorType } from './constant/errorType';
import { ValidateLengthErrorType, validateLength } from './validateLength';

const ValidateMemorySizeErrorType = z.enum([...ValidateLengthErrorType.options, CommonValidationErrorType.enum.invalidFormat]);
const validateMemorySize = (value, { isRequired = true } = {}) => {
  const MAX_LENGTH = 9;
  const REGEX = "^[0-9]+$";
  if (isEmpty(value)) {
    if (!isRequired) {
      return null;
    }
    return ValidateMemorySizeErrorType.enum.empty;
  }
  if (!matches(value, REGEX)) {
    return ValidateMemorySizeErrorType.enum.invalidFormat;
  }
  return validateLength(value, { max: MAX_LENGTH });
};

export { ValidateMemorySizeErrorType, validateMemorySize };
//# sourceMappingURL=validateMemorySize.js.map
//# sourceMappingURL=validateMemorySize.js.map