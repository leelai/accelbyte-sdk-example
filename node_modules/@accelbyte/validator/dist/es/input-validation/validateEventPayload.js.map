{"version":3,"sources":["../../../src/input-validation/validateEventPayload.ts"],"names":[],"mappings":";;;;;;AAYa,MAAA,6BAAA,GAAgC,CAAE,CAAA,IAAA,CAAK,CAAC,GAAG,wBAAwB,OAAS,EAAA,yBAAA,CAA0B,IAAK,CAAA,aAAa,CAAC,EAAA;AAQzH,MAAA,oBAAA,GAAuB,CAAC,KAAA,EAAe,EAAE,SAAA,GAAY,KAAK,UAAa,GAAA,IAAA,EAAsC,GAAA,EAAO,KAAA;AAC/H,EAAA,MAAM,KAAQ,GAAA,qDAAA,CAAA;AACd,EAAI,IAAA,OAAA,CAAQ,KAAK,CAAG,EAAA;AAClB,IAAA,IAAI,CAAC,UAAY,EAAA;AACf,MAAO,OAAA,IAAA,CAAA;AAAA,KACT;AACA,IAAA,OAAO,8BAA8B,IAAK,CAAA,KAAA,CAAA;AAAA,GAC5C;AACA,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,KAAK,CAAG,EAAA;AAC1B,IAAA,OAAO,8BAA8B,IAAK,CAAA,aAAA,CAAA;AAAA,GAC5C;AACA,EAAA,OAAO,cAAe,CAAA,KAAA,EAAO,EAAE,GAAA,EAAK,WAAW,CAAA,CAAA;AACjD","file":"validateEventPayload.js","sourcesContent":["/*\n * Copyright (c) 2022-2023 AccelByte Inc. All Rights Reserved\n * This is licensed software from AccelByte Inc, for limitations\n * and restrictions contact your company contract manager.\n */\n\nimport isEmpty from 'validator/lib/isEmpty.js'\nimport matches from 'validator/lib/matches.js'\nimport { z } from 'zod'\nimport { CommonValidationErrorType } from './constant/errorType'\nimport { validateLength, ValidateLengthErrorType } from './validateLength'\n\nexport const ValidateEventPayloadErrorType = z.enum([...ValidateLengthErrorType.options, CommonValidationErrorType.enum.invalidFormat])\nexport type ValidateEventPayloadErrorType = z.infer<typeof ValidateEventPayloadErrorType>\n\nexport interface ValidateEventPayloadOptions {\n  maxLength?: number\n  isRequired?: boolean\n}\n\nexport const validateEventPayload = (value: string, { maxLength = 255, isRequired = true }: ValidateEventPayloadOptions = {}) => {\n  const REGEX = '^\\\\b((?=[\\\\w])[\\\\w]+(\\\\.[\\\\w]+)*:)+[\\\\w]{1,255}\\\\b$'\n  if (isEmpty(value)) {\n    if (!isRequired) {\n      return null\n    }\n    return ValidateEventPayloadErrorType.enum.empty\n  }\n  if (!matches(value, REGEX)) {\n    return ValidateEventPayloadErrorType.enum.invalidFormat\n  }\n  return validateLength(value, { max: maxLength })\n}\n"]}