import { RoleWithManager, NamespaceRole, RolePermission, NamespaceRoleWithPermission } from '../models/role.js';

declare function getAdminRoles(roles: RoleWithManager[]): string[];
declare function getAdminNamespaceRoles(namespaceRoles: NamespaceRole[], roles: RoleWithManager[]): NamespaceRole[];
declare function getRoleIdsByNamespace(namespaceRoles: NamespaceRole[], namespace?: string): string[];
declare function getCurrentUserRoles(roles: RoleWithManager[], userRoleIds: string[]): RoleWithManager[];
declare function getCurrentUserPermissions(roles: RoleWithManager[]): RolePermission[];
declare function getCurrentUserNamespacedPermissions(namespaceRoleWithPermission: NamespaceRoleWithPermission[]): RolePermission[];
declare function isUserHasAdminRole(userNamespaceRoles: string[], adminRoles: string[]): boolean;
declare const replacePermissionNamespace: (permission: RolePermission, namespace: string) => RolePermission;

export { getAdminNamespaceRoles, getAdminRoles, getCurrentUserNamespacedPermissions, getCurrentUserPermissions, getCurrentUserRoles, getRoleIdsByNamespace, isUserHasAdminRole, replacePermissionNamespace };
