import isEmpty from 'validator/lib/isEmpty.js';
import { z } from 'zod';
import { CommonValidationErrorType } from './constant/errorType';

const ValidateJSONErrorType = z.enum([CommonValidationErrorType.enum.empty, CommonValidationErrorType.enum.invalidFormat]);
const validateJSON = (value, { isRequired = true, isObject = true } = {}) => {
  if (isEmpty(value)) {
    if (!isRequired) {
      return null;
    }
    return ValidateJSONErrorType.enum.empty;
  }
  try {
    const parsedJSON = JSON.parse(value);
    if (isObject && typeof parsedJSON !== "object") {
      return ValidateJSONErrorType.enum.invalidFormat;
    }
    return null;
  } catch (e) {
    return ValidateJSONErrorType.enum.invalidFormat;
  }
};

export { ValidateJSONErrorType, validateJSON };
//# sourceMappingURL=validateJSON.js.map
//# sourceMappingURL=validateJSON.js.map