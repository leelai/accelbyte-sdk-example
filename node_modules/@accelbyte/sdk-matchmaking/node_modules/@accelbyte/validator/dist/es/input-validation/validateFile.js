import isEmpty from 'validator/lib/isEmpty.js';
import { z } from 'zod';
import { CommonValidationErrorType } from './constant/errorType';

const ValidateFileErrorType = z.enum([
  CommonValidationErrorType.enum.empty,
  CommonValidationErrorType.enum.invalidFileExtensions,
  CommonValidationErrorType.enum.exceedMaximumFileSize
]);
const validateFile = (file, { isRequired = true, acceptedFileExtensions, maxFileSize } = {}) => {
  const fileExtension = file ? `.${file.name.split(".").pop()}` : "";
  const fileSize = file ? file.size : 0;
  if (isRequired && !file) {
    return ValidateFileErrorType.enum.empty;
  }
  if (acceptedFileExtensions && (isEmpty(fileExtension) || acceptedFileExtensions.indexOf(fileExtension) === -1)) {
    return ValidateFileErrorType.enum.invalidFileExtensions;
  }
  if (maxFileSize && fileSize > maxFileSize) {
    return ValidateFileErrorType.enum.exceedMaximumFileSize;
  }
  return null;
};

export { ValidateFileErrorType, validateFile };
//# sourceMappingURL=validateFile.js.map
//# sourceMappingURL=validateFile.js.map