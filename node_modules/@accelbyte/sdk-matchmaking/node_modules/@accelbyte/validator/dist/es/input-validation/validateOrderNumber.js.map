{"version":3,"sources":["../../../src/input-validation/validateOrderNumber.ts"],"names":[],"mappings":";;;;;AAWa,MAAA,4BAAA,GAA+B,CAAE,CAAA,IAAA,CAAK,CAAC,yBAAA,CAA0B,KAAK,KAAO,EAAA,yBAAA,CAA0B,IAAK,CAAA,aAAa,CAAC,EAAA;AAO1H,MAAA,mBAAA,GAAsB,CAAC,KAAe,EAAA,EAAE,aAAa,IAAK,EAAA,GAAgC,EAAO,KAAA;AAC5G,EAAA,MAAM,KAAQ,GAAA,eAAA,CAAA;AACd,EAAI,IAAA,OAAA,CAAQ,KAAK,CAAG,EAAA;AAClB,IAAA,IAAI,CAAC,UAAY,EAAA;AACf,MAAO,OAAA,IAAA,CAAA;AAAA,KACT;AACA,IAAA,OAAO,6BAA6B,IAAK,CAAA,KAAA,CAAA;AAAA,GAC3C;AACA,EAAA,IAAI,CAAC,OAAA,CAAQ,KAAO,EAAA,KAAK,CAAG,EAAA;AAC1B,IAAA,OAAO,6BAA6B,IAAK,CAAA,aAAA,CAAA;AAAA,GAC3C;AAEA,EAAO,OAAA,IAAA,CAAA;AACT","file":"validateOrderNumber.js","sourcesContent":["/*\n * Copyright (c) 2019-2023 AccelByte Inc. All Rights Reserved\n * This is licensed software from AccelByte Inc, for limitations\n * and restrictions contact your company contract manager.\n */\n\nimport isEmpty from 'validator/lib/isEmpty.js'\nimport matches from 'validator/lib/matches.js'\nimport { z } from 'zod'\nimport { CommonValidationErrorType } from './constant/errorType'\n\nexport const ValidateOrderNumberErrorType = z.enum([CommonValidationErrorType.enum.empty, CommonValidationErrorType.enum.invalidFormat])\nexport type ValidateOrderNumberErrorType = z.infer<typeof ValidateOrderNumberErrorType>\n\nexport interface ValidateOrderNumberOptions {\n  isRequired?: boolean\n}\n\nexport const validateOrderNumber = (value: string, { isRequired = true }: ValidateOrderNumberOptions = {}) => {\n  const REGEX = '^O[0-9]{16,}$'\n  if (isEmpty(value)) {\n    if (!isRequired) {\n      return null\n    }\n    return ValidateOrderNumberErrorType.enum.empty\n  }\n  if (!matches(value, REGEX)) {\n    return ValidateOrderNumberErrorType.enum.invalidFormat\n  }\n\n  return null\n}\n"]}