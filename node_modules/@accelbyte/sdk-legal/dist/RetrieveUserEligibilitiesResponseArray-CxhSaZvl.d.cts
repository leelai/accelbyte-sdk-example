import { z } from 'zod';

declare const AcceptAgreementRequest: z.ZodObject<{
    isAccepted: z.ZodBoolean;
    isNeedToSendEventMarketing: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    localizedPolicyVersionId: z.ZodString;
    policyId: z.ZodString;
    policyVersionId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    isAccepted: boolean;
    localizedPolicyVersionId: string;
    policyId: string;
    policyVersionId: string;
    isNeedToSendEventMarketing?: boolean | null | undefined;
}, {
    isAccepted: boolean;
    localizedPolicyVersionId: string;
    policyId: string;
    policyVersionId: string;
    isNeedToSendEventMarketing?: boolean | null | undefined;
}>;
interface AcceptAgreementRequest extends z.TypeOf<typeof AcceptAgreementRequest> {
}

declare const PagedRetrieveUserAcceptedAgreementResponse: z.ZodObject<{
    data: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        displayName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        email: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        id: z.ZodString;
        isAccepted: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        localizedPolicyVersion: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            attachmentChecksum: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            attachmentLocation: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            attachmentVersionIdentifier: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            contentType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            id: z.ZodString;
            isDefaultSelection: z.ZodBoolean;
            localeCode: z.ZodString;
            publishedDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        }, {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        }>>>;
        namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        policyName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        policyType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        publisherUserId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        signingDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        userId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        namespace?: string | null | undefined;
        isAccepted?: boolean | null | undefined;
        createdAt?: string | null | undefined;
        updatedAt?: string | null | undefined;
        displayName?: string | null | undefined;
        email?: string | null | undefined;
        localizedPolicyVersion?: {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        } | null | undefined;
        policyName?: string | null | undefined;
        policyType?: string | null | undefined;
        publisherUserId?: string | null | undefined;
        signingDate?: string | null | undefined;
        userId?: string | null | undefined;
        username?: string | null | undefined;
    }, {
        id: string;
        namespace?: string | null | undefined;
        isAccepted?: boolean | null | undefined;
        createdAt?: string | null | undefined;
        updatedAt?: string | null | undefined;
        displayName?: string | null | undefined;
        email?: string | null | undefined;
        localizedPolicyVersion?: {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        } | null | undefined;
        policyName?: string | null | undefined;
        policyType?: string | null | undefined;
        publisherUserId?: string | null | undefined;
        signingDate?: string | null | undefined;
        userId?: string | null | undefined;
        username?: string | null | undefined;
    }>, "many">>>;
    paging: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        next: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        previous: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        next?: string | null | undefined;
        previous?: string | null | undefined;
    }, {
        next?: string | null | undefined;
        previous?: string | null | undefined;
    }>>>;
}, "strip", z.ZodTypeAny, {
    data?: {
        id: string;
        namespace?: string | null | undefined;
        isAccepted?: boolean | null | undefined;
        createdAt?: string | null | undefined;
        updatedAt?: string | null | undefined;
        displayName?: string | null | undefined;
        email?: string | null | undefined;
        localizedPolicyVersion?: {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        } | null | undefined;
        policyName?: string | null | undefined;
        policyType?: string | null | undefined;
        publisherUserId?: string | null | undefined;
        signingDate?: string | null | undefined;
        userId?: string | null | undefined;
        username?: string | null | undefined;
    }[] | null | undefined;
    paging?: {
        next?: string | null | undefined;
        previous?: string | null | undefined;
    } | null | undefined;
}, {
    data?: {
        id: string;
        namespace?: string | null | undefined;
        isAccepted?: boolean | null | undefined;
        createdAt?: string | null | undefined;
        updatedAt?: string | null | undefined;
        displayName?: string | null | undefined;
        email?: string | null | undefined;
        localizedPolicyVersion?: {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        } | null | undefined;
        policyName?: string | null | undefined;
        policyType?: string | null | undefined;
        publisherUserId?: string | null | undefined;
        signingDate?: string | null | undefined;
        userId?: string | null | undefined;
        username?: string | null | undefined;
    }[] | null | undefined;
    paging?: {
        next?: string | null | undefined;
        previous?: string | null | undefined;
    } | null | undefined;
}>;
interface PagedRetrieveUserAcceptedAgreementResponse extends z.TypeOf<typeof PagedRetrieveUserAcceptedAgreementResponse> {
}

declare const RetrieveAcceptedAgreementResponseArray: z.ZodArray<z.ZodObject<{
    countryCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    displayVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    isAccepted: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    localizedPolicyVersion: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        attachmentChecksum: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        attachmentLocation: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        attachmentVersionIdentifier: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        contentType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        id: z.ZodString;
        isDefaultSelection: z.ZodBoolean;
        localeCode: z.ZodString;
        publishedDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        isDefaultSelection: boolean;
        localeCode: string;
        status?: string | null | undefined;
        attachmentChecksum?: string | null | undefined;
        attachmentLocation?: string | null | undefined;
        attachmentVersionIdentifier?: string | null | undefined;
        contentType?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }, {
        id: string;
        isDefaultSelection: boolean;
        localeCode: string;
        status?: string | null | undefined;
        attachmentChecksum?: string | null | undefined;
        attachmentLocation?: string | null | undefined;
        attachmentVersionIdentifier?: string | null | undefined;
        contentType?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }>>>;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    policyId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    policyName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    policyType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    signingDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    userId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    namespace?: string | null | undefined;
    isAccepted?: boolean | null | undefined;
    policyId?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    localizedPolicyVersion?: {
        id: string;
        isDefaultSelection: boolean;
        localeCode: string;
        status?: string | null | undefined;
        attachmentChecksum?: string | null | undefined;
        attachmentLocation?: string | null | undefined;
        attachmentVersionIdentifier?: string | null | undefined;
        contentType?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    } | null | undefined;
    policyName?: string | null | undefined;
    policyType?: string | null | undefined;
    signingDate?: string | null | undefined;
    userId?: string | null | undefined;
    countryCode?: string | null | undefined;
    displayVersion?: string | null | undefined;
    tags?: string[] | null | undefined;
}, {
    id: string;
    namespace?: string | null | undefined;
    isAccepted?: boolean | null | undefined;
    policyId?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    localizedPolicyVersion?: {
        id: string;
        isDefaultSelection: boolean;
        localeCode: string;
        status?: string | null | undefined;
        attachmentChecksum?: string | null | undefined;
        attachmentLocation?: string | null | undefined;
        attachmentVersionIdentifier?: string | null | undefined;
        contentType?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    } | null | undefined;
    policyName?: string | null | undefined;
    policyType?: string | null | undefined;
    signingDate?: string | null | undefined;
    userId?: string | null | undefined;
    countryCode?: string | null | undefined;
    displayVersion?: string | null | undefined;
    tags?: string[] | null | undefined;
}>, "many">;
interface RetrieveAcceptedAgreementResponseArray extends z.TypeOf<typeof RetrieveAcceptedAgreementResponseArray> {
}

declare const DownloadExportedAgreementsInCsvResponse: z.ZodObject<{
    done: z.ZodBoolean;
    downloadUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    done: boolean;
    downloadUrl?: string | null | undefined;
}, {
    done: boolean;
    downloadUrl?: string | null | undefined;
}>;
interface DownloadExportedAgreementsInCsvResponse extends z.TypeOf<typeof DownloadExportedAgreementsInCsvResponse> {
}

declare const InitiateExportAgreementsToCsvResponse: z.ZodObject<{
    exportId: z.ZodString;
    processing: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    exportId: string;
    processing: boolean;
}, {
    exportId: string;
    processing: boolean;
}>;
interface InitiateExportAgreementsToCsvResponse extends z.TypeOf<typeof InitiateExportAgreementsToCsvResponse> {
}

declare const UserAgreementsResponseArray: z.ZodArray<z.ZodObject<{
    agreements: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        countryCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        displayVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        id: z.ZodString;
        isAccepted: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        localizedPolicyVersion: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            attachmentChecksum: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            attachmentLocation: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            attachmentVersionIdentifier: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            contentType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            id: z.ZodString;
            isDefaultSelection: z.ZodBoolean;
            localeCode: z.ZodString;
            publishedDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        }, {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        }>>>;
        namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        policyId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        policyName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        policyType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        signingDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        userId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        namespace?: string | null | undefined;
        isAccepted?: boolean | null | undefined;
        policyId?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        localizedPolicyVersion?: {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        } | null | undefined;
        policyName?: string | null | undefined;
        policyType?: string | null | undefined;
        signingDate?: string | null | undefined;
        userId?: string | null | undefined;
        countryCode?: string | null | undefined;
        displayVersion?: string | null | undefined;
        tags?: string[] | null | undefined;
    }, {
        id: string;
        namespace?: string | null | undefined;
        isAccepted?: boolean | null | undefined;
        policyId?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        localizedPolicyVersion?: {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        } | null | undefined;
        policyName?: string | null | undefined;
        policyType?: string | null | undefined;
        signingDate?: string | null | undefined;
        userId?: string | null | undefined;
        countryCode?: string | null | undefined;
        displayVersion?: string | null | undefined;
        tags?: string[] | null | undefined;
    }>, "many">>>;
    userId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    userId?: string | null | undefined;
    agreements?: {
        id: string;
        namespace?: string | null | undefined;
        isAccepted?: boolean | null | undefined;
        policyId?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        localizedPolicyVersion?: {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        } | null | undefined;
        policyName?: string | null | undefined;
        policyType?: string | null | undefined;
        signingDate?: string | null | undefined;
        userId?: string | null | undefined;
        countryCode?: string | null | undefined;
        displayVersion?: string | null | undefined;
        tags?: string[] | null | undefined;
    }[] | null | undefined;
}, {
    userId?: string | null | undefined;
    agreements?: {
        id: string;
        namespace?: string | null | undefined;
        isAccepted?: boolean | null | undefined;
        policyId?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        localizedPolicyVersion?: {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        } | null | undefined;
        policyName?: string | null | undefined;
        policyType?: string | null | undefined;
        signingDate?: string | null | undefined;
        userId?: string | null | undefined;
        countryCode?: string | null | undefined;
        displayVersion?: string | null | undefined;
        tags?: string[] | null | undefined;
    }[] | null | undefined;
}>, "many">;
interface UserAgreementsResponseArray extends z.TypeOf<typeof UserAgreementsResponseArray> {
}

declare const UsersAgreementsRequest: z.ZodObject<{
    currentPublishedOnly: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    userIds: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    userIds: string[];
    currentPublishedOnly?: boolean | null | undefined;
}, {
    userIds: string[];
    currentPublishedOnly?: boolean | null | undefined;
}>;
interface UsersAgreementsRequest extends z.TypeOf<typeof UsersAgreementsRequest> {
}

declare const CreateBasePolicyRequest: z.ZodObject<{
    affectedClientIds: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    affectedCountries: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    basePolicyName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    isHidden: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    isHiddenPublic: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    typeId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    namespace?: string | null | undefined;
    description?: string | null | undefined;
    tags?: string[] | null | undefined;
    affectedClientIds?: string[] | null | undefined;
    affectedCountries?: string[] | null | undefined;
    basePolicyName?: string | null | undefined;
    isHidden?: boolean | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
    typeId?: string | null | undefined;
}, {
    namespace?: string | null | undefined;
    description?: string | null | undefined;
    tags?: string[] | null | undefined;
    affectedClientIds?: string[] | null | undefined;
    affectedCountries?: string[] | null | undefined;
    basePolicyName?: string | null | undefined;
    isHidden?: boolean | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
    typeId?: string | null | undefined;
}>;
interface CreateBasePolicyRequest extends z.TypeOf<typeof CreateBasePolicyRequest> {
}

declare const CreateBasePolicyResponse: z.ZodObject<{
    affectedClientIds: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    affectedCountries: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    globalPolicyName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    isHidden: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    isHiddenPublic: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    policyId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    typeId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    namespace?: string | null | undefined;
    policyId?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    tags?: string[] | null | undefined;
    affectedClientIds?: string[] | null | undefined;
    affectedCountries?: string[] | null | undefined;
    isHidden?: boolean | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
    typeId?: string | null | undefined;
    globalPolicyName?: string | null | undefined;
}, {
    id: string;
    namespace?: string | null | undefined;
    policyId?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    tags?: string[] | null | undefined;
    affectedClientIds?: string[] | null | undefined;
    affectedCountries?: string[] | null | undefined;
    isHidden?: boolean | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
    typeId?: string | null | undefined;
    globalPolicyName?: string | null | undefined;
}>;
interface CreateBasePolicyResponse extends z.TypeOf<typeof CreateBasePolicyResponse> {
}

declare const RetrieveBasePolicyResponse: z.ZodObject<{
    affectedClientIds: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    basePolicyName: z.ZodString;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    isHidden: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    isHiddenPublic: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    namespace: z.ZodString;
    policies: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        countryCode: z.ZodString;
        countryGroupCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        id: z.ZodString;
        isDefaultOpted: z.ZodBoolean;
        isDefaultSelection: z.ZodBoolean;
        isMandatory: z.ZodBoolean;
        policyName: z.ZodString;
        readableId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        shouldNotifyOnUpdate: z.ZodBoolean;
        updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    }, {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    }>, "many">>>;
    policyTypeId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    policyTypeName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    id: string;
    basePolicyName: string;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    tags?: string[] | null | undefined;
    affectedClientIds?: string[] | null | undefined;
    isHidden?: boolean | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
    policies?: {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    }[] | null | undefined;
    policyTypeId?: string | null | undefined;
    policyTypeName?: string | null | undefined;
}, {
    namespace: string;
    id: string;
    basePolicyName: string;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    tags?: string[] | null | undefined;
    affectedClientIds?: string[] | null | undefined;
    isHidden?: boolean | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
    policies?: {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    }[] | null | undefined;
    policyTypeId?: string | null | undefined;
    policyTypeName?: string | null | undefined;
}>;
interface RetrieveBasePolicyResponse extends z.TypeOf<typeof RetrieveBasePolicyResponse> {
}

declare const RetrieveBasePolicyResponseArray: z.ZodArray<z.ZodObject<{
    affectedClientIds: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    basePolicyName: z.ZodString;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    isHidden: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    isHiddenPublic: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    namespace: z.ZodString;
    policies: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        countryCode: z.ZodString;
        countryGroupCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        id: z.ZodString;
        isDefaultOpted: z.ZodBoolean;
        isDefaultSelection: z.ZodBoolean;
        isMandatory: z.ZodBoolean;
        policyName: z.ZodString;
        readableId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        shouldNotifyOnUpdate: z.ZodBoolean;
        updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    }, {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    }>, "many">>>;
    policyTypeId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    policyTypeName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    id: string;
    basePolicyName: string;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    tags?: string[] | null | undefined;
    affectedClientIds?: string[] | null | undefined;
    isHidden?: boolean | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
    policies?: {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    }[] | null | undefined;
    policyTypeId?: string | null | undefined;
    policyTypeName?: string | null | undefined;
}, {
    namespace: string;
    id: string;
    basePolicyName: string;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    tags?: string[] | null | undefined;
    affectedClientIds?: string[] | null | undefined;
    isHidden?: boolean | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
    policies?: {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    }[] | null | undefined;
    policyTypeId?: string | null | undefined;
    policyTypeName?: string | null | undefined;
}>, "many">;
interface RetrieveBasePolicyResponseArray extends z.TypeOf<typeof RetrieveBasePolicyResponseArray> {
}

declare const RetrievePolicyResponse: z.ZodObject<{
    countryCode: z.ZodString;
    countryGroupCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    isDefaultOpted: z.ZodBoolean;
    isDefaultSelection: z.ZodBoolean;
    isMandatory: z.ZodBoolean;
    policyName: z.ZodString;
    policyVersions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        displayVersion: z.ZodString;
        id: z.ZodString;
        isCommitted: z.ZodBoolean;
        isInEffect: z.ZodBoolean;
        publishedDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }, {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }>, "many">>>;
    readableId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    shouldNotifyOnUpdate: z.ZodBoolean;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    isDefaultSelection: boolean;
    policyName: string;
    countryCode: string;
    isDefaultOpted: boolean;
    isMandatory: boolean;
    shouldNotifyOnUpdate: boolean;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    countryGroupCode?: string | null | undefined;
    readableId?: string | null | undefined;
    policyVersions?: {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }[] | null | undefined;
}, {
    id: string;
    isDefaultSelection: boolean;
    policyName: string;
    countryCode: string;
    isDefaultOpted: boolean;
    isMandatory: boolean;
    shouldNotifyOnUpdate: boolean;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    countryGroupCode?: string | null | undefined;
    readableId?: string | null | undefined;
    policyVersions?: {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }[] | null | undefined;
}>;
interface RetrievePolicyResponse extends z.TypeOf<typeof RetrievePolicyResponse> {
}

declare const RetrievePolicyTypeResponseArray: z.ZodArray<z.ZodObject<{
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    isNeedDocument: z.ZodBoolean;
    policyTypeName: z.ZodString;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    policyTypeName: string;
    isNeedDocument: boolean;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
}, {
    id: string;
    policyTypeName: string;
    isNeedDocument: boolean;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
}>, "many">;
interface RetrievePolicyTypeResponseArray extends z.TypeOf<typeof RetrievePolicyTypeResponseArray> {
}

declare const UpdateBasePolicyRequest: z.ZodObject<{
    affectedClientIds: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    affectedCountries: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    basePolicyName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    isHidden: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    isHiddenPublic: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
}, "strip", z.ZodTypeAny, {
    namespace?: string | null | undefined;
    description?: string | null | undefined;
    tags?: string[] | null | undefined;
    affectedClientIds?: string[] | null | undefined;
    affectedCountries?: string[] | null | undefined;
    basePolicyName?: string | null | undefined;
    isHidden?: boolean | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
}, {
    namespace?: string | null | undefined;
    description?: string | null | undefined;
    tags?: string[] | null | undefined;
    affectedClientIds?: string[] | null | undefined;
    affectedCountries?: string[] | null | undefined;
    basePolicyName?: string | null | undefined;
    isHidden?: boolean | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
}>;
interface UpdateBasePolicyRequest extends z.TypeOf<typeof UpdateBasePolicyRequest> {
}

declare const UpdateBasePolicyResponse: z.ZodObject<{
    affectedClientIds: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    affectedCountries: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    globalPolicyName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    isHidden: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    isHiddenPublic: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    namespace: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    policyId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    typeId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    namespace?: string | null | undefined;
    policyId?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    tags?: string[] | null | undefined;
    affectedClientIds?: string[] | null | undefined;
    affectedCountries?: string[] | null | undefined;
    isHidden?: boolean | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
    typeId?: string | null | undefined;
    globalPolicyName?: string | null | undefined;
}, {
    id: string;
    namespace?: string | null | undefined;
    policyId?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    tags?: string[] | null | undefined;
    affectedClientIds?: string[] | null | undefined;
    affectedCountries?: string[] | null | undefined;
    isHidden?: boolean | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
    typeId?: string | null | undefined;
    globalPolicyName?: string | null | undefined;
}>;
interface UpdateBasePolicyResponse extends z.TypeOf<typeof UpdateBasePolicyResponse> {
}

declare const CreateBasePolicyRequestV2: z.ZodObject<{
    affectedClientIds: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    affectedCountries: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    basePolicyName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    isHidden: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    isHiddenPublic: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    typeId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    description?: string | null | undefined;
    tags?: string[] | null | undefined;
    affectedClientIds?: string[] | null | undefined;
    affectedCountries?: string[] | null | undefined;
    basePolicyName?: string | null | undefined;
    isHidden?: boolean | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
    typeId?: string | null | undefined;
}, {
    description?: string | null | undefined;
    tags?: string[] | null | undefined;
    affectedClientIds?: string[] | null | undefined;
    affectedCountries?: string[] | null | undefined;
    basePolicyName?: string | null | undefined;
    isHidden?: boolean | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
    typeId?: string | null | undefined;
}>;
interface CreateBasePolicyRequestV2 extends z.TypeOf<typeof CreateBasePolicyRequestV2> {
}

declare const UpdateBasePolicyRequestV2: z.ZodObject<{
    affectedClientIds: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    affectedCountries: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    basePolicyName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    isHidden: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    isHiddenPublic: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
}, "strip", z.ZodTypeAny, {
    description?: string | null | undefined;
    tags?: string[] | null | undefined;
    affectedClientIds?: string[] | null | undefined;
    affectedCountries?: string[] | null | undefined;
    basePolicyName?: string | null | undefined;
    isHidden?: boolean | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
}, {
    description?: string | null | undefined;
    tags?: string[] | null | undefined;
    affectedClientIds?: string[] | null | undefined;
    affectedCountries?: string[] | null | undefined;
    basePolicyName?: string | null | undefined;
    isHidden?: boolean | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
}>;
interface UpdateBasePolicyRequestV2 extends z.TypeOf<typeof UpdateBasePolicyRequestV2> {
}

declare const CreateLocalizedPolicyVersionRequest: z.ZodObject<{
    contentType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    localeCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    contentType?: string | null | undefined;
    description?: string | null | undefined;
    localeCode?: string | null | undefined;
}, {
    contentType?: string | null | undefined;
    description?: string | null | undefined;
    localeCode?: string | null | undefined;
}>;
interface CreateLocalizedPolicyVersionRequest extends z.TypeOf<typeof CreateLocalizedPolicyVersionRequest> {
}

declare const CreateLocalizedPolicyVersionResponse: z.ZodObject<{
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    localeCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    localeCode?: string | null | undefined;
    updatedAt?: string | null | undefined;
}, {
    id: string;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    localeCode?: string | null | undefined;
    updatedAt?: string | null | undefined;
}>;
interface CreateLocalizedPolicyVersionResponse extends z.TypeOf<typeof CreateLocalizedPolicyVersionResponse> {
}

declare const RetrieveLocalizedPolicyVersionResponse: z.ZodObject<{
    attachmentChecksum: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    attachmentLocation: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    attachmentVersionIdentifier: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    baseUrls: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    contentType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    localeCode: z.ZodString;
    policy: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        countryCode: z.ZodString;
        countryGroupCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        id: z.ZodString;
        isDefaultOpted: z.ZodBoolean;
        isDefaultSelection: z.ZodBoolean;
        isMandatory: z.ZodBoolean;
        policyName: z.ZodString;
        readableId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        shouldNotifyOnUpdate: z.ZodBoolean;
        updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    }, {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    }>>>;
    policyVersion: z.ZodObject<{
        createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        displayVersion: z.ZodString;
        id: z.ZodString;
        isCommitted: z.ZodBoolean;
        isInEffect: z.ZodBoolean;
        publishedDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }, {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    localeCode: string;
    policyVersion: {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    };
    attachmentChecksum?: string | null | undefined;
    attachmentLocation?: string | null | undefined;
    attachmentVersionIdentifier?: string | null | undefined;
    contentType?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    baseUrls?: string[] | null | undefined;
    policy?: {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    } | null | undefined;
}, {
    id: string;
    localeCode: string;
    policyVersion: {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    };
    attachmentChecksum?: string | null | undefined;
    attachmentLocation?: string | null | undefined;
    attachmentVersionIdentifier?: string | null | undefined;
    contentType?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    baseUrls?: string[] | null | undefined;
    policy?: {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    } | null | undefined;
}>;
interface RetrieveLocalizedPolicyVersionResponse extends z.TypeOf<typeof RetrieveLocalizedPolicyVersionResponse> {
}

declare const RetrieveLocalizedPolicyVersionResponseArray: z.ZodArray<z.ZodObject<{
    attachmentChecksum: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    attachmentLocation: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    attachmentVersionIdentifier: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    baseUrls: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    contentType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    localeCode: z.ZodString;
    policy: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        countryCode: z.ZodString;
        countryGroupCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        id: z.ZodString;
        isDefaultOpted: z.ZodBoolean;
        isDefaultSelection: z.ZodBoolean;
        isMandatory: z.ZodBoolean;
        policyName: z.ZodString;
        readableId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        shouldNotifyOnUpdate: z.ZodBoolean;
        updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    }, {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    }>>>;
    policyVersion: z.ZodObject<{
        createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        displayVersion: z.ZodString;
        id: z.ZodString;
        isCommitted: z.ZodBoolean;
        isInEffect: z.ZodBoolean;
        publishedDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }, {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    localeCode: string;
    policyVersion: {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    };
    attachmentChecksum?: string | null | undefined;
    attachmentLocation?: string | null | undefined;
    attachmentVersionIdentifier?: string | null | undefined;
    contentType?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    baseUrls?: string[] | null | undefined;
    policy?: {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    } | null | undefined;
}, {
    id: string;
    localeCode: string;
    policyVersion: {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    };
    attachmentChecksum?: string | null | undefined;
    attachmentLocation?: string | null | undefined;
    attachmentVersionIdentifier?: string | null | undefined;
    contentType?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    baseUrls?: string[] | null | undefined;
    policy?: {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    } | null | undefined;
}>, "many">;
interface RetrieveLocalizedPolicyVersionResponseArray extends z.TypeOf<typeof RetrieveLocalizedPolicyVersionResponseArray> {
}

declare const UpdateLocalizedPolicyVersionRequest: z.ZodObject<{
    attachmentChecksum: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    attachmentLocation: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    attachmentVersionIdentifier: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    contentType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    attachmentChecksum?: string | null | undefined;
    attachmentLocation?: string | null | undefined;
    attachmentVersionIdentifier?: string | null | undefined;
    contentType?: string | null | undefined;
    description?: string | null | undefined;
}, {
    attachmentChecksum?: string | null | undefined;
    attachmentLocation?: string | null | undefined;
    attachmentVersionIdentifier?: string | null | undefined;
    contentType?: string | null | undefined;
    description?: string | null | undefined;
}>;
interface UpdateLocalizedPolicyVersionRequest extends z.TypeOf<typeof UpdateLocalizedPolicyVersionRequest> {
}

declare const UpdateLocalizedPolicyVersionResponse: z.ZodObject<{
    attachmentChecksum: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    attachmentLocation: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    attachmentVersionIdentifier: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    contentType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    localeCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    attachmentChecksum?: string | null | undefined;
    attachmentLocation?: string | null | undefined;
    attachmentVersionIdentifier?: string | null | undefined;
    contentType?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    localeCode?: string | null | undefined;
    updatedAt?: string | null | undefined;
}, {
    id: string;
    attachmentChecksum?: string | null | undefined;
    attachmentLocation?: string | null | undefined;
    attachmentVersionIdentifier?: string | null | undefined;
    contentType?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    localeCode?: string | null | undefined;
    updatedAt?: string | null | undefined;
}>;
interface UpdateLocalizedPolicyVersionResponse extends z.TypeOf<typeof UpdateLocalizedPolicyVersionResponse> {
}

declare const UploadLocalizedPolicyVersionAttachmentResponse: z.ZodObject<{
    attachmentChecksum: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    attachmentLocation: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    attachmentUploadUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    attachmentChecksum?: string | null | undefined;
    attachmentLocation?: string | null | undefined;
    attachmentUploadUrl?: string | null | undefined;
}, {
    attachmentChecksum?: string | null | undefined;
    attachmentLocation?: string | null | undefined;
    attachmentUploadUrl?: string | null | undefined;
}>;
interface UploadLocalizedPolicyVersionAttachmentResponse extends z.TypeOf<typeof UploadLocalizedPolicyVersionAttachmentResponse> {
}

declare const UploadPolicyVersionAttachmentRequest: z.ZodObject<{
    contentMD5: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    contentType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    contentType?: string | null | undefined;
    contentMD5?: string | null | undefined;
}, {
    contentType?: string | null | undefined;
    contentMD5?: string | null | undefined;
}>;
interface UploadPolicyVersionAttachmentRequest extends z.TypeOf<typeof UploadPolicyVersionAttachmentRequest> {
}

declare const RetrievePolicyResponseArray: z.ZodArray<z.ZodObject<{
    countryCode: z.ZodString;
    countryGroupCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    isDefaultOpted: z.ZodBoolean;
    isDefaultSelection: z.ZodBoolean;
    isMandatory: z.ZodBoolean;
    policyName: z.ZodString;
    policyVersions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        displayVersion: z.ZodString;
        id: z.ZodString;
        isCommitted: z.ZodBoolean;
        isInEffect: z.ZodBoolean;
        publishedDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }, {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }>, "many">>>;
    readableId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    shouldNotifyOnUpdate: z.ZodBoolean;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    isDefaultSelection: boolean;
    policyName: string;
    countryCode: string;
    isDefaultOpted: boolean;
    isMandatory: boolean;
    shouldNotifyOnUpdate: boolean;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    countryGroupCode?: string | null | undefined;
    readableId?: string | null | undefined;
    policyVersions?: {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }[] | null | undefined;
}, {
    id: string;
    isDefaultSelection: boolean;
    policyName: string;
    countryCode: string;
    isDefaultOpted: boolean;
    isMandatory: boolean;
    shouldNotifyOnUpdate: boolean;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    countryGroupCode?: string | null | undefined;
    readableId?: string | null | undefined;
    policyVersions?: {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }[] | null | undefined;
}>, "many">;
interface RetrievePolicyResponseArray extends z.TypeOf<typeof RetrievePolicyResponseArray> {
}

declare const UpdatePolicyRequest: z.ZodObject<{
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    isDefaultOpted: z.ZodBoolean;
    isMandatory: z.ZodBoolean;
    policyName: z.ZodString;
    readableId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    shouldNotifyOnUpdate: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    policyName: string;
    isDefaultOpted: boolean;
    isMandatory: boolean;
    shouldNotifyOnUpdate: boolean;
    description?: string | null | undefined;
    readableId?: string | null | undefined;
}, {
    policyName: string;
    isDefaultOpted: boolean;
    isMandatory: boolean;
    shouldNotifyOnUpdate: boolean;
    description?: string | null | undefined;
    readableId?: string | null | undefined;
}>;
interface UpdatePolicyRequest extends z.TypeOf<typeof UpdatePolicyRequest> {
}

declare const CreatePolicyVersionRequest: z.ZodObject<{
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    displayVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    isCommitted: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
}, "strip", z.ZodTypeAny, {
    description?: string | null | undefined;
    displayVersion?: string | null | undefined;
    isCommitted?: boolean | null | undefined;
}, {
    description?: string | null | undefined;
    displayVersion?: string | null | undefined;
    isCommitted?: boolean | null | undefined;
}>;
interface CreatePolicyVersionRequest extends z.TypeOf<typeof CreatePolicyVersionRequest> {
}

declare const CreatePolicyVersionResponse: z.ZodObject<{
    basePolicyId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    displayVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    isCommitted: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    displayVersion?: string | null | undefined;
    isCommitted?: boolean | null | undefined;
    basePolicyId?: string | null | undefined;
}, {
    id: string;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    displayVersion?: string | null | undefined;
    isCommitted?: boolean | null | undefined;
    basePolicyId?: string | null | undefined;
}>;
interface CreatePolicyVersionResponse extends z.TypeOf<typeof CreatePolicyVersionResponse> {
}

declare const RetrievePolicyVersionResponseArray: z.ZodArray<z.ZodObject<{
    basePolicyId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    displayVersion: z.ZodString;
    id: z.ZodString;
    isCommitted: z.ZodBoolean;
    isInEffect: z.ZodBoolean;
    localizedPolicyVersions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        attachmentChecksum: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        attachmentLocation: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        attachmentVersionIdentifier: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        contentType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        id: z.ZodString;
        isDefaultSelection: z.ZodBoolean;
        localeCode: z.ZodString;
        publishedDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        isDefaultSelection: boolean;
        localeCode: string;
        status?: string | null | undefined;
        attachmentChecksum?: string | null | undefined;
        attachmentLocation?: string | null | undefined;
        attachmentVersionIdentifier?: string | null | undefined;
        contentType?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }, {
        id: string;
        isDefaultSelection: boolean;
        localeCode: string;
        status?: string | null | undefined;
        attachmentChecksum?: string | null | undefined;
        attachmentLocation?: string | null | undefined;
        attachmentVersionIdentifier?: string | null | undefined;
        contentType?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }>, "many">>>;
    policyId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    publishedDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    displayVersion: string;
    isCommitted: boolean;
    isInEffect: boolean;
    status?: string | null | undefined;
    policyId?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    publishedDate?: string | null | undefined;
    updatedAt?: string | null | undefined;
    basePolicyId?: string | null | undefined;
    localizedPolicyVersions?: {
        id: string;
        isDefaultSelection: boolean;
        localeCode: string;
        status?: string | null | undefined;
        attachmentChecksum?: string | null | undefined;
        attachmentLocation?: string | null | undefined;
        attachmentVersionIdentifier?: string | null | undefined;
        contentType?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }[] | null | undefined;
}, {
    id: string;
    displayVersion: string;
    isCommitted: boolean;
    isInEffect: boolean;
    status?: string | null | undefined;
    policyId?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    publishedDate?: string | null | undefined;
    updatedAt?: string | null | undefined;
    basePolicyId?: string | null | undefined;
    localizedPolicyVersions?: {
        id: string;
        isDefaultSelection: boolean;
        localeCode: string;
        status?: string | null | undefined;
        attachmentChecksum?: string | null | undefined;
        attachmentLocation?: string | null | undefined;
        attachmentVersionIdentifier?: string | null | undefined;
        contentType?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }[] | null | undefined;
}>, "many">;
interface RetrievePolicyVersionResponseArray extends z.TypeOf<typeof RetrievePolicyVersionResponseArray> {
}

declare const UpdatePolicyVersionRequest: z.ZodObject<{
    description: z.ZodString;
    displayVersion: z.ZodString;
    isCommitted: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    description: string;
    displayVersion: string;
    isCommitted: boolean;
}, {
    description: string;
    displayVersion: string;
    isCommitted: boolean;
}>;
interface UpdatePolicyVersionRequest extends z.TypeOf<typeof UpdatePolicyVersionRequest> {
}

declare const UpdatePolicyVersionResponse: z.ZodObject<{
    basePolicyId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    displayVersion: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    isCommitted: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    publishedDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    status?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    publishedDate?: string | null | undefined;
    updatedAt?: string | null | undefined;
    displayVersion?: string | null | undefined;
    isCommitted?: boolean | null | undefined;
    basePolicyId?: string | null | undefined;
}, {
    id: string;
    status?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    publishedDate?: string | null | undefined;
    updatedAt?: string | null | undefined;
    displayVersion?: string | null | undefined;
    isCommitted?: boolean | null | undefined;
    basePolicyId?: string | null | undefined;
}>;
interface UpdatePolicyVersionResponse extends z.TypeOf<typeof UpdatePolicyVersionResponse> {
}

declare const AcceptAgreementResponse: z.ZodObject<{
    comply: z.ZodBoolean;
    proceed: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    comply: boolean;
    proceed: boolean;
}, {
    comply: boolean;
    proceed: boolean;
}>;
interface AcceptAgreementResponse extends z.TypeOf<typeof AcceptAgreementResponse> {
}

declare const RetrieveUserEligibilitiesIndirectResponse: z.ZodObject<{
    isComply: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    isComply: boolean;
}, {
    isComply: boolean;
}>;
interface RetrieveUserEligibilitiesIndirectResponse extends z.TypeOf<typeof RetrieveUserEligibilitiesIndirectResponse> {
}

declare const RetrieveUserInfoCacheStatusResponseArray: z.ZodArray<z.ZodObject<{
    lastUpdatedAt: z.ZodString;
    namespace: z.ZodString;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    lastUpdatedAt: string;
}, {
    namespace: string;
    lastUpdatedAt: string;
}>, "many">;
interface RetrieveUserInfoCacheStatusResponseArray extends z.TypeOf<typeof RetrieveUserInfoCacheStatusResponseArray> {
}

declare const LegalReadinessStatusResponse: z.ZodObject<{
    isReady: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
}, "strip", z.ZodTypeAny, {
    isReady?: boolean | null | undefined;
}, {
    isReady?: boolean | null | undefined;
}>;
interface LegalReadinessStatusResponse extends z.TypeOf<typeof LegalReadinessStatusResponse> {
}

declare const RetrieveLocalizedPolicyVersionPublicResponse: z.ZodObject<{
    attachmentChecksum: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    attachmentLocation: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    attachmentVersionIdentifier: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    basePolicyId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    baseUrls: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    contentType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    isHidden: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    localeCode: z.ZodString;
    namespace: z.ZodString;
    policy: z.ZodObject<{
        countryCode: z.ZodString;
        countryGroupCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        id: z.ZodString;
        isDefaultOpted: z.ZodBoolean;
        isDefaultSelection: z.ZodBoolean;
        isMandatory: z.ZodBoolean;
        policyName: z.ZodString;
        readableId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        shouldNotifyOnUpdate: z.ZodBoolean;
        updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    }, {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    }>;
    policyVersion: z.ZodObject<{
        createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        displayVersion: z.ZodString;
        id: z.ZodString;
        isCommitted: z.ZodBoolean;
        isInEffect: z.ZodBoolean;
        publishedDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }, {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    }>;
    tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    id: string;
    localeCode: string;
    policy: {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    };
    policyVersion: {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    };
    attachmentChecksum?: string | null | undefined;
    attachmentLocation?: string | null | undefined;
    attachmentVersionIdentifier?: string | null | undefined;
    contentType?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    tags?: string[] | null | undefined;
    isHidden?: boolean | null | undefined;
    baseUrls?: string[] | null | undefined;
    basePolicyId?: string | null | undefined;
}, {
    namespace: string;
    id: string;
    localeCode: string;
    policy: {
        id: string;
        isDefaultSelection: boolean;
        policyName: string;
        countryCode: string;
        isDefaultOpted: boolean;
        isMandatory: boolean;
        shouldNotifyOnUpdate: boolean;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        updatedAt?: string | null | undefined;
        countryGroupCode?: string | null | undefined;
        readableId?: string | null | undefined;
    };
    policyVersion: {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
    };
    attachmentChecksum?: string | null | undefined;
    attachmentLocation?: string | null | undefined;
    attachmentVersionIdentifier?: string | null | undefined;
    contentType?: string | null | undefined;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    tags?: string[] | null | undefined;
    isHidden?: boolean | null | undefined;
    baseUrls?: string[] | null | undefined;
    basePolicyId?: string | null | undefined;
}>;
interface RetrieveLocalizedPolicyVersionPublicResponse extends z.TypeOf<typeof RetrieveLocalizedPolicyVersionPublicResponse> {
}

declare const RetrievePolicyPublicResponseArray: z.ZodArray<z.ZodObject<{
    basePolicyId: z.ZodString;
    baseUrls: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    countryCode: z.ZodString;
    countryGroupCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    id: z.ZodString;
    isDefaultOpted: z.ZodBoolean;
    isDefaultSelection: z.ZodBoolean;
    isMandatory: z.ZodBoolean;
    namespace: z.ZodString;
    policyName: z.ZodString;
    policyType: z.ZodString;
    policyVersions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        displayVersion: z.ZodString;
        id: z.ZodString;
        isCommitted: z.ZodBoolean;
        isInEffect: z.ZodBoolean;
        localizedPolicyVersions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            attachmentChecksum: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            attachmentLocation: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            attachmentVersionIdentifier: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            contentType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            id: z.ZodString;
            isDefaultSelection: z.ZodBoolean;
            localeCode: z.ZodString;
            publishedDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        }, {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        }>, "many">>>;
        publishedDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
        localizedPolicyVersions?: {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        }[] | null | undefined;
    }, {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
        localizedPolicyVersions?: {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        }[] | null | undefined;
    }>, "many">>>;
    readableId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    shouldNotifyOnUpdate: z.ZodBoolean;
    tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    id: string;
    isDefaultSelection: boolean;
    policyName: string;
    policyType: string;
    countryCode: string;
    isDefaultOpted: boolean;
    isMandatory: boolean;
    shouldNotifyOnUpdate: boolean;
    basePolicyId: string;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    tags?: string[] | null | undefined;
    countryGroupCode?: string | null | undefined;
    readableId?: string | null | undefined;
    policyVersions?: {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
        localizedPolicyVersions?: {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        }[] | null | undefined;
    }[] | null | undefined;
    baseUrls?: string[] | null | undefined;
}, {
    namespace: string;
    id: string;
    isDefaultSelection: boolean;
    policyName: string;
    policyType: string;
    countryCode: string;
    isDefaultOpted: boolean;
    isMandatory: boolean;
    shouldNotifyOnUpdate: boolean;
    basePolicyId: string;
    createdAt?: string | null | undefined;
    description?: string | null | undefined;
    updatedAt?: string | null | undefined;
    tags?: string[] | null | undefined;
    countryGroupCode?: string | null | undefined;
    readableId?: string | null | undefined;
    policyVersions?: {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
        localizedPolicyVersions?: {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        }[] | null | undefined;
    }[] | null | undefined;
    baseUrls?: string[] | null | undefined;
}>, "many">;
interface RetrievePolicyPublicResponseArray extends z.TypeOf<typeof RetrievePolicyPublicResponseArray> {
}

declare const RetrieveUserEligibilitiesResponseArray: z.ZodArray<z.ZodObject<{
    baseUrls: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    countryCode: z.ZodString;
    countryGroupCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    isAccepted: z.ZodBoolean;
    isHiddenPublic: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    isMandatory: z.ZodBoolean;
    namespace: z.ZodString;
    policyId: z.ZodString;
    policyName: z.ZodString;
    policyType: z.ZodString;
    policyVersions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        displayVersion: z.ZodString;
        id: z.ZodString;
        isCommitted: z.ZodBoolean;
        isInEffect: z.ZodBoolean;
        localizedPolicyVersions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            attachmentChecksum: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            attachmentLocation: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            attachmentVersionIdentifier: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            contentType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            createdAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            id: z.ZodString;
            isDefaultSelection: z.ZodBoolean;
            localeCode: z.ZodString;
            publishedDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        }, {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        }>, "many">>>;
        publishedDate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        status: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        updatedAt: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
        localizedPolicyVersions?: {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        }[] | null | undefined;
    }, {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
        localizedPolicyVersions?: {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        }[] | null | undefined;
    }>, "many">>>;
    readableId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    namespace: string;
    isAccepted: boolean;
    policyId: string;
    policyName: string;
    policyType: string;
    countryCode: string;
    isMandatory: boolean;
    description?: string | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
    countryGroupCode?: string | null | undefined;
    readableId?: string | null | undefined;
    policyVersions?: {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
        localizedPolicyVersions?: {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        }[] | null | undefined;
    }[] | null | undefined;
    baseUrls?: string[] | null | undefined;
}, {
    namespace: string;
    isAccepted: boolean;
    policyId: string;
    policyName: string;
    policyType: string;
    countryCode: string;
    isMandatory: boolean;
    description?: string | null | undefined;
    isHiddenPublic?: boolean | null | undefined;
    countryGroupCode?: string | null | undefined;
    readableId?: string | null | undefined;
    policyVersions?: {
        id: string;
        displayVersion: string;
        isCommitted: boolean;
        isInEffect: boolean;
        status?: string | null | undefined;
        createdAt?: string | null | undefined;
        description?: string | null | undefined;
        publishedDate?: string | null | undefined;
        updatedAt?: string | null | undefined;
        localizedPolicyVersions?: {
            id: string;
            isDefaultSelection: boolean;
            localeCode: string;
            status?: string | null | undefined;
            attachmentChecksum?: string | null | undefined;
            attachmentLocation?: string | null | undefined;
            attachmentVersionIdentifier?: string | null | undefined;
            contentType?: string | null | undefined;
            createdAt?: string | null | undefined;
            description?: string | null | undefined;
            publishedDate?: string | null | undefined;
            updatedAt?: string | null | undefined;
        }[] | null | undefined;
    }[] | null | undefined;
    baseUrls?: string[] | null | undefined;
}>, "many">;
interface RetrieveUserEligibilitiesResponseArray extends z.TypeOf<typeof RetrieveUserEligibilitiesResponseArray> {
}

export { AcceptAgreementRequest as A, RetrieveUserEligibilitiesIndirectResponse as B, CreateBasePolicyRequest as C, DownloadExportedAgreementsInCsvResponse as D, RetrieveUserInfoCacheStatusResponseArray as E, RetrieveUserEligibilitiesResponseArray as F, RetrieveLocalizedPolicyVersionPublicResponse as G, RetrievePolicyPublicResponseArray as H, InitiateExportAgreementsToCsvResponse as I, LegalReadinessStatusResponse as L, PagedRetrieveUserAcceptedAgreementResponse as P, RetrieveAcceptedAgreementResponseArray as R, UsersAgreementsRequest as U, UserAgreementsResponseArray as a, RetrievePolicyTypeResponseArray as b, RetrieveBasePolicyResponseArray as c, CreateBasePolicyResponse as d, RetrieveBasePolicyResponse as e, UpdateBasePolicyRequest as f, UpdateBasePolicyResponse as g, RetrievePolicyResponse as h, CreateBasePolicyRequestV2 as i, UpdateBasePolicyRequestV2 as j, RetrieveLocalizedPolicyVersionResponse as k, UpdateLocalizedPolicyVersionRequest as l, UpdateLocalizedPolicyVersionResponse as m, RetrieveLocalizedPolicyVersionResponseArray as n, CreateLocalizedPolicyVersionRequest as o, CreateLocalizedPolicyVersionResponse as p, UploadPolicyVersionAttachmentRequest as q, UploadLocalizedPolicyVersionAttachmentResponse as r, UpdatePolicyRequest as s, RetrievePolicyResponseArray as t, RetrievePolicyVersionResponseArray as u, CreatePolicyVersionRequest as v, CreatePolicyVersionResponse as w, UpdatePolicyVersionRequest as x, UpdatePolicyVersionResponse as y, AcceptAgreementResponse as z };
